[
    {
        "id": "e2323ccf.2cfc7",
        "type": "tab",
        "label": "HOME",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8019d229.e9ae4",
        "type": "tab",
        "label": "1. Network Resources",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d50fdfad83d796e3",
        "type": "tab",
        "label": "2. (webcam)Collections",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4a6b2213.01ed9c",
        "type": "tab",
        "label": "2. Dataset Collections",
        "disabled": false,
        "info": ""
    },
    {
        "id": "240c18c5.8b60a8",
        "type": "tab",
        "label": "3. Data Annotation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "34822d37.61e7b2",
        "type": "tab",
        "label": "4. Model Training & Validation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3a588fc6.9fb8e",
        "type": "tab",
        "label": "5. Model Optimization & Prediction",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6fa9f0cb.012fa",
        "type": "tab",
        "label": "6. Model Distribution",
        "disabled": false,
        "info": ""
    },
    {
        "id": "052e83af3394bd32",
        "type": "tab",
        "label": "7. Webcam Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5bc58e01.4f95f",
        "type": "tab",
        "label": "Pilot Test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a664a4ce.493678",
        "type": "tab",
        "label": "Edge-Eye",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bbb392c4.3b2f5",
        "type": "tab",
        "label": "Edge_Eye2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2cc7c27a.1e509e",
        "type": "tab",
        "label": "Bigexec",
        "disabled": false,
        "info": ""
    },
    {
        "id": "47ae11e2.286f3",
        "type": "tab",
        "label": "PythonExec",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7a698083.6eeeb",
        "type": "tab",
        "label": "(Flow) Http-POST-json",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c5766a62.95b638",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ee47c5e8.e17bd",
        "type": "tab",
        "label": "Example of ui-list",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7897a710.e88098",
        "type": "tab",
        "label": "Queue Busy",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ec673c9.e0231c",
        "type": "tab",
        "label": "Text File Access",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d475ecd.031771",
        "type": "tab",
        "label": "Button Pannel",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c262c5dc.3751c",
        "type": "tab",
        "label": "(Flow) snmpget",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b33d70d0.51b7b",
        "type": "tab",
        "label": "reading files",
        "disabled": false,
        "info": ""
    },
    {
        "id": "911ed596.217108",
        "type": "tab",
        "label": "Progress Bar",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a3751c6137bb0d6d",
        "type": "tab",
        "label": "httpserver",
        "disabled": false,
        "info": ""
    },
    {
        "id": "20f5b48f.283ffc",
        "type": "subflow",
        "name": "Timer Settings (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 500,
                "y": 320,
                "wires": [
                    {
                        "id": "dd09ea56.667bf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 320,
                "wires": [
                    {
                        "id": "dd09ea56.667bf8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TimerNumber",
                "type": "num",
                "value": ""
            },
            {
                "name": "PayloadON",
                "type": "str",
                "value": ""
            },
            {
                "name": "PayloadOFF",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "2924702c.b33a7",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore`set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library. This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "5eb0bd6b.74b794",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b669ad9e.82c8b",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#c875e6",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "83d3ee50.5bd77",
        "type": "ui_tab",
        "name": "1. Network Configuration & Status",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "31cbb0cf.6cd9b",
        "type": "ui_group",
        "name": "Network Resources",
        "tab": "83d3ee50.5bd77",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "140c6655.6de2ca",
        "type": "ui_tab",
        "name": "2. Dataset Collection",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e29f9642.2b1f58",
        "type": "ui_group",
        "name": "Flows",
        "tab": "a775ed64.f209a",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "cf8ff5fd.8067d8",
        "type": "ui_tab",
        "name": "6. Model Distribution",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "80449991.6026b8",
        "type": "ui_group",
        "name": "Edge Devices",
        "tab": "cf8ff5fd.8067d8",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "d1282b98.2b9788",
        "type": "ui_tab",
        "name": "4. Model Training & Validation",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6207dc07.821394",
        "type": "ui_tab",
        "name": "3. Data Annotation",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fbe1bd48.d78bd",
        "type": "ui_tab",
        "name": "5. Model Optimization & Prediction ",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ecab0ed6.cc0e9",
        "type": "ui_group",
        "name": "Training & Validation",
        "tab": "d1282b98.2b9788",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false
    },
    {
        "id": "7c079c79.413354",
        "type": "ui_group",
        "name": "Optimization & Prediction",
        "tab": "fbe1bd48.d78bd",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "edc7c27a.766ba",
        "type": "ui_group",
        "name": "Annotation",
        "tab": "6207dc07.821394",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "a775ed64.f209a",
        "type": "ui_tab",
        "name": "HOME",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9fa6bd98.efb68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e387e9d3.b16558",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "805eee17.c9537",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ac5b54d.9e815a8",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c06d99e3.2bed88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 14,
        "height": 1
    },
    {
        "id": "75fe8a6c.d55874",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "1e0381a0.2b07de",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e651eda.36e6b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "2280fe1d.56f612",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 14,
        "height": 1
    },
    {
        "id": "df97e1d6.f028c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 14,
        "height": 1
    },
    {
        "id": "6ab99b2f.f33b14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 14,
        "height": 1
    },
    {
        "id": "bd905411.bf5868",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 14,
        "height": 1
    },
    {
        "id": "786bc15f.0c5ff",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 14,
        "height": 1
    },
    {
        "id": "87651fa4.7b1b9",
        "type": "ui_tab",
        "name": "Pilot Test",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "61de5090.0f5d9",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "1594d936.db51f7",
        "type": "ui_group",
        "name": "PyExec",
        "tab": "f49df05b.52ac2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f49df05b.52ac2",
        "type": "ui_tab",
        "name": "PyExec",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b930fe7e.897db",
        "type": "ui_group",
        "name": "picture",
        "tab": "250de740.57ee78",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "250de740.57ee78",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7e4c65d6.0419cc",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c56b0404.4cacd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "b6966500.261ff8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "d35ccf41.6fd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "69501619.cbcec8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "fa778e80.fb9df",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "aeee687b.e48428",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "dff35516.f53fb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7e4c65d6.0419cc",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "64a7d751.184248",
        "type": "groov-data-store",
        "project": "18830a55.119306",
        "dsName": "Telegram ChatID"
    },
    {
        "id": "18830a55.119306",
        "type": "groov-project",
        "address": "Localhost"
    },
    {
        "id": "1a7f6b0.0560695",
        "type": "ui_group",
        "name": "edge_01",
        "tab": "18b10517.00400b",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "18b10517.00400b",
        "type": "ui_tab",
        "name": "Edge-Eye",
        "icon": "videocam",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4f44306b.c5a07",
        "type": "ui_group",
        "z": "a664a4ce.493678",
        "name": "Kitchen",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "fd272134.434a1",
        "type": "ui_group",
        "name": "control",
        "tab": "18b10517.00400b",
        "order": 1,
        "disp": true,
        "width": "2",
        "collapse": false
    },
    {
        "id": "7de23636.088a88",
        "type": "ui_group",
        "name": "Edge_01",
        "tab": "59c1a803.3cb648",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "59c1a803.3cb648",
        "type": "ui_tab",
        "name": "Edge-Eye2",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a55885a.fb6d68",
        "type": "ui_group",
        "name": "Edge_02",
        "tab": "59c1a803.3cb648",
        "order": 3,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "876063e7.a6e4f",
        "type": "ui_group",
        "name": "Edge_03",
        "tab": "59c1a803.3cb648",
        "order": 4,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "a45b265b.8f88f8",
        "type": "ui_group",
        "name": "Edge_04",
        "tab": "59c1a803.3cb648",
        "order": 5,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "a0b6253.56614d8",
        "type": "ui_group",
        "name": "Edge_05",
        "tab": "59c1a803.3cb648",
        "order": 6,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "468b73d2.70366c",
        "type": "ui_group",
        "name": "Edge_06",
        "tab": "59c1a803.3cb648",
        "order": 7,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "81083b9b.8f1058",
        "type": "ui_group",
        "name": "Edge_07",
        "tab": "59c1a803.3cb648",
        "order": 8,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "98222abf.a9dff8",
        "type": "ui_group",
        "name": "Edge_08",
        "tab": "59c1a803.3cb648",
        "order": 9,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "3d593049.a9028",
        "type": "ui_group",
        "name": "Edge_09",
        "tab": "59c1a803.3cb648",
        "order": 10,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "4c5853d2.f9decc",
        "type": "ui_group",
        "name": "Edge_10",
        "tab": "59c1a803.3cb648",
        "order": 11,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "cf86657d.3ef678",
        "type": "ui_group",
        "name": "Edge_11",
        "tab": "59c1a803.3cb648",
        "order": 12,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "ee0802db.bee35",
        "type": "ui_group",
        "name": "Edge_12",
        "tab": "59c1a803.3cb648",
        "order": 13,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "c4bea5c.7eee158",
        "type": "ui_group",
        "name": "Edge_13",
        "tab": "59c1a803.3cb648",
        "order": 14,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8f80eb1c.1c4e08",
        "type": "ui_group",
        "name": "Edge_14",
        "tab": "59c1a803.3cb648",
        "order": 15,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "4d516664.379bd8",
        "type": "ui_group",
        "name": "Edge_15",
        "tab": "59c1a803.3cb648",
        "order": 16,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "abf4802b.c1052",
        "type": "ui_group",
        "name": "Edge_16",
        "tab": "59c1a803.3cb648",
        "order": 17,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "afa663af.6b7c6",
        "type": "ui_group",
        "name": "Edge_17",
        "tab": "59c1a803.3cb648",
        "order": 18,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "5223b1b4.9d114",
        "type": "ui_group",
        "name": "Edge_18",
        "tab": "59c1a803.3cb648",
        "order": 19,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "193d4963.c1f4a7",
        "type": "ui_group",
        "name": "Edge_19",
        "tab": "59c1a803.3cb648",
        "order": 20,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "593eefc5.2d36c",
        "type": "ui_group",
        "name": "Edge_20",
        "tab": "59c1a803.3cb648",
        "order": 21,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "3b9a7478.8e1cdc",
        "type": "ui_group",
        "name": "Refresh",
        "tab": "59c1a803.3cb648",
        "order": 1,
        "disp": true,
        "width": 24,
        "collapse": false
    },
    {
        "id": "d08e9520.258a68",
        "type": "ui_group",
        "name": "www",
        "tab": "c36f57c4.301058",
        "order": 1,
        "disp": false,
        "width": "35"
    },
    {
        "id": "c36f57c4.301058",
        "type": "ui_tab",
        "name": "Button Panel",
        "icon": "dashboard",
        "order": 17
    },
    {
        "id": "c8171f73.4b8c5",
        "type": "ui_group",
        "name": "Darksky",
        "tab": "896a5d61.52781",
        "order": 1,
        "disp": false,
        "width": "28",
        "collapse": false
    },
    {
        "id": "896a5d61.52781",
        "type": "ui_tab",
        "name": "T1",
        "icon": "fa-television",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "12d04580.99e09b",
        "type": "ui_group",
        "name": "POST-JSON",
        "tab": "11ba6e49.1d54c2",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "11ba6e49.1d54c2",
        "type": "ui_tab",
        "name": "(Flow) Http-POST-json",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "11d808c2.8a02f7",
        "type": "ui_group",
        "name": "Edge_01(F)",
        "tab": "140c6655.6de2ca",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "28d3cda1.227682",
        "type": "ui_group",
        "name": "Edge_02(B)",
        "tab": "140c6655.6de2ca",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "3ce7d3fa.f7dd6c",
        "type": "ui_group",
        "name": "Edge_03(L)",
        "tab": "140c6655.6de2ca",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "22a4ba6d.feb786",
        "type": "ui_group",
        "name": "Edge_04(R)",
        "tab": "140c6655.6de2ca",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "66a3d2f2.5ac4bc",
        "type": "ui_group",
        "name": "Edge_05(U)",
        "tab": "140c6655.6de2ca",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "3091cf8e.d580f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d901f9d3.84a648",
        "order": 3,
        "width": 10,
        "height": 1
    },
    {
        "id": "eb8ed0f9.9f6a6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d901f9d3.84a648",
        "order": 4,
        "width": 10,
        "height": 1
    },
    {
        "id": "11b16d96.4a8d32",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d901f9d3.84a648",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "17e113dc.a5c63c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d901f9d3.84a648",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "bc32925c.2c2248",
        "type": "ui_group",
        "name": "CAM List",
        "tab": "a924e87.7308698",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "a924e87.7308698",
        "type": "ui_tab",
        "name": "(Flow) snmpget",
        "icon": "dashboard",
        "order": 18,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "da8fffa8.4c89c",
        "type": "ui_group",
        "name": "Edge_01(F)",
        "tab": "fbe1bd48.d78bd",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "dce28be2.3c2588",
        "type": "ui_group",
        "name": "Edge_02(B)",
        "tab": "fbe1bd48.d78bd",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f3bc44a.623ddb8",
        "type": "ui_group",
        "name": "Edge_03(L)",
        "tab": "fbe1bd48.d78bd",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "5d66371e.20bc78",
        "type": "ui_group",
        "name": "Edge_04(R)",
        "tab": "fbe1bd48.d78bd",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "66cbaa69.c61454",
        "type": "ui_group",
        "name": "Edge_05(U)",
        "tab": "fbe1bd48.d78bd",
        "order": 6,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f89749a5.94da88",
        "type": "ui_group",
        "name": "Default",
        "tab": "1ce70d5f.826003",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "1ce70d5f.826003",
        "type": "ui_tab",
        "name": "Progress Bar",
        "icon": "dashboard",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9a15a684.9ab0a8",
        "type": "ui_group",
        "name": "Progress",
        "tab": "6207dc07.821394",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c3500612.c24038",
        "type": "ui_group",
        "name": "Btn2",
        "tab": "94f74e9f.6a717",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "94f74e9f.6a717",
        "type": "ui_tab",
        "z": "911ed596.217108",
        "name": "TEST",
        "icon": "dashboard",
        "order": 20,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6851350593042e48",
        "type": "ui_spacer",
        "z": "8019d229.e9ae4",
        "name": "spacer",
        "group": "31cbb0cf.6cd9b",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "70358093c21ba74f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "80449991.6026b8",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "f4ef87d968ee7e2c",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "80449991.6026b8",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "7270f30b8b307fb9",
        "type": "ui_group",
        "name": "Edge_01(F)",
        "tab": "87651fa4.7b1b9",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "9541b4cecc905a81",
        "type": "ui_group",
        "name": "Edge_02(B)",
        "tab": "87651fa4.7b1b9",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "23f54f24917025dd",
        "type": "ui_group",
        "name": "Edge_03(L)",
        "tab": "87651fa4.7b1b9",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "3ec31de71bfbc1ba",
        "type": "ui_group",
        "name": "Edge_04(R)",
        "tab": "87651fa4.7b1b9",
        "order": 4,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "8d87bb84a73633fc",
        "type": "ui_group",
        "name": "Edge_05(U)",
        "tab": "87651fa4.7b1b9",
        "order": 5,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "5146eaae5e5b111e",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a3297d3243ea1af",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e0bf8ffa38f6dae",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "46ea73b75009d842",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "b7736e8e886930b4",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "b67db39a790e87c0",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a32654ed6552fbb",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "00dcf997c55ebcd5",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "07b3d9590dfbd0c8",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "7270f30b8b307fb9",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "451c851378b99e5b",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "873b6906dc09bad2",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "82a13b255fc8abe1",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab3267a4bb61be09",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "0ed85bb1329ba03d",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "483aef10604a2461",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "8cb02d16ddab0b0b",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "a82d33d290848063",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "0cdbb2527bd1d466",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "9541b4cecc905a81",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "dbfa36f7b7ef600e",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "af468049f8380b0d",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "dbcc1a61764a1b0a",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d945d4dffeba2e4e",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "b453e9d9ba918bc7",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "7c7f07f914f768b4",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "092fb5033b624818",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "11c87a337515193f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "817093d1b6ba68e0",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "23f54f24917025dd",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "2fb04726bb5feb16",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "51746be27e6cdcfc",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "9ecfd0a5bf32c67a",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d55351d26f534248",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf58c68c1a389d94",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f849c488202a73f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "b0f962c97950b75f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "731252e6dd088b79",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca85bb1ee8f76ccf",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "3ec31de71bfbc1ba",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "b67a612596e4514d",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac66dc3fac23463f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "72816f30b53b666b",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "f650aaca03babc51",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ccad650460fb8dd",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "1e4a29cb72a802d8",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "79622d29e3dd344f",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "238b1d9583aab824",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "e53285fe6210a179",
        "type": "ui_spacer",
        "z": "5bc58e01.4f95f",
        "name": "spacer",
        "group": "8d87bb84a73633fc",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0dc5b0a30846e811",
        "type": "ui_group",
        "name": "Streaming",
        "tab": "fadcf91904317c77",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fadcf91904317c77",
        "type": "ui_tab",
        "name": "2. Webcam Collection",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "184a5f1dea19d9f7",
        "type": "ui_group",
        "name": "Collection",
        "tab": "fadcf91904317c77",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a9de38d619405449",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "e2bc4433951244fd",
        "type": "ui_tab",
        "name": "7. Webcam Test",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1fcdc80d66586d65",
        "type": "ui_group",
        "name": "Webcam test",
        "tab": "e2bc4433951244fd",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bda16a5d6e7f8292",
        "type": "ui_spacer",
        "z": "052e83af3394bd32",
        "name": "spacer",
        "group": "a9de38d619405449",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "c8f611e3f16b2412",
        "type": "ui_spacer",
        "z": "e2323ccf.2cfc7",
        "name": "spacer",
        "group": "e29f9642.2b1f58",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "819ef121acace32c",
        "type": "ui_spacer",
        "z": "e2323ccf.2cfc7",
        "name": "spacer",
        "group": "e29f9642.2b1f58",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "dd09ea56.667bf8",
        "type": "function",
        "z": "20f5b48f.283ffc",
        "name": "",
        "func": "var x = env.get(\"TimerNumber\"); \nvar y = env.get(\"PayloadON\"); \nvar z = env.get(\"PayloadOFF\"); \n\nflow.set(\"$parent.Timer\"+x, x);\nflow.set(\"$parent.Payload\"+x+\"_on\", y);\nflow.set(\"$parent.Payload\"+x+\"_off\", z);\n\n\n\nmsg.payload = \"Your timer \" + x + \" has been set\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5eb0bd6b.74b794",
        "type": "function",
        "z": "2924702c.b33a7",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n    \n// deep search for a column\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                tableData[msg[tableIndex]][msg.field] = msg.payload; // overwrite tableData with edit\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} if (Array.isArray(msg.payload)) {\n    tableData={};\n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\")) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "3c3ef047.2d697",
        "type": "comment",
        "z": "e2323ccf.2cfc7",
        "name": "Button Label Alignment (Left)",
        "info": "",
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "ab911eeb.8fe9b",
        "type": "comment",
        "z": "e2323ccf.2cfc7",
        "name": "(**)  Use Public IP Address",
        "info": "",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "73197bc9.faa3b4",
        "type": "trigger",
        "z": "e2323ccf.2cfc7",
        "name": "reset msg",
        "op1": "",
        "op2": "empty",
        "op1type": "pay",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 700,
        "y": 260,
        "wires": [
            [
                "32e29e67.2a9962"
            ]
        ]
    },
    {
        "id": "72d55b55.47cef4",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "1. Network Configuration",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "32e29e67.2a9962",
        "type": "ui_template",
        "z": "e2323ccf.2cfc7",
        "group": "e29f9642.2b1f58",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .nr-dashboard-button\n    .md-button { text-align: LEFT; }\n</style>\n\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (data == \"1\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/1\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/1\";\n        } \n        if (data == \"2\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/2\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/2\";\n        } \n        if (data == \"3\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/3\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/3\";\n        }\n        if (data == \"4\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/4\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/4\";\n        } \n        if (data == \"5\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/5\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/5\";\n        } \n        if (data == \"6\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/6\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/6\";\n        }\n        if (data == \"7\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/7\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/7\";\n        }\n        if (data == \"8\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/8\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/8\";\n        } \n        if (data == \"9\") {\n          //window.open(\"http://127.0.0.1:1880/ui/#!/9\");\n          window.location.href=\"http://127.0.0.1:1880/ui/#!/9\";\n        } \n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "53e715f0.24ad3c",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "3. Data Annotations",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "4",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "88e2449b.f05e78",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "4. Model Training & Validation",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "5",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "4b53eb21.625bf4",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "5. Model Optimization & Prediction",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "6",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "bee318fa.e6c9f8",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "6. Model Distribution",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "7",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "edcea031.0e839",
        "type": "comment",
        "z": "e2323ccf.2cfc7",
        "name": "Contents",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "d692c6fa.c8af08",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Pilot Test",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "9",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 480,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "96a5f78d81db48a4",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "2. Webcam Collection",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "3",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "ae4f8b4061cb953e",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "7. Webcam Test",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "96b993ad.86338",
        "type": "ui_button",
        "z": "e2323ccf.2cfc7",
        "name": "",
        "group": "e29f9642.2b1f58",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "2. Dataset Collection",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "menu",
        "payload": "2",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "73197bc9.faa3b4"
            ]
        ]
    },
    {
        "id": "f41fba0a.ca0128",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "CPU Load",
        "func": "let words = msg.payload.split(':');\n//console.log('*****Last', words[0], words[2]);\n\nmsg.topic = words[0];\nif (words.length == 2 || words[2] === undefined)\n    msg.payload = 0;\nelse if (words.length >= 3)\n{\n    //console.log('=========',words[2].split('\"')[1]);\n    msg.payload = words[2].split('\"')[1];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 900,
        "wires": [
            [
                "1800c8ee.280707",
                "fe7ea8e8.025048"
            ]
        ]
    },
    {
        "id": "1800c8ee.280707",
        "type": "ui_chart",
        "z": "8019d229.e9ae4",
        "name": "CPU Load",
        "group": "31cbb0cf.6cd9b",
        "order": 4,
        "width": 10,
        "height": 6,
        "label": "CPU Load (%)",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#0000a0",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 2370,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7ea8e8.025048",
        "type": "ui_chart",
        "z": "8019d229.e9ae4",
        "name": "Temp(°C)",
        "group": "31cbb0cf.6cd9b",
        "order": 6,
        "width": 10,
        "height": 6,
        "label": "Temp (°C)",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#0000a0",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 2360,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "de917f91.8d6b2",
        "type": "ui_chart",
        "z": "8019d229.e9ae4",
        "name": "RAM Free",
        "group": "31cbb0cf.6cd9b",
        "order": 5,
        "width": 10,
        "height": 6,
        "label": "RAM Free (%)",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#0000a0",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 2370,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "3b23f8fb.2d75e8",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "RAM Free",
        "func": "let words = msg.payload.split(':');\n//console.log('*****Last', words[0], words[3]);\n\nmsg.topic = words[0];\nif (words.length == 2 || words[3] === undefined)\n    msg.payload = 0;\nelse if (words.length >= 4)\n    msg.payload = words[3];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 960,
        "wires": [
            [
                "de917f91.8d6b2"
            ]
        ]
    },
    {
        "id": "c3379e39.e0749",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "Temperature",
        "func": "let words = msg.payload.split(':');\n//console.log('*****Last', words[0], words[4]);\n\nmsg.topic = words[0];\nif (words.length == 2 || words[4] === undefined)\n    msg.payload = 0;\nelse if (words.length >= 5)\n    msg.payload = words[4];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 1020,
        "wires": [
            [
                "fe7ea8e8.025048",
                "3d1342b5070bfeb3"
            ]
        ]
    },
    {
        "id": "7b5a0ece.99713",
        "type": "link in",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "a3c65e13.f4c3f",
            "ef837878.c00878"
        ],
        "x": 1935,
        "y": 960,
        "wires": [
            [
                "f41fba0a.ca0128",
                "3b23f8fb.2d75e8",
                "c3379e39.e0749"
            ]
        ]
    },
    {
        "id": "a3c65e13.f4c3f",
        "type": "link out",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "33ce294d.a7c876",
            "7b5a0ece.99713",
            "d467a5f2.d137c8",
            "f470527f.dfa4c"
        ],
        "x": 1875,
        "y": 960,
        "wires": []
    },
    {
        "id": "a09fcc8f.b294f",
        "type": "csv",
        "z": "8019d229.e9ae4",
        "name": "CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 816.0000534057617,
        "y": 100.00001335144043,
        "wires": [
            [
                "4c886615.9910a8",
                "6ecd9c60.37c924"
            ]
        ]
    },
    {
        "id": "4c886615.9910a8",
        "type": "debug",
        "z": "8019d229.e9ae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 60,
        "wires": []
    },
    {
        "id": "d54a2672.e6abb8",
        "type": "template",
        "z": "8019d229.e9ae4",
        "name": "Network Configuration",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# This is some random data\nid, ip, port_snmp, port_sshpass, version, check\nedge_01,127.0.0.1,5000,/stream?src=0,1.0,false\nedge_02,129.254.73.56,51612,50222,1.0,false\nedge_03,192.168.0.13,161,22,1.0,false\nedge_04,192.168.0.14,161,22,1.0,false\nedge_05,192.168.0.15,161,22,1.0,false\nedge_06,127.0.0.1,-,-,1.0,false\nedge_07,127.0.0.1,-,-,1.0,false\nedge_08,127.0.0.1,-,-,1.0,false\nedge_09,127.0.0.1,-,-,1.0,false\nedge_10,127.0.0.1,-,-,1.0,false",
        "output": "str",
        "x": 606.0000534057617,
        "y": 100.00001335144043,
        "wires": [
            [
                "a09fcc8f.b294f",
                "1826ebaa.f735c4"
            ]
        ]
    },
    {
        "id": "47055954.6cad58",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "Network Configuration",
        "info": "",
        "x": 599,
        "y": 56,
        "wires": []
    },
    {
        "id": "c6cb998e.2adaf8",
        "type": "ui_table",
        "z": "8019d229.e9ae4",
        "group": "31cbb0cf.6cd9b",
        "name": "",
        "order": 3,
        "width": 10,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ip",
                "title": "IP",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "port_snmp",
                "title": "PORT",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "port_sshpass",
                "title": "SSHPASS",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1550,
        "y": 160,
        "wires": [
            [
                "2a609a18.e82256",
                "7cde6722.4fdf48"
            ]
        ]
    },
    {
        "id": "6ecd9c60.37c924",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "updateOrAddData @ end",
        "func": "msg.payload = {\n    command:\"updateOrAddData\",\n    arguments:[\n        msg.payload,\n        false   // addRow @ end\n    ],\n    returnPromise: true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 160,
        "wires": [
            [
                "849b4298.f5b44"
            ]
        ],
        "info": "# addRow([row],onTop)\n\n`onTop=false`\n\nadds a new Row on top of the table"
    },
    {
        "id": "2a609a18.e82256",
        "type": "debug",
        "z": "8019d229.e9ae4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 160,
        "wires": []
    },
    {
        "id": "849b4298.f5b44",
        "type": "link out",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "6e0ea508.00237c",
            "94be138b.8c30e",
            "9b2cc305.ad725",
            "27730cb0.f667f4",
            "636b2cb.c4d59d4",
            "b8df791c.9f6428",
            "f31ae8f3.323358"
        ],
        "x": 1235,
        "y": 160,
        "wires": []
    },
    {
        "id": "94be138b.8c30e",
        "type": "link in",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "849b4298.f5b44"
        ],
        "x": 1355,
        "y": 160,
        "wires": [
            [
                "c6cb998e.2adaf8"
            ]
        ]
    },
    {
        "id": "89752bbc.aa78c8",
        "type": "inject",
        "z": "8019d229.e9ae4",
        "name": "once after 0.1 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "d54a2672.e6abb8"
            ]
        ]
    },
    {
        "id": "c97fe30e.dc2e9",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "updateData",
        "func": "let words = msg.payload.split(':');\n\nmsg.topic = words[0];   // edge_id\n\nlet version = 0;\nif (words.length === 2 || words[5] === undefined)\n    words[5] = 0;\nelse if (words.length === 6)\n    version = Number(words[5].split('\"')[0]);\n\nmsg.payload={\n    command:\"updateData\",\n    arguments: [\n        [\n            {\n            \"id\":words[0],\n            \"version\":version\n            }\n        ]\n    ],\n    returnPromise: true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 400,
        "wires": [
            [
                "c6cb998e.2adaf8"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "33ce294d.a7c876",
        "type": "link in",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "a3c65e13.f4c3f"
        ],
        "x": 955,
        "y": 400,
        "wires": [
            [
                "c97fe30e.dc2e9"
            ]
        ]
    },
    {
        "id": "3c620a20.eb55d6",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "clearData",
        "func": "\nmsg.payload={\n    command:\"clearData\",\n    arguments: [],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "c6cb998e.2adaf8"
            ]
        ],
        "info": "# clear data\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "e2ebfa6b.455188",
        "type": "delay",
        "z": "8019d229.e9ae4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "d54a2672.e6abb8"
            ]
        ]
    },
    {
        "id": "86c5f5a9.21c718",
        "type": "link in",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "a958b8d5.0d49f8",
            "bac8ca75.4e7928",
            "c002779d.cc3d78",
            "e404eaf9.432d18"
        ],
        "x": 308.9999465942383,
        "y": 179.99998664855957,
        "wires": [
            [
                "e2ebfa6b.455188"
            ]
        ]
    },
    {
        "id": "56e3bf4b.a6a8b",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(***) customization",
        "info": "",
        "x": 590,
        "y": 20,
        "wires": []
    },
    {
        "id": "a59f738.1a5b39",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(**) customization",
        "info": "",
        "x": 2153.9999465942383,
        "y": 859.9999866485596,
        "wires": []
    },
    {
        "id": "1826ebaa.f735c4",
        "type": "csv",
        "z": "8019d229.e9ae4",
        "name": "CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "862ec75c.a16b58"
            ]
        ]
    },
    {
        "id": "17d17467.48749c",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(*) Setup Codes",
        "info": "",
        "x": 2160,
        "y": 400,
        "wires": []
    },
    {
        "id": "1ca16023.bd5c3",
        "type": "ui_button",
        "z": "8019d229.e9ae4",
        "name": "",
        "group": "31cbb0cf.6cd9b",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 176.00005340576172,
        "y": 320.00001335144043,
        "wires": [
            [
                "2b0a2d4e.7d97e2",
                "3c620a20.eb55d6",
                "e2ebfa6b.455188"
            ]
        ]
    },
    {
        "id": "2b0a2d4e.7d97e2",
        "type": "trigger",
        "z": "8019d229.e9ae4",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"refreshing\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"refresh\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "1ca16023.bd5c3"
            ]
        ]
    },
    {
        "id": "ef34115.ba60df",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "Refresh Button",
        "info": "",
        "x": 200,
        "y": 204,
        "wires": []
    },
    {
        "id": "ce3699ca.8b98d8",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.1)",
        "info": "",
        "x": 1270,
        "y": 120,
        "wires": []
    },
    {
        "id": "85d22710.6cc1a8",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.1) ->",
        "info": "",
        "x": 1400,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ed3867a.681f98",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.2)",
        "info": "",
        "x": 1870,
        "y": 920,
        "wires": []
    },
    {
        "id": "ad10b221.f0356",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.2) ->",
        "info": "",
        "x": 1974.9999465942383,
        "y": 999.9999866485596,
        "wires": []
    },
    {
        "id": "4e665787.d6af88",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.2) ->",
        "info": "",
        "x": 1000,
        "y": 360,
        "wires": []
    },
    {
        "id": "e8499a89.7db898",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L2.1),(L6.1)->",
        "info": "",
        "x": 363.9999465942383,
        "y": 139.99998664855957,
        "wires": []
    },
    {
        "id": "94f0678a.400f48",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(***) customization",
        "info": "",
        "x": 1170,
        "y": 360,
        "wires": []
    },
    {
        "id": "7cde6722.4fdf48",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "",
        "func": "if (msg.return.command === 'updateOrAddData' && msg.return.arguments[0].length >= 2)\n{\n    //console.log(\"++++++\", msg.return.command, msg.return.arguments[0].length);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 240,
        "wires": [
            [
                "fc58697a.624ba8",
                "8e8b8676.1a6398"
            ]
        ]
    },
    {
        "id": "fc58697a.624ba8",
        "type": "link out",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [],
        "x": 1895,
        "y": 240,
        "wires": []
    },
    {
        "id": "f15c1116.0003",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.3)",
        "info": "",
        "x": 1930,
        "y": 200,
        "wires": []
    },
    {
        "id": "77ad05fd.5717ac",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "update table values",
        "info": "",
        "x": 1770,
        "y": 280,
        "wires": []
    },
    {
        "id": "d767abc0.d57b48",
        "type": "inject",
        "z": "8019d229.e9ae4",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "1ca16023.bd5c3"
            ]
        ]
    },
    {
        "id": "4fd8dddd.dc6d14",
        "type": "ui_ui_control",
        "z": "8019d229.e9ae4",
        "name": "",
        "events": "change",
        "x": 400,
        "y": 280,
        "wires": [
            [
                "e2ebfa6b.455188"
            ]
        ]
    },
    {
        "id": "8e8b8676.1a6398",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "table recorder",
        "func": "var status = {fill:\"red\",shape:\"ring\",text:\"an table change event\"};\nvar success = (msg.topic && msg.topic===\"success\") || false;\nvar tableData = flow.get(\"tableData\");\nif (tableData === undefined) {\n    tableData = [];\n    flow.set(\"tableData\",tableData);\n}\n\n// find the index for a row in tableData for a given index (id)\nfunction checkIndex(id) {\n    let matchRow=-1\n    tableData.forEach(function (row,index){\n        if (row.id === id){\n            matchRow=index;\n            return matchRow;\n        }\n    })\n    return matchRow;\n}\n\n// flat merge one row \nfunction mergeRow(dest,source) {\n    Object.keys(source).forEach(function(key) {\n        dest[key]=source[key];\n    })\n}\n\n//merge or add one or many rows into tableData \nfunction mergeData(newData,toTop) {\n    newData.forEach(function (item,index) {\n        node.warn([\"findIndex\",item]);\n        let row=checkIndex(item.id);\n        if (row<0) { // row do not existst in tableData\n            if (toTop) {\n                tableData.push(item);\n                status.text+=\"newRow @ top\";\n            } else {\n                tableData.unshift(item);\n                status.text+=\"newRow @ bottom\";\n            }\n            return;\n        } else { // row exists so update\n            mergeRow(tableData[row],item);\n            status.text+=\"row updated\";\n            return;\n        }\n        if (status.text!==\"\") node.status(status);\n    });\n}\n\nswitch (typeof msg.payload){\n    case \"object\":\n        node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        if (Array.isArray(msg.payload)) { // replace all tableData\n            status={fill:\"green\",shape:\"dot\",text:\"table replaced \"+msg.payload.length+\" rows\"};\n            tableData=RED.util.cloneMessage(msg.payload); \n        } else {\n            switch (msg.payload.command) { // clearData does not return a promise!\n                case \"clearData\":\n                    status={fill:\"green\",shape:\"dot\",text:\"clearData: done\"};\n                    tableData=[];\n                    flow.set(\"lastId\",0);\n                    break;                \n            }\n        }\n        break;\n    default: // likely a msg fom a ui-table command or callback\n        if (msg.hasOwnProperty(\"topic\") &&\n            msg.hasOwnProperty(\"ui_control\") && \n            msg.ui_control.hasOwnProperty(\"callback\") &&\n            msg.hasOwnProperty(\"return\")) { // message originates from a ui-table callback\n            if (success) {\n                switch(msg.return.command) {\n                    /*\n                    case \"addRow\":\n                        status.text=\"addRow: \";\n                        mergeData(msg.return.arguments[0],msg.return.arguments[1]);\n                        status.shape=\"dot\";\n                        break;\n                    */\n                    case \"updateOrAddData\":\n                        status.text=\"updateOrAddData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    /*\n                    case \"updateData\":  // written by bblee\n                        status.text=\"updateData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    case \"deleteRow\":\n                        let row=checkIndex(msg.return.arguments[0]);\n                        tableData.splice(row,1);\n                        status.shape=\"dot\";\n                        status.text=\"deleteRow: \"+row+\" deleted\";\n                        break;\n                    default:\n                        status={fill:\"yellow\",shape:\"dot\",text:msg.return.command + \" unknown!\"};\n                        break;\n                    */\n                }\n            } else {\n                status.text=msg.topic+\" \"+msg.error;\n            }\n        }\n        break;\n}\nif (success) status.fill=\"green\";\nflow.set(\"tableData\",tableData);\nnode.status(status);\nmsg.topic = 'snmp_event';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "6acbadbd.904f24"
            ]
        ],
        "icon": "font-awesome/fa-database",
        "info": "# simple ui-table handler\n## abstract\nUsing ui-table with commands offer the hole flexibilty of tabulator. The table can be manipulated down to cell level.\nAs the ui-table node only passes the commands to tabulator and receives promises back the node does not hold the table data. If the data should be available after refresh, tab change, new connections the flow is responsible to cache the data and all the manipulations.\nThis node takes care of most simple data manipulation commands and holds a copy of the data in `flow.context.tabledata`\n\n## details\n\n### row index (id)\n\nTo identify a [row a index](http://tabulator.info/docs/4.5/data#overview) column has to be defined. This colum defaults to `id` but can be changed by specifing a **field** by using `msg.ui_control`. In this example the row index is a simple counter adding up by one if a new line is added.\n\n### addRow command\n\n[details @ tabulator addRow docs](http://tabulator.info/docs/4.5/update#alter-add)\n\nYou can add a row by sending the `addRow` command. You can decide if the row adds on the top or at the bottom of table.\n\n### addOrUpdate command\n\n[details @ tabulator addOrUpdate docs](http://tabulator.info/docs/4.5/update#alter-update)\n\nTo update data the best way is to use the `addOrUpdate` command. If the row indetified by the index is not exeisting a new row will be added automatically\n\n### deleteRow command\n\n[details @ tabulator deleteRow docs](http://tabulator.info/docs/4.5/update#row)\n\nDelete one or more rows (passing an array always results in \"row not found error\"! I think there is an issue in tabulator)\n\n### clearData\n\n[details @ tabulator clearData docs](http://tabulator.info/docs/4.5/update#alter-empty)\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "6a82f058.92885",
        "type": "inject",
        "z": "8019d229.e9ae4",
        "name": "TP(Test Point)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 560,
        "wires": [
            [
                "8e8b8676.1a6398"
            ]
        ]
    },
    {
        "id": "6acbadbd.904f24",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "SNMP",
        "func": "if (msg.topic === 'snmp_event')\n{\n    msg.topic = null;\n    \n    let port = 161;\n    //let oid = '1.3.6.1.4.1.2021.10.1.3.1';\n    let oid = '1.3.6.1.2.1.25.1.8';\n    let tableData = flow.get(\"tableData\");\n\n    //console.log('$$$$$', tableData);\n    //console.log('$$$$$', msg.topic);\n    //console.log('$$$$$', tableData.length);\n    \n    // if queue doesn't exist, create it\n    context.queue = context.queue || [];\n    context.busy = context.busy || false;\n    \n    var i = 0;\n    for (i = 0; i < tableData.length; i++) {\n        if (tableData[i].port_snmp === '-')\n            tableData[i].port_snmp = port;\n    }\n    \n    for (i = 0; i < tableData.length; i++) {\n        msg.payload = tableData[i].id + ' ' + tableData[i].ip + ' ' + tableData[i].port_snmp + ' ' + oid;\n        context.queue.push(msg.payload);\n    }\n    \n    //console.log('0000000000000', msg.payload);\n    if (context.queue.length >= 5) {\n        return [{payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()}];\n    }\n    else if (context.queue.length >= 4) {\n        return [{payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                null];\n    }\n    else if (context.queue.length >= 3) {\n        return [{payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                null,\n                null];\n    }\n    else if (context.queue.length >= 2) {\n        return [{payload:context.queue.shift()},\n                {payload:context.queue.shift()},\n                null,\n                null,\n                null];\n    }\n    else if (context.queue.length >= 1) {\n        return [{payload:context.queue.shift()},\n                null,\n                null,\n                null,\n                null];\n    }\n}\n\nif (msg.topic === 'trigger_01' && context.queue.length > 0)\n{\n    msg.topic = null;\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0)\n            return {payload:context.queue.shift()};\n    }\n}\nif (msg.topic === 'trigger_02' && context.queue.length > 0)\n{\n    msg.topic = null;\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0)\n            return [null,{payload:context.queue.shift()}];\n    }\n}\nif (msg.topic === 'trigger_03' && context.queue.length > 0)\n{\n    msg.topic = null;\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0)\n            return [null,null,{payload:context.queue.shift()}];\n    }\n}\nif (msg.topic === 'trigger_04' && context.queue.length > 0)\n{\n    msg.topic = null;\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0)\n            return [null,null,null,{payload:context.queue.shift()}];\n    }\n}\nif (msg.topic === 'trigger_05' && context.queue.length > 0)\n{\n    msg.topic = null;\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0)\n            return [null,null,null,null,{payload:context.queue.shift()}];\n    }\n}\nreturn null;",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 980,
        "wires": [
            [
                "2b1d90e1.6ef6f"
            ],
            [
                "f9761cd6.286eb"
            ],
            [
                "3ce1b140.f4a5be"
            ],
            [
                "8ec394c4.4ef6c8"
            ],
            [
                "4cf8b5eb.5b998c"
            ]
        ]
    },
    {
        "id": "319b1abb.c9fec6",
        "type": "inject",
        "z": "8019d229.e9ae4",
        "name": "TP(Test Point)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "snmp_event",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 980,
        "wires": [
            [
                "6acbadbd.904f24"
            ]
        ]
    },
    {
        "id": "2b1d90e1.6ef6f",
        "type": "bigexec",
        "z": "8019d229.e9ae4",
        "name": "snmpget",
        "command": "./user_snmp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "b97b3748.41e568"
            ],
            [
                "b97b3748.41e568"
            ],
            []
        ]
    },
    {
        "id": "b97b3748.41e568",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger_01';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 560,
        "wires": [
            [
                "6acbadbd.904f24",
                "bfda94c7.acdab8"
            ]
        ]
    },
    {
        "id": "f9761cd6.286eb",
        "type": "bigexec",
        "z": "8019d229.e9ae4",
        "name": "snmpget",
        "command": "./user_snmp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1380,
        "y": 800,
        "wires": [
            [
                "658f204b.9ec8a"
            ],
            [
                "658f204b.9ec8a"
            ],
            []
        ]
    },
    {
        "id": "658f204b.9ec8a",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger_02';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 740,
        "wires": [
            [
                "6acbadbd.904f24",
                "bfda94c7.acdab8"
            ]
        ]
    },
    {
        "id": "3ce1b140.f4a5be",
        "type": "bigexec",
        "z": "8019d229.e9ae4",
        "name": "snmpget",
        "command": "./user_snmp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1380,
        "y": 980,
        "wires": [
            [
                "d3cc8f15.7098b"
            ],
            [
                "d3cc8f15.7098b"
            ],
            []
        ]
    },
    {
        "id": "d3cc8f15.7098b",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger_03';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 920,
        "wires": [
            [
                "6acbadbd.904f24",
                "bfda94c7.acdab8"
            ]
        ]
    },
    {
        "id": "8ec394c4.4ef6c8",
        "type": "bigexec",
        "z": "8019d229.e9ae4",
        "name": "snmpget",
        "command": "./user_snmp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1380,
        "y": 1160,
        "wires": [
            [
                "376f34d5.88940c"
            ],
            [
                "376f34d5.88940c"
            ],
            []
        ]
    },
    {
        "id": "376f34d5.88940c",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger_04';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 1100,
        "wires": [
            [
                "6acbadbd.904f24",
                "bfda94c7.acdab8"
            ]
        ]
    },
    {
        "id": "4cf8b5eb.5b998c",
        "type": "bigexec",
        "z": "8019d229.e9ae4",
        "name": "snmpget",
        "command": "./user_snmp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1380,
        "y": 1340,
        "wires": [
            [
                "c7511b79.c5fe18"
            ],
            [
                "c7511b79.c5fe18"
            ],
            []
        ]
    },
    {
        "id": "c7511b79.c5fe18",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger_05';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 1280,
        "wires": [
            [
                "6acbadbd.904f24",
                "bfda94c7.acdab8"
            ]
        ]
    },
    {
        "id": "1b3dbb22.0d62e5",
        "type": "debug",
        "z": "8019d229.e9ae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bfda94c7.acdab8",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "SNMP Response",
        "func": "//console.log('#####', msg, '$$$$$', msg.payload.split(':'));\n\nif (msg.payload.split(':').length >= 2)\n{\n    msg.topic = null;\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "1b3dbb22.0d62e5",
                "a3c65e13.f4c3f"
            ]
        ]
    },
    {
        "id": "83ccb5a.af30f48",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(***) customization : SNMP Oid",
        "info": "",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "862ec75c.a16b58",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "Init Tables",
        "func": "msg.topic = msg.payload.id;\nmsg.payload = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2140,
        "y": 440,
        "wires": [
            [
                "1800c8ee.280707",
                "de917f91.8d6b2",
                "fe7ea8e8.025048"
            ]
        ]
    },
    {
        "id": "8f197dd9.14d3d",
        "type": "link in",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "64be0a39.3843d4",
            "d450849b4ded8b5c"
        ],
        "x": 695,
        "y": 920,
        "wires": [
            [
                "27739529.015f2a"
            ]
        ]
    },
    {
        "id": "22187c42.9b4764",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L2.2),(L6.2),(LPilot.1) ->",
        "info": "",
        "x": 790,
        "y": 880,
        "wires": []
    },
    {
        "id": "27739529.015f2a",
        "type": "function",
        "z": "8019d229.e9ae4",
        "name": "",
        "func": "msg.topic = 'snmp_event';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 920,
        "wires": [
            [
                "6acbadbd.904f24"
            ]
        ]
    },
    {
        "id": "3d1342b5070bfeb3",
        "type": "link out",
        "z": "8019d229.e9ae4",
        "name": "",
        "links": [
            "38cb4654.1df87a"
        ],
        "x": 2315,
        "y": 1140,
        "wires": []
    },
    {
        "id": "4938cbbedeb4354a",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(L1.4)",
        "info": "",
        "x": 2350,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6468d5b72498d92f",
        "type": "comment",
        "z": "8019d229.e9ae4",
        "name": "(**) customization",
        "info": "",
        "x": 380,
        "y": 620,
        "wires": []
    },
    {
        "id": "cf894bf31abb7560",
        "type": "template",
        "z": "8019d229.e9ae4",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1100px\" height=\"730px\" align=\"center\" src=\"/learn/net-config.png\"/>",
        "output": "str",
        "x": 360,
        "y": 660,
        "wires": [
            [
                "0940456ca081ac1c"
            ]
        ]
    },
    {
        "id": "0940456ca081ac1c",
        "type": "ui_toast",
        "z": "8019d229.e9ae4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "Network Configuration",
        "name": "Network Configuration",
        "x": 560,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "acedeb1994042edd",
        "type": "inject",
        "z": "8019d229.e9ae4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "cf894bf31abb7560"
            ]
        ]
    },
    {
        "id": "b35dedfd30f051d6",
        "type": "ui_button",
        "z": "8019d229.e9ae4",
        "name": "",
        "group": "31cbb0cf.6cd9b",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "white",
        "bgcolor": "green",
        "icon": "device_hub",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 700,
        "wires": [
            [
                "cf894bf31abb7560"
            ]
        ]
    },
    {
        "id": "1b8e77f97f33c2e2",
        "type": "template",
        "z": "d50fdfad83d796e3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"http://172.30.1.18:5001/stream\">",
        "output": "str",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "9d3749dcd0687f05"
            ]
        ]
    },
    {
        "id": "9d3749dcd0687f05",
        "type": "ui_template",
        "z": "d50fdfad83d796e3",
        "group": "0dc5b0a30846e811",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8279e81152ebbd67",
        "type": "ui_button",
        "z": "d50fdfad83d796e3",
        "name": "",
        "group": "0dc5b0a30846e811",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Webcam",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "1b8e77f97f33c2e2",
                "30b694170249fbf5"
            ]
        ]
    },
    {
        "id": "1cb78922c4e7464f",
        "type": "ui_button",
        "z": "d50fdfad83d796e3",
        "name": "",
        "group": "184a5f1dea19d9f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Click to Capture",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 260,
        "y": 740,
        "wires": [
            [
                "74ca74449d0ab440",
                "739790760978d333"
            ]
        ]
    },
    {
        "id": "ffa7509b387bd060",
        "type": "jimp-image",
        "z": "d50fdfad83d796e3",
        "name": "capture image",
        "data": "/mnt/c/Users/dqkim/capture.jpg",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 800,
        "y": 680,
        "wires": [
            [
                "5e7dfd0c97739194",
                "3149c34a7186dc27"
            ]
        ]
    },
    {
        "id": "5e7dfd0c97739194",
        "type": "image viewer",
        "z": "d50fdfad83d796e3",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 810,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "89f35cb2f719689e",
        "type": "inject",
        "z": "d50fdfad83d796e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 220,
        "wires": [
            [
                "1b8e77f97f33c2e2"
            ]
        ]
    },
    {
        "id": "dd12a8baa783e45d",
        "type": "inject",
        "z": "d50fdfad83d796e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 640,
        "wires": [
            [
                "739790760978d333",
                "74ca74449d0ab440"
            ]
        ]
    },
    {
        "id": "739790760978d333",
        "type": "http request",
        "z": "d50fdfad83d796e3",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://172.30.1.18:5001/capture",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b576c9a8e46f7a71",
        "type": "comment",
        "z": "d50fdfad83d796e3",
        "name": "flask ip 맞춰서 변경",
        "info": "",
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "d12a00e8bf73913d",
        "type": "comment",
        "z": "d50fdfad83d796e3",
        "name": "capture 저장되는 위치 맞춰서 저장",
        "info": "",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "82786c4ca61b8066",
        "type": "comment",
        "z": "d50fdfad83d796e3",
        "name": "flask ip 맞춰서 변경",
        "info": "1. local에서 돌릴 때는 따로 변경하지 않는 한\nhttp://127.0.0.1:5000/stream\n\n2. 그 외에는 연결된 내부 ip 맞춰서 변경(고정 ip면 괜찮)\nhttp://172.30.1.54:5000/stream",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "74ca74449d0ab440",
        "type": "delay",
        "z": "d50fdfad83d796e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 740,
        "wires": [
            [
                "ffa7509b387bd060"
            ]
        ]
    },
    {
        "id": "3149c34a7186dc27",
        "type": "function",
        "z": "d50fdfad83d796e3",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = 'webcam';\n\nd = new Date();\n\nmsg.filename = \"./learn/getreq_imgs/\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 680,
        "wires": [
            [
                "2887eae5b27efd16"
            ]
        ]
    },
    {
        "id": "2887eae5b27efd16",
        "type": "file",
        "z": "d50fdfad83d796e3",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 680,
        "wires": [
            [
                "f9fe49ed7725e93f"
            ]
        ]
    },
    {
        "id": "689e5edeec093242",
        "type": "jimp-image",
        "z": "d50fdfad83d796e3",
        "name": "capture image",
        "data": "/mnt/c/Users/dqkim/capture.jpg",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 520,
        "y": 1400,
        "wires": [
            [
                "edbc3822460f3b75",
                "febea9586de8e8d1",
                "0b1c8b5c825e4a69"
            ]
        ]
    },
    {
        "id": "edbc3822460f3b75",
        "type": "image viewer",
        "z": "d50fdfad83d796e3",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 490,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "febea9586de8e8d1",
        "type": "debug",
        "z": "d50fdfad83d796e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 680,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6fd760c612a9aa8d",
        "type": "file",
        "z": "d50fdfad83d796e3",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1020,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "0b1c8b5c825e4a69",
        "type": "function",
        "z": "d50fdfad83d796e3",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = 'webcam';\n\nd = new Date();\n\nmsg.filename = \"./learn/tensorflow-yolov4-tflite-marine/data/img/\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1460,
        "wires": [
            [
                "6fd760c612a9aa8d",
                "6fd760c612a9aa8d"
            ]
        ]
    },
    {
        "id": "256c7d33992a28ae",
        "type": "ui_button",
        "z": "d50fdfad83d796e3",
        "name": "",
        "group": "184a5f1dea19d9f7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Click to Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "689e5edeec093242"
            ]
        ]
    },
    {
        "id": "be3441aab2a61373",
        "type": "inject",
        "z": "d50fdfad83d796e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1380,
        "wires": [
            [
                "689e5edeec093242"
            ]
        ]
    },
    {
        "id": "eef58b00c348687b",
        "type": "ui_template",
        "z": "d50fdfad83d796e3",
        "group": "184a5f1dea19d9f7",
        "name": "",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1760,
        "y": 680,
        "wires": [
            [
                "efda73bd8915e82e"
            ]
        ]
    },
    {
        "id": "f9fe49ed7725e93f",
        "type": "template",
        "z": "d50fdfad83d796e3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1480,
        "y": 680,
        "wires": [
            [
                "eef58b00c348687b",
                "efda73bd8915e82e"
            ]
        ]
    },
    {
        "id": "efda73bd8915e82e",
        "type": "debug",
        "z": "d50fdfad83d796e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 800,
        "wires": []
    },
    {
        "id": "30b694170249fbf5",
        "type": "template",
        "z": "d50fdfad83d796e3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"http://172.30.1.18:5001/inference\">",
        "output": "str",
        "x": 760,
        "y": 200,
        "wires": [
            [
                "a48e8f83d115ae5d"
            ]
        ]
    },
    {
        "id": "a48e8f83d115ae5d",
        "type": "ui_template",
        "z": "d50fdfad83d796e3",
        "group": "0dc5b0a30846e811",
        "name": "ui template",
        "order": 3,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "35c100e0410017ad",
        "type": "comment",
        "z": "d50fdfad83d796e3",
        "name": "flask ip 맞춰서 변경",
        "info": "1. local에서 돌릴 때는 따로 변경하지 않는 한\nhttp://127.0.0.1:5000/stream\n\n2. 그 외에는 연결된 내부 ip 맞춰서 변경(고정 ip면 괜찮)\nhttp://172.30.1.54:5000/stream",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "d273119e.c6cb1",
        "type": "ui_button",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "group": "11d808c2.8a02f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "c995a74d30a5d16e"
            ]
        ]
    },
    {
        "id": "e7867993.a57bc8",
        "type": "ui_button",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "group": "28d3cda1.227682",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "84a2f4047f88138b"
            ]
        ]
    },
    {
        "id": "51d13ba1.dc40d4",
        "type": "ui_button",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "group": "3ce7d3fa.f7dd6c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "031822ccee265e8f"
            ]
        ]
    },
    {
        "id": "37b27504.93259a",
        "type": "ui_button",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "group": "22a4ba6d.feb786",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "d70a87a7.3c2a88"
            ]
        ]
    },
    {
        "id": "ad7af196.859d2",
        "type": "ui_button",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "group": "66a3d2f2.5ac4bc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "68310ad8.71fef4"
            ]
        ]
    },
    {
        "id": "75d5b1b7.56343",
        "type": "inject",
        "z": "4a6b2213.01ed9c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "d70a87a7.3c2a88",
                "68310ad8.71fef4",
                "031822ccee265e8f",
                "84a2f4047f88138b",
                "c995a74d30a5d16e"
            ]
        ]
    },
    {
        "id": "37ed2274.dc5cae",
        "type": "file",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 850,
        "y": 460,
        "wires": [
            [
                "336e3d15.07f6f2"
            ]
        ]
    },
    {
        "id": "336e3d15.07f6f2",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "8379f106.bca0e"
            ]
        ]
    },
    {
        "id": "d70a87a7.3c2a88",
        "type": "jimp-image",
        "z": "4a6b2213.01ed9c",
        "name": "edge-gesture",
        "data": "http://192.168.0.14:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 490,
        "y": 460,
        "wires": [
            [
                "56526622.24fc78"
            ]
        ]
    },
    {
        "id": "d9406e08.281f6",
        "type": "file",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 850,
        "y": 540,
        "wires": [
            [
                "da9c7d01.dbfb9"
            ]
        ]
    },
    {
        "id": "da9c7d01.dbfb9",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1020,
        "y": 540,
        "wires": [
            [
                "5e47dd74.e7e3a4"
            ]
        ]
    },
    {
        "id": "68310ad8.71fef4",
        "type": "jimp-image",
        "z": "4a6b2213.01ed9c",
        "name": "edge-gesture",
        "data": "http://192.168.0.15:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 490,
        "y": 540,
        "wires": [
            [
                "bcc1c060.aa65b"
            ]
        ]
    },
    {
        "id": "8379f106.bca0e",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "22a4ba6d.feb786",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1210,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5e47dd74.e7e3a4",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "66a3d2f2.5ac4bc",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1210,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "56526622.24fc78",
        "type": "function",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '04'\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 460,
        "wires": [
            [
                "37ed2274.dc5cae"
            ]
        ]
    },
    {
        "id": "bcc1c060.aa65b",
        "type": "function",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '05'\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 540,
        "wires": [
            [
                "d9406e08.281f6"
            ]
        ]
    },
    {
        "id": "e5a66ed36cb6fb11",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img src=\"/ID01_1631413631774.jpg\">",
        "output": "str",
        "x": 680,
        "y": 800,
        "wires": [
            [
                "93bca6094ea0ae1e",
                "8fe0facdb0c69f6a"
            ]
        ]
    },
    {
        "id": "93bca6094ea0ae1e",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "3ce7d3fa.f7dd6c",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e07f037df1d11903",
        "type": "inject",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 780,
        "wires": [
            [
                "e5a66ed36cb6fb11"
            ]
        ]
    },
    {
        "id": "8fe0facdb0c69f6a",
        "type": "debug",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 720,
        "wires": []
    },
    {
        "id": "6475eaf2ad8f91fc",
        "type": "file",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 380,
        "wires": [
            [
                "0bd8d52f85346db4"
            ]
        ]
    },
    {
        "id": "0bd8d52f85346db4",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "edf096026b3c5687"
            ]
        ]
    },
    {
        "id": "031822ccee265e8f",
        "type": "jimp-image",
        "z": "4a6b2213.01ed9c",
        "name": "edge-gesture",
        "data": "http://192.168.0.13:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 480,
        "y": 380,
        "wires": [
            [
                "70154c995422ede1"
            ]
        ]
    },
    {
        "id": "edf096026b3c5687",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "3ce7d3fa.f7dd6c",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "70154c995422ede1",
        "type": "function",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '03'\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "6475eaf2ad8f91fc"
            ]
        ]
    },
    {
        "id": "5878456f389ebe68",
        "type": "file",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "1b1a4f18e99535ec"
            ]
        ]
    },
    {
        "id": "1b1a4f18e99535ec",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "80b755446f958f46"
            ]
        ]
    },
    {
        "id": "84a2f4047f88138b",
        "type": "jimp-image",
        "z": "4a6b2213.01ed9c",
        "name": "edge-gesture",
        "data": "http://192.168.0.12:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 480,
        "y": 300,
        "wires": [
            [
                "d02804f1ec2d18d5"
            ]
        ]
    },
    {
        "id": "80b755446f958f46",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "28d3cda1.227682",
        "name": "ui template",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d02804f1ec2d18d5",
        "type": "function",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '02'\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 300,
        "wires": [
            [
                "5878456f389ebe68"
            ]
        ]
    },
    {
        "id": "970d7cd86b81e3b1",
        "type": "file",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 840,
        "y": 220,
        "wires": [
            [
                "ff071e6f373b353f"
            ]
        ]
    },
    {
        "id": "ff071e6f373b353f",
        "type": "template",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "fe1f3e5711169734"
            ]
        ]
    },
    {
        "id": "c995a74d30a5d16e",
        "type": "jimp-image",
        "z": "4a6b2213.01ed9c",
        "name": "edge-gesture",
        "data": "http://192.168.0.11:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 470,
        "y": 220,
        "wires": [
            [
                "adbeeca42f5dcfa9"
            ]
        ]
    },
    {
        "id": "fe1f3e5711169734",
        "type": "ui_template",
        "z": "4a6b2213.01ed9c",
        "group": "11d808c2.8a02f7",
        "name": "ui template",
        "order": 3,
        "width": 12,
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "adbeeca42f5dcfa9",
        "type": "function",
        "z": "4a6b2213.01ed9c",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '01'\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            [
                "970d7cd86b81e3b1"
            ]
        ]
    },
    {
        "id": "5e3467f3.029a18",
        "type": "trigger",
        "z": "240c18c5.8b60a8",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"gray\",\"l\":\"starting\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"gray\",\"l\":\"Label-Valid-Tool\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 960,
        "wires": [
            [
                "66c5fd44.16f524"
            ]
        ]
    },
    {
        "id": "66c5fd44.16f524",
        "type": "ui_button",
        "z": "240c18c5.8b60a8",
        "name": "",
        "group": "9a15a684.9ab0a8",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "labelImg",
        "topicType": "str",
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "5e3467f3.029a18",
                "2cb2d32d.26e9ac"
            ]
        ]
    },
    {
        "id": "e3bd77b6.b62548",
        "type": "inject",
        "z": "240c18c5.8b60a8",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"gray\",\"l\":\"Label-Valid-Tool\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "66c5fd44.16f524"
            ]
        ]
    },
    {
        "id": "1f76bd6b.f5ae33",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "Label-Generator Button",
        "info": "",
        "x": 100,
        "y": 640,
        "wires": []
    },
    {
        "id": "2cb2d32d.26e9ac",
        "type": "bigexec",
        "z": "240c18c5.8b60a8",
        "name": "labelImg tool",
        "command": "/usr/bin/python3",
        "commandArgs": "./labelImg/labelImg.py",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/tensorflow-yolov4-tflite-marine/",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 550,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f8f3a5f7.d56ca8",
        "type": "trigger",
        "z": "240c18c5.8b60a8",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"generating...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"Label-Generator\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 600,
        "wires": [
            [
                "fda5b62a.956188"
            ]
        ]
    },
    {
        "id": "fda5b62a.956188",
        "type": "ui_button",
        "z": "240c18c5.8b60a8",
        "name": "",
        "group": "edc7c27a.766ba",
        "order": 1,
        "width": 4,
        "height": 12,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "label_generator",
        "topicType": "str",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "f8f3a5f7.d56ca8",
                "25550a8.e03d0f6"
            ]
        ]
    },
    {
        "id": "dec66603.04acf8",
        "type": "bigexec",
        "z": "240c18c5.8b60a8",
        "name": "label generator",
        "command": "/usr/bin/python3",
        "commandArgs": "httpserver_label_generator.py",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/tensorflow-yolov4-tflite-marine/",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "e8bce04e.27d6b"
            ],
            [],
            []
        ]
    },
    {
        "id": "2212064f.661bfa",
        "type": "inject",
        "z": "240c18c5.8b60a8",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"Label-Generator\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "fda5b62a.956188",
                "dec66603.04acf8"
            ]
        ]
    },
    {
        "id": "e8bce04e.27d6b",
        "type": "debug",
        "z": "240c18c5.8b60a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 440,
        "wires": []
    },
    {
        "id": "e3018f14.22ad6",
        "type": "ui_template",
        "z": "240c18c5.8b60a8",
        "group": "9a15a684.9ab0a8",
        "name": "html progressbar",
        "order": 1,
        "width": 12,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.counter/msg.max_counter*100}}%\">{{msg.counter}}/{{msg.max_counter}}</div>\n      <span ng-if=\"msg.counter === null\">COMPLETE !</span>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1130,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "340e2f2c.e52b9",
        "type": "inject",
        "z": "240c18c5.8b60a8",
        "name": "On Start",
        "props": [
            {
                "p": "counter",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "max_counter",
                "v": "0",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 960,
        "y": 420,
        "wires": [
            [
                "e3018f14.22ad6"
            ]
        ]
    },
    {
        "id": "4b0d39c9.45fd88",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "Label-Valid-Tool Button",
        "info": "",
        "x": 140,
        "y": 960,
        "wires": []
    },
    {
        "id": "517420ca.81cd9",
        "type": "fs-ops-dir",
        "z": "240c18c5.8b60a8",
        "name": "",
        "path": "payload",
        "pathType": "msg",
        "filter": "*.jpg",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "c836ed48.a1167"
            ]
        ]
    },
    {
        "id": "c836ed48.a1167",
        "type": "fs-ops-stats",
        "z": "240c18c5.8b60a8",
        "name": "",
        "path": "payload",
        "pathType": "msg",
        "filename": "files",
        "filenameType": "msg",
        "stats": "stats",
        "sizeType": "msg",
        "x": 640,
        "y": 300,
        "wires": [
            [
                "237c9290.242b3e"
            ]
        ]
    },
    {
        "id": "237c9290.242b3e",
        "type": "function",
        "z": "240c18c5.8b60a8",
        "name": "Combine and sort",
        "func": "if (flow.get('max_counter') === undefined) {\n    flow.set('max_counter', 0);\n}\n\nif (msg.topic === 'label_generator')\n{\n    // if queue doesn't exist, create it\n    context.queue = context.queue || [];\n\n    msg.topic = null;\n    \n    for (var i = 0; i < msg.files.length; i++) {\n        var file = msg.files[i];\n        var stat = msg.stats[i];\n        //context.queue.push(msg.payload+file);\n        //context.queue.push('./tensorflow-yolov4-tflite-marine/data/img/'+file);\n        context.queue.push('./data/img/'+file);\n    }\n    flow.set('max_counter', context.queue.length);\n    \n    if (context.queue.length > 0) {\n        msg.max_counter = flow.get('max_counter');\n        msg.counter = msg.max_counter - context.queue.length + 1;\n        console.log(\"context.queue.lengths =\", context.queue.length, msg.counter);\n        return [{payload:context.queue.shift()}, msg, null];\n    }\n}\n\nif (msg.topic === 'trigger' && context.queue.length > 0)\n{\n    msg.topic = null;\n    \n    if (context.queue.length > 0)\n        msg.max_counter = flow.get('max_counter');\n        msg.counter = msg.max_counter - context.queue.length + 1;\n        console.log(\"context.queue.lengths =\", context.queue.length, msg.counter);\n        return [{payload:context.queue.shift()}, msg, null];\n}\nelse\n{\n    msg.kill = true;\n    return [null, null, msg];\n}\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 300,
        "wires": [
            [
                "fd9572de.f5557",
                "bcc8d7d7.943648"
            ],
            [
                "e3018f14.22ad6"
            ],
            []
        ]
    },
    {
        "id": "fd9572de.f5557",
        "type": "debug",
        "z": "240c18c5.8b60a8",
        "name": "newest JPG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 100,
        "wires": []
    },
    {
        "id": "25550a8.e03d0f6",
        "type": "function",
        "z": "240c18c5.8b60a8",
        "name": "",
        "func": "if (flow.get('label_generator_running') === undefined) {\n    flow.set('label_generator_running', false);\n}\n\nif (flow.get('label_generator_running') == false) {\n    msg.payload = '/home/wfs/.node-red/learn/tensorflow-yolov4-tflite-marine/data/img/';\n    flow.set('label_generator_running', true);\n    return msg;\n} else {\n    flow.set('label_generator_running', false);\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 500,
        "wires": [
            [
                "517420ca.81cd9"
            ]
        ]
    },
    {
        "id": "8ffb3308.aa1d7",
        "type": "function",
        "z": "240c18c5.8b60a8",
        "name": "set trigger",
        "func": "msg.topic = 'trigger';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 520,
        "wires": [
            [
                "237c9290.242b3e"
            ]
        ]
    },
    {
        "id": "9eee4108.5fce",
        "type": "delay",
        "z": "240c18c5.8b60a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1480,
        "y": 520,
        "wires": [
            [
                "8ffb3308.aa1d7"
            ]
        ]
    },
    {
        "id": "bcc8d7d7.943648",
        "type": "http request",
        "z": "240c18c5.8b60a8",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8001/predict?{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "8202ba1b.50ec88",
                "a5e371e0.703c4"
            ]
        ]
    },
    {
        "id": "8202ba1b.50ec88",
        "type": "image",
        "z": "240c18c5.8b60a8",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": true,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1220,
        "y": 220,
        "wires": []
    },
    {
        "id": "a5e371e0.703c4",
        "type": "base64",
        "z": "240c18c5.8b60a8",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1320,
        "y": 160,
        "wires": [
            [
                "324260e.91017a"
            ]
        ]
    },
    {
        "id": "324260e.91017a",
        "type": "ui_template",
        "z": "240c18c5.8b60a8",
        "group": "9a15a684.9ab0a8",
        "name": "Display image",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1520,
        "y": 160,
        "wires": [
            [
                "9eee4108.5fce"
            ]
        ]
    },
    {
        "id": "38083c28254e42c9",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "(***) customizing",
        "info": "",
        "x": 640,
        "y": 460,
        "wires": []
    },
    {
        "id": "6b1b728345de713a",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "(***) customizing",
        "info": "",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "c8fd81d6e9ec0673",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "(***) customizing",
        "info": "",
        "x": 360,
        "y": 480,
        "wires": []
    },
    {
        "id": "92b15c23559fe6da",
        "type": "comment",
        "z": "240c18c5.8b60a8",
        "name": "(***) Customizing",
        "info": "",
        "x": 560,
        "y": 960,
        "wires": []
    },
    {
        "id": "e8472d92.442e6",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "set timestamp",
        "func": "function date_format( d, p )\n{\n    var pad = function (n, l)\n    {\n        for (n = String(n), l -= n.length; --l >= 0; n = '0'+n);\n        return n;\n    };\n    var tz = function (n, s)\n    {\n        return ((n<0)?'+':'-')+pad(Math.abs(n/60),2)+s+pad(Math.abs(n%60),2);\n    };\n    return p.replace(/([DdFHhKkMmSsyZ])\\1*|'[^']*'|\"[^\"]*\"/g, function (m)\n    {\n        l = m.length;\n        switch (m.charAt(0))\n        {\n                case 'd': return pad(d.getDate(), l);\n                case 'H': return pad(d.getHours(), l);\n                case 'h': return pad(d.getHours() % 12 || 12, l);\n                case 'K': return pad(d.getHours() % 12, l);\n                case 'k': return pad(d.getHours() || 24, l);\n                case 'm': return pad(d.getMonth() + 1, l );\n                case 'M': return pad(d.getMinutes(), l);\n                case 'S': return pad(d.getMilliseconds(), l);\n                case 's': return pad(d.getSeconds(), l);\n                case 'y': return (l == 2) ? String(d.getFullYear()).substr(2) : pad(d.getFullYear(), l);\n                case 'Z': return tz(d.getTimezoneOffset(), ' ');\n                case \"'\":\n                case '\"': return m.substr(1, l - 2);\n                default: throw new Error('Illegal pattern');\n        }\n    });\n}\n\njs_obj = msg.payload;\n\n//var jstime = date_format(new Date(), 'dd-mm-yyyy HH:MM:ss.SSS');\nvar jstime = date_format(new Date(), 'yyyy-mm-dd HH:MM:ss');\n\njs_obj.timestamp = jstime;\n\nmsg.payload = js_obj ;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "78e5413a.04c8c"
            ]
        ]
    },
    {
        "id": "78e5413a.04c8c",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "handle trace_events",
        "func": "var msg_obj = msg.payload ;\nvar arr_msgs = flow.get(\"trace_events\", 'memoryOnly');\n\nif (arr_msgs === undefined )\n{\n    // Create an empty array if it does not exist yet\n    arr_msgs = [];\n}\n\narr_msgs.push(msg_obj);\nflow.set(\"trace_events\", arr_msgs, 'memoryOnly');\n\nmsg.payload = flow.get(\"trace_events\", 'memoryOnly');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 580,
        "wires": [
            [
                "b29f238c.b59e7"
            ]
        ]
    },
    {
        "id": "b29f238c.b59e7",
        "type": "change",
        "z": "34822d37.61e7b2",
        "name": "sort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "($sort(payload,function($l , $r){$l.timestamp > $r.timestamp }) )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "14b85e9b.acdff1"
            ]
        ]
    },
    {
        "id": "14b85e9b.acdff1",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "trace buffer",
        "func": "var arr = msg.payload ;\n\nvar bufferSize = 30;\nif(typeof arr === undefined)\n{\n    return ;\n} else\n{\n    var arrSize = arr.length;\n    var minSlice = 0;\n    var maxSlice = arrSize;\n    if (arrSize > bufferSize)\n    {\n        minSlice = arrSize - bufferSize;\n    }\n    msg.payload = arr.slice(minSlice, maxSlice);    \n    msg.topic = 'The newest 30 messages :';\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "88c6a602.0cdba8"
            ]
        ]
    },
    {
        "id": "88c6a602.0cdba8",
        "type": "template",
        "z": "34822d37.61e7b2",
        "name": "css",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "table {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    overflow-x: auto;\n    overflow-y: auto;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */",
        "output": "str",
        "x": 1250,
        "y": 760,
        "wires": [
            [
                "fb4adece.6d85b"
            ]
        ]
    },
    {
        "id": "fb4adece.6d85b",
        "type": "template",
        "z": "34822d37.61e7b2",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<head>\n    <style>\n        {{{payload.style}}}\n    </style>\n</head>\n\n\n<table id=\"trace-table\" border=\"1\">\n    \n    \n    <thead>\n        <tr>\n            <th colspan=\"3\">{{topic}}</th>\n        </tr>\n    </thead>\n    \n    \n    <tr>\n        <th>TimeStamp</th>\n        <th>Trace</th>\n        <th>Level</th>\n\n    </tr>\n    {{#payload}}\n        <tr class=\"\">\n            <td>{{timestamp}}</td>            \n            <td>{{t}}</td>\n            <td>{{l}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1250,
        "y": 820,
        "wires": [
            [
                "5654ee4c.5b0a"
            ]
        ]
    },
    {
        "id": "5654ee4c.5b0a",
        "type": "ui_template",
        "z": "34822d37.61e7b2",
        "group": "ecab0ed6.cc0e9",
        "name": "Scrolling Traces",
        "order": 5,
        "width": 13,
        "height": 12,
        "format": "<div ng-bind-html=\"msg.payload\" id=\"div-table\" height=\"500\" ></div>\n\n<script>\n    \n    (function(scope)\n    {\n        scope.$watch('msg.payload', function(data)\n        {\n            var elmt = document.getElementById(\"div-table\");\n            console.log(elmt);\n            // this one is null... why?\n            var elmtTable = document.getElementById(\"trace-table\");\n            console.log(elmtTable);\n            var nrCh = elmt.children.length;\n            console.log(\"nrCh: \" + nrCh);\n            if (nrCh > 0)\n            {\n                // the only div child is the table !\n                var elmtChild = elmt.children[0];\n                console.log(elmtChild);\n                elmtChild.scrollIntoView(false);\n                console.log('scroll to bottom');\n            }\n        });\n    })(scope);\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1440,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b117b529.1062e8",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "stdout",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":1}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "e8472d92.442e6",
                "43ef54ef.078f6c"
            ]
        ]
    },
    {
        "id": "9f381220.320b4",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "stderr",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":2}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 480,
        "wires": [
            [
                "e8472d92.442e6",
                "43ef54ef.078f6c"
            ]
        ]
    },
    {
        "id": "43ef54ef.078f6c",
        "type": "debug",
        "z": "34822d37.61e7b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "379ddc23.a4af24",
        "type": "ui_template",
        "z": "34822d37.61e7b2",
        "group": "ecab0ed6.cc0e9",
        "name": "Learn Graph Viewer",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<a class=\"viewwidget-io\" href=\"http://127.0.0.1:8097\" width=316px data-label_1=\"LOCAL\" data-label_2=\"Darknet\" data-theme=\"original\" >Full Viewer</a>\n<script>\n!function(d, s, id){\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if(!d.getElementById(id)){\n        js = d.createElement(s);\n        js.id = id;\n        js.src = 'http://127.0.0.1:8097';\n        fjs.parentNode.insertBefore(js, fjs);\n    }\n}(document,'script','viewwidget-io-js');\n</script>\n\n<iframe name=\"darknet_viewer\" height=\"1024px\" width=\"680px\" scrolling=\"yes\" frameborder=\"0\" src=\"http://127.0.0.1:8097\" onload=\"reloadOnce(this)\"></iframe>\n\n<!--\n<META HTTP-EQUIV=\"refresh\" CONTENT=\"15\">\n<script>\nsetTimeout(function(){\n    location.reload();\n},5000); // 5000밀리초 = 5초\n</script>\n-->\n\n<form><input id=\"clickButton'\" type=\"button\" value=\"페이지 새로고침\" onClick=\"window.location.reload()\"></form>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "40298f7b.45bdc",
        "type": "ui_text",
        "z": "34822d37.61e7b2",
        "group": "ecab0ed6.cc0e9",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Show Darknet output",
        "label": "",
        "format": "{{msg.date}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "121caa5f.e31a66",
        "type": "ui_switch",
        "z": "34822d37.61e7b2",
        "name": "Run switch",
        "label": "Darknet-Learn",
        "tooltip": "",
        "group": "ecab0ed6.cc0e9",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 230,
        "y": 440,
        "wires": [
            [
                "60c9d8c5.65a278"
            ]
        ]
    },
    {
        "id": "b68cbfc9.bcdb2",
        "type": "ui_text",
        "z": "34822d37.61e7b2",
        "group": "ecab0ed6.cc0e9",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Show msg.status.txt",
        "label": "",
        "format": "{{msg.status.text}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 160,
        "wires": []
    },
    {
        "id": "dd6284f4.082378",
        "type": "status",
        "z": "34822d37.61e7b2",
        "name": "Status Darknet",
        "scope": [
            "7d4fa00d.8f0a3",
            "6607d54d.437d3c",
            "2cf2711d.3184be"
        ],
        "x": 240,
        "y": 160,
        "wires": [
            [
                "79e39024.a15a2"
            ]
        ]
    },
    {
        "id": "79e39024.a15a2",
        "type": "change",
        "z": "34822d37.61e7b2",
        "name": "Set flow.pypid to msg.status.text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "pypid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "b68cbfc9.bcdb2"
            ]
        ]
    },
    {
        "id": "29698b1c.a83194",
        "type": "change",
        "z": "34822d37.61e7b2",
        "name": "0: Set kill message",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "TERM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "121caa5f.e31a66",
                "6607d54d.437d3c"
            ]
        ]
    },
    {
        "id": "ee4f4d7d.9cacc",
        "type": "function",
        "z": "34822d37.61e7b2",
        "name": "1: Don't start if running",
        "func": "msg.date = new Date().toString ()\n\n/*\nconst defaults = {\n  encoding: 'utf8',\n  timeout: 0,\n  maxBuffer: 1024 * 1024 * 500,\n  killSignal: 'SIGTERM',\n  cwd: null,\n  env: null\n};\nmsg.options = defaults;\n*/\n\npid = flow.get(\"pypid\")\nif (pid === undefined) {\n    return msg;\n}\nif (pid.includes(\"pid\")) {\n    return null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 500,
        "wires": [
            [
                "121caa5f.e31a66",
                "6607d54d.437d3c",
                "379ddc23.a4af24"
            ]
        ]
    },
    {
        "id": "eb02cc58.5dd05",
        "type": "inject",
        "z": "34822d37.61e7b2",
        "name": "AtFlowStart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "e9a823d9.e198a"
            ]
        ]
    },
    {
        "id": "e9a823d9.e198a",
        "type": "change",
        "z": "34822d37.61e7b2",
        "name": "Set msg.status.text to \"Not started\"",
        "rules": [
            {
                "t": "set",
                "p": "status.text",
                "pt": "msg",
                "to": "Not started",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "79e39024.a15a2"
            ]
        ]
    },
    {
        "id": "60c9d8c5.65a278",
        "type": "switch",
        "z": "34822d37.61e7b2",
        "name": "split 0/1",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "29698b1c.a83194"
            ],
            [
                "ee4f4d7d.9cacc"
            ]
        ]
    },
    {
        "id": "46e5ff9f.c19a5",
        "type": "change",
        "z": "34822d37.61e7b2",
        "name": "Set payload to 0 (off) at python exit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 660,
        "wires": [
            [
                "121caa5f.e31a66"
            ]
        ]
    },
    {
        "id": "7c05aab4.d73824",
        "type": "comment",
        "z": "34822d37.61e7b2",
        "name": "Use flow variable pypid to track status",
        "info": "",
        "x": 830,
        "y": 100,
        "wires": []
    },
    {
        "id": "5d2ff2d0.42451c",
        "type": "comment",
        "z": "34822d37.61e7b2",
        "name": "Switch shows its input",
        "info": "",
        "x": 260,
        "y": 380,
        "wires": []
    },
    {
        "id": "7494ecac.08b3b4",
        "type": "comment",
        "z": "34822d37.61e7b2",
        "name": "exec mode",
        "info": "",
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "6607d54d.437d3c",
        "type": "exec",
        "z": "34822d37.61e7b2",
        "command": "/home/wfs/.node-red/learn/bin/pylearn_darknet.py",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "PyExec-spawn",
        "x": 840,
        "y": 420,
        "wires": [
            [
                "b117b529.1062e8"
            ],
            [
                "b117b529.1062e8",
                "40298f7b.45bdc"
            ],
            [
                "9f381220.320b4",
                "46e5ff9f.c19a5"
            ]
        ]
    },
    {
        "id": "28f4b1da.96b7be",
        "type": "bigexec",
        "z": "3a588fc6.9fb8e",
        "name": "converter-TFLite",
        "command": "./optimize_the_trained_model.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/tensorflow-yolov4-tflite-marine/",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 560,
        "y": 400,
        "wires": [
            [
                "7c622c18.023e44"
            ],
            [
                "dd20df71.7e6f"
            ],
            [
                "3e87cdc7.d29e52"
            ]
        ]
    },
    {
        "id": "92aca77d.6154d8",
        "type": "inject",
        "z": "3a588fc6.9fb8e",
        "name": "TP(Test Point)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "str",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "28f4b1da.96b7be"
            ]
        ]
    },
    {
        "id": "9a23a9a9.187278",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "set timestamp",
        "func": "function date_format( d, p )\n{\n    var pad = function (n, l)\n    {\n        for (n = String(n), l -= n.length; --l >= 0; n = '0'+n);\n        return n;\n    };\n    var tz = function (n, s)\n    {\n        return ((n<0)?'+':'-')+pad(Math.abs(n/60),2)+s+pad(Math.abs(n%60),2);\n    };\n    return p.replace(/([DdFHhKkMmSsyZ])\\1*|'[^']*'|\"[^\"]*\"/g, function (m)\n    {\n        l = m.length;\n        switch (m.charAt(0))\n        {\n                case 'd': return pad(d.getDate(), l);\n                case 'H': return pad(d.getHours(), l);\n                case 'h': return pad(d.getHours() % 12 || 12, l);\n                case 'K': return pad(d.getHours() % 12, l);\n                case 'k': return pad(d.getHours() || 24, l);\n                case 'm': return pad(d.getMonth() + 1, l );\n                case 'M': return pad(d.getMinutes(), l);\n                case 'S': return pad(d.getMilliseconds(), l);\n                case 's': return pad(d.getSeconds(), l);\n                case 'y': return (l == 2) ? String(d.getFullYear()).substr(2) : pad(d.getFullYear(), l);\n                case 'Z': return tz(d.getTimezoneOffset(), ' ');\n                case \"'\":\n                case '\"': return m.substr(1, l - 2);\n                default: throw new Error('Illegal pattern');\n        }\n    });\n}\n\njs_obj = msg.payload;\n\n//var jstime = date_format(new Date(), 'dd-mm-yyyy HH:MM:ss.SSS');\nvar jstime = date_format(new Date(), 'yyyy-mm-dd HH:MM:ss');\n\njs_obj.timestamp = jstime;\n\nmsg.payload = js_obj ;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 480,
        "wires": [
            [
                "c332310b.cc803"
            ]
        ]
    },
    {
        "id": "c332310b.cc803",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "handle trace_events",
        "func": "var msg_obj = msg.payload ;\nvar arr_msgs = flow.get(\"trace_events\", 'memoryOnly');\n\nif (arr_msgs === undefined )\n{\n    // Create an empty array if it does not exist yet\n    arr_msgs = [];\n}\n\narr_msgs.push(msg_obj);\nflow.set(\"trace_events\", arr_msgs, 'memoryOnly');\n\nmsg.payload = flow.get(\"trace_events\", 'memoryOnly');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 480,
        "wires": [
            [
                "31e9e6d2.bebbaa"
            ]
        ]
    },
    {
        "id": "31e9e6d2.bebbaa",
        "type": "change",
        "z": "3a588fc6.9fb8e",
        "name": "sort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "($sort(payload,function($l , $r){$l.timestamp > $r.timestamp }) )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 931,
        "y": 620,
        "wires": [
            [
                "4428b76e.a20ae8"
            ]
        ]
    },
    {
        "id": "4428b76e.a20ae8",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "trace buffer",
        "func": "var arr = msg.payload ;\n\nvar bufferSize = 30;\nif(typeof arr === undefined)\n{\n    return ;\n} else\n{\n    var arrSize = arr.length;\n    var minSlice = 0;\n    var maxSlice = arrSize;\n    if (arrSize > bufferSize)\n    {\n        minSlice = arrSize - bufferSize;\n    }\n    msg.payload = arr.slice(minSlice, maxSlice);    \n    msg.topic = 'The newest 30 messages :';\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1111,
        "y": 620,
        "wires": [
            [
                "9e9fa5d7.1efd88"
            ]
        ]
    },
    {
        "id": "9e9fa5d7.1efd88",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "css",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "table {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    overflow-x: auto;\n    overflow-y: auto;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */",
        "output": "str",
        "x": 1291,
        "y": 620,
        "wires": [
            [
                "9fb029ad.b393c8"
            ]
        ]
    },
    {
        "id": "9fb029ad.b393c8",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<head>\n    <style>\n        {{{payload.style}}}\n    </style>\n</head>\n\n\n<table id=\"trace-table\" border=\"1\">\n    \n    \n    <thead>\n        <tr>\n            <th colspan=\"3\">{{topic}}</th>\n        </tr>\n    </thead>\n    \n    \n    <tr>\n        <th>TimeStamp</th>\n        <th>Trace</th>\n        <th>Level</th>\n\n    </tr>\n    {{#payload}}\n        <tr class=\"\">\n            <td>{{timestamp}}</td>            \n            <td>{{t}}</td>\n            <td>{{l}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1070,
        "y": 720,
        "wires": [
            [
                "e86d6e57.c641c"
            ]
        ]
    },
    {
        "id": "e86d6e57.c641c",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "7c079c79.413354",
        "name": "Scrolling Traces",
        "order": 3,
        "width": 12,
        "height": 9,
        "format": "<div ng-bind-html=\"msg.payload\" id=\"div-table\" height=\"500\" ></div>\n\n<script>\n    \n    (function(scope)\n    {\n        scope.$watch('msg.payload', function(data)\n        {\n            var elmt = document.getElementById(\"div-table\");\n            console.log(elmt);\n            // this one is null... why?\n            var elmtTable = document.getElementById(\"trace-table\");\n            console.log(elmtTable);\n            var nrCh = elmt.children.length;\n            console.log(\"nrCh: \" + nrCh);\n            if (nrCh > 0)\n            {\n                // the only div child is the table !\n                var elmtChild = elmt.children[0];\n                console.log(elmtChild);\n                elmtChild.scrollIntoView(false);\n                console.log('scroll to bottom');\n            }\n        });\n    })(scope);\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1321,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7c622c18.023e44",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "stdout",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":1}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 367,
        "wires": [
            [
                "9a23a9a9.187278",
                "1c973507.debf6b"
            ]
        ]
    },
    {
        "id": "3e87cdc7.d29e52",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "stderr",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":2}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 435,
        "wires": [
            [
                "9a23a9a9.187278",
                "1c973507.debf6b"
            ]
        ]
    },
    {
        "id": "1c973507.debf6b",
        "type": "debug",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 944,
        "y": 400,
        "wires": []
    },
    {
        "id": "31bb3409.da0ffc",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(***) customization",
        "info": "",
        "x": 570,
        "y": 350,
        "wires": []
    },
    {
        "id": "dd20df71.7e6f",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "rc",
        "func": "if (msg.control && (msg.control.state == 'end' || msg.control.state == 'error')) return { payload: msg.control.rc }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 400,
        "wires": [
            [
                "1c973507.debf6b"
            ]
        ]
    },
    {
        "id": "b26b192.3f54fe8",
        "type": "ui_text",
        "z": "3a588fc6.9fb8e",
        "group": "7c079c79.413354",
        "order": 2,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Converter TFLite:",
        "format": "optimize_the_trained_model.sh",
        "layout": "row-spread",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "7c281e78.54a39",
        "type": "ui_toast",
        "z": "3a588fc6.9fb8e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "trained-model optimizatioin",
        "name": "trained-model optimizatioin",
        "x": 780,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2ec0cf0a.31df9",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640\" height=\"480px\" align=\"center\" src=\"/learn/optimization-tflite.png\"/>",
        "output": "str",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "7c281e78.54a39"
            ]
        ]
    },
    {
        "id": "29a256eb.693dba",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "Start Button",
        "info": "",
        "x": 350,
        "y": 180,
        "wires": []
    },
    {
        "id": "64374688.6f2ee8",
        "type": "inject",
        "z": "3a588fc6.9fb8e",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"optimize the trained-model\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "2b0532cd.f503ae"
            ]
        ]
    },
    {
        "id": "2b0532cd.f503ae",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "7c079c79.413354",
        "order": 1,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "1b6674a9.8ce86b",
                "2ec0cf0a.31df9"
            ]
        ]
    },
    {
        "id": "1b6674a9.8ce86b",
        "type": "trigger",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"optimizing...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"optimize the trained-model\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "2b0532cd.f503ae",
                "b26b192.3f54fe8",
                "28f4b1da.96b7be"
            ]
        ]
    },
    {
        "id": "9e997be2.57d6b8",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "da8fffa8.4c89c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Predict",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "1d1f4452679d71f7",
                "25ff993c8b46626e"
            ]
        ]
    },
    {
        "id": "f615e788.367988",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "dce28be2.3c2588",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Predict",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 1040,
        "wires": [
            [
                "805897d0.296558"
            ]
        ]
    },
    {
        "id": "8bd5efc7.26b9b",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "f3bc44a.623ddb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Predict",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 1120,
        "wires": [
            [
                "daf046d1.f4e868"
            ]
        ]
    },
    {
        "id": "7e75e807.ed4728",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "5d66371e.20bc78",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Predict",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "3b5524a1.ea606c"
            ]
        ]
    },
    {
        "id": "92631acf.f46c68",
        "type": "ui_button",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "group": "66cbaa69.c61454",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Predict",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 220,
        "y": 1400,
        "wires": [
            [
                "80690d72.0f78"
            ]
        ]
    },
    {
        "id": "70fe273a.604988",
        "type": "inject",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1480,
        "wires": [
            [
                "805897d0.296558",
                "daf046d1.f4e868",
                "3b5524a1.ea606c",
                "80690d72.0f78",
                "25ff993c8b46626e",
                "1d1f4452679d71f7"
            ]
        ]
    },
    {
        "id": "a1248e85.74a9d",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 960,
        "wires": [
            [
                "f1cb370f.b24888"
            ]
        ]
    },
    {
        "id": "e368fa3a.1716e8",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "ouput format : buffer",
        "info": "",
        "x": 490,
        "y": 1540,
        "wires": []
    },
    {
        "id": "45c5e3f0.f3212c",
        "type": "file",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 830,
        "y": 1040,
        "wires": [
            [
                "2249990a.a75d66",
                "7dad3597.55295c"
            ]
        ]
    },
    {
        "id": "2249990a.a75d66",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "50a0ee2.a2f8a1"
            ]
        ]
    },
    {
        "id": "805897d0.296558",
        "type": "jimp-image",
        "z": "3a588fc6.9fb8e",
        "name": "edge-gesture",
        "data": "http://192.168.0.12:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 470,
        "y": 1040,
        "wires": [
            [
                "b5347ce0.75d38"
            ]
        ]
    },
    {
        "id": "4d26bbdf.22a1a4",
        "type": "file",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 830,
        "y": 1120,
        "wires": [
            [
                "ff314864.9ed468",
                "7dad3597.55295c"
            ]
        ]
    },
    {
        "id": "ff314864.9ed468",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "34eaad73.8ad642"
            ]
        ]
    },
    {
        "id": "daf046d1.f4e868",
        "type": "jimp-image",
        "z": "3a588fc6.9fb8e",
        "name": "edge-gesture",
        "data": "http://192.168.0.13:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "cb34ae96.094ad"
            ]
        ]
    },
    {
        "id": "561a62e8.60e29c",
        "type": "file",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 830,
        "y": 1320,
        "wires": [
            [
                "3ddda963.31b8b6",
                "7dad3597.55295c"
            ]
        ]
    },
    {
        "id": "3ddda963.31b8b6",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 1320,
        "wires": [
            [
                "a67391e.fe8937"
            ]
        ]
    },
    {
        "id": "3b5524a1.ea606c",
        "type": "jimp-image",
        "z": "3a588fc6.9fb8e",
        "name": "edge-gesture",
        "data": "http://192.168.0.14:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "3eb99282.3445ee"
            ]
        ]
    },
    {
        "id": "cd19d997.559458",
        "type": "file",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 830,
        "y": 1400,
        "wires": [
            [
                "f5b73808.01c508",
                "7dad3597.55295c"
            ]
        ]
    },
    {
        "id": "f5b73808.01c508",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1000,
        "y": 1400,
        "wires": [
            [
                "7c7e3ce6.a99b14"
            ]
        ]
    },
    {
        "id": "80690d72.0f78",
        "type": "jimp-image",
        "z": "3a588fc6.9fb8e",
        "name": "edge-gesture",
        "data": "http://192.168.0.15:8000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 470,
        "y": 1400,
        "wires": [
            [
                "78743e5.0c832c"
            ]
        ]
    },
    {
        "id": "50a0ee2.a2f8a1",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "dce28be2.3c2588",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1650,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a67391e.fe8937",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "5d66371e.20bc78",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1650,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "7c7e3ce6.a99b14",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "66cbaa69.c61454",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1650,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "f1cb370f.b24888",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "da8fffa8.4c89c",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1650,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "34eaad73.8ad642",
        "type": "ui_template",
        "z": "3a588fc6.9fb8e",
        "group": "f3bc44a.623ddb8",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1650,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b5347ce0.75d38",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '02'\nmsg.edge_id = edge_id;\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "45c5e3f0.f3212c"
            ]
        ]
    },
    {
        "id": "cb34ae96.094ad",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '03'\nmsg.edge_id = edge_id;\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "4d26bbdf.22a1a4"
            ]
        ]
    },
    {
        "id": "3eb99282.3445ee",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '04'\nmsg.edge_id = edge_id;\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1320,
        "wires": [
            [
                "561a62e8.60e29c"
            ]
        ]
    },
    {
        "id": "78743e5.0c832c",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = '05'\nmsg.edge_id = edge_id;\n\nd = new Date()\nmsg.filename = \"./learn/getreq_imgs/\"+\"ID\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1400,
        "wires": [
            [
                "cd19d997.559458"
            ]
        ]
    },
    {
        "id": "c7b68e81.f65d4",
        "type": "bigexec",
        "z": "3a588fc6.9fb8e",
        "name": "detect.py",
        "command": "/usr/bin/python3",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/tensorflow-yolov4-tflite-marine",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "65debabd.ca90f4"
            ],
            [],
            []
        ]
    },
    {
        "id": "7dad3597.55295c",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "command & parameter",
        "func": "msg.payload = 'detect.py --weights ../dist/yolov4-custom.tflite --size 416 --model yolov4 --tiny --framework tflite --image ../../' + msg.filename;\nconsole.log('---------', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "c7b68e81.f65d4"
            ]
        ]
    },
    {
        "id": "d787e6bf.b18a48",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(***) customization",
        "info": "",
        "x": 1050,
        "y": 1200,
        "wires": []
    },
    {
        "id": "25f78881.5504c8",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(***) customization",
        "info": "",
        "x": 1450,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3316bfc1.59d1f",
        "type": "ui_toast",
        "z": "3a588fc6.9fb8e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "prediction result",
        "name": "prediction result",
        "x": 1900,
        "y": 1060,
        "wires": [
            [
                "71cdf2ac.85f23c"
            ]
        ]
    },
    {
        "id": "44a525e9.4f631c",
        "type": "template",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"{{filename}}\"/>\n",
        "output": "str",
        "x": 1640,
        "y": 1240,
        "wires": [
            [
                "3316bfc1.59d1f",
                "ba2b9aae.516eb8"
            ]
        ]
    },
    {
        "id": "65debabd.ca90f4",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "filename subration",
        "func": "let words = filename = msg.filename.replace('./','/').split('/');\nconsole.log('**********', words[words.length-1].split('.')[0]);\nmsg.filename = '/learn/tensorflow-yolov4-tflite-marine/results/' + words[words.length-1].split('.')[0] + '_label.jpg';\nconsole.log('**********', msg.filename);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1240,
        "wires": [
            [
                "44a525e9.4f631c"
            ]
        ]
    },
    {
        "id": "ba2b9aae.516eb8",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "Distribution",
        "func": "if (msg.edge_id === '01')\n    return [msg,null,null,null,null];\n\nif (msg.edge_id === '02')\n    return [null,msg,null,null,null];\n\nif (msg.edge_id === '03')\n    return [null,null,msg,null,null];\n    \nif (msg.edge_id === '04')\n    return [null,null,null,msg,null];\n    \nif (msg.edge_id === '05')\n    return [null,null,null,null,msg];\n    \n//return msg;",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1240,
        "wires": [
            [
                "f1cb370f.b24888"
            ],
            [
                "50a0ee2.a2f8a1"
            ],
            [
                "34eaad73.8ad642"
            ],
            [
                "a67391e.fe8937"
            ],
            [
                "7c7e3ce6.a99b14"
            ]
        ]
    },
    {
        "id": "71cdf2ac.85f23c",
        "type": "debug",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "filename",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ec75d7dbc7ae1b90",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(**) customization",
        "info": "",
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "c4bed2f1d924184f",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(***) customization",
        "info": "",
        "x": 490,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0b90e7d7f90237fd",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "ouput format : folder",
        "info": "",
        "x": 690,
        "y": 1540,
        "wires": []
    },
    {
        "id": "47a1920330499575",
        "type": "comment",
        "z": "3a588fc6.9fb8e",
        "name": "(***) customization",
        "info": "",
        "x": 1270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a30f9580d93a633e",
        "type": "file",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 820,
        "y": 940,
        "wires": [
            [
                "a1248e85.74a9d",
                "7dad3597.55295c"
            ]
        ]
    },
    {
        "id": "119fa21cecd4e71e",
        "type": "function",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nedge_id = 'webcam';\n\nd = new Date();\n\nmsg.filename = \"./learn/getreq_imgs/\"+edge_id+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 940,
        "wires": [
            [
                "a30f9580d93a633e"
            ]
        ]
    },
    {
        "id": "3e57ebe7c14c2f79",
        "type": "jimp-image",
        "z": "3a588fc6.9fb8e",
        "name": "capture image",
        "data": "/mnt/c/Users/dqkim/capture.jpg",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 520,
        "y": 940,
        "wires": [
            [
                "119fa21cecd4e71e",
                "b8a1fa0020dfadf5"
            ]
        ]
    },
    {
        "id": "b8a1fa0020dfadf5",
        "type": "image viewer",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 570,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "1d1f4452679d71f7",
        "type": "http request",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.30.1.18:5001/capture",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "25ff993c8b46626e",
        "type": "delay",
        "z": "3a588fc6.9fb8e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 980,
        "wires": [
            [
                "3e57ebe7c14c2f79"
            ]
        ]
    },
    {
        "id": "e6b01d6.6c19be",
        "type": "ui_table",
        "z": "6fa9f0cb.012fa",
        "group": "80449991.6026b8",
        "name": "",
        "order": 3,
        "width": 10,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ip",
                "title": "IP",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "port_sshpass",
                "title": "PORT",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "version",
                "title": "Version",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "check",
                "title": "Update",
                "width": "",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1130,
        "y": 160,
        "wires": [
            [
                "e3d2cb24.703bd8",
                "6524f489.6f128c",
                "bbb6dc88.6e671",
                "2218f685.addc3a"
            ]
        ]
    },
    {
        "id": "e3d2cb24.703bd8",
        "type": "debug",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "6e0ea508.00237c",
        "type": "link in",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "links": [
            "849b4298.f5b44",
            "6fc3766f.0ac3e8"
        ],
        "x": 955,
        "y": 160,
        "wires": [
            [
                "e6b01d6.6c19be"
            ]
        ]
    },
    {
        "id": "a958b8d5.0d49f8",
        "type": "link out",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "links": [
            "86c5f5a9.21c718"
        ],
        "x": 495,
        "y": 140,
        "wires": []
    },
    {
        "id": "acf6e72.4bc4918",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "updateData",
        "func": "let words = msg.payload.split(':');\n\nmsg.topic = words[0];   // edge_id\n\nlet version = 0;\nif (words.length === 2 || words[5] === undefined)\n    words[5] = 0;\nelse if (words.length === 6)\n    version = Number(words[5].split('\"')[0]);\n\nmsg.payload={\n    command:\"updateData\",\n    arguments: [\n        [\n            {\n            \"id\":words[0],\n            \"version\":version\n            }\n        ]\n    ],\n    returnPromise: true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "e6b01d6.6c19be"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "f470527f.dfa4c",
        "type": "link in",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "links": [
            "a3c65e13.f4c3f",
            "ef837878.c00878",
            "4af89b63.b89764"
        ],
        "x": 635,
        "y": 260,
        "wires": [
            [
                "acf6e72.4bc4918"
            ]
        ]
    },
    {
        "id": "6524f489.6f128c",
        "type": "ui_text",
        "z": "6fa9f0cb.012fa",
        "d": true,
        "group": "80449991.6026b8",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "Logger",
        "label": "<log>",
        "format": "id:{{msg.payload.id}} column:{{msg.topic}} update:{{msg.payload.check}}",
        "layout": "row-spread",
        "x": 1340,
        "y": 200,
        "wires": []
    },
    {
        "id": "bbb6dc88.6e671",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "func": "if (msg.topic === \"check\")    // click check field on table\n{\n    //console.log(msg.payload.id);\n    //console.log(msg.payload.check);\n    \n    msg.payload={\n        command:\"updateData\",\n        arguments: [\n            [\n                {\n               \"id\":msg.payload.id,\n               \"check\":!msg.payload.check\n               }\n            ]\n        ],\n        returnPromise: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 260,
        "wires": [
            [
                "e6b01d6.6c19be",
                "9490f57.c85cd08"
            ]
        ]
    },
    {
        "id": "c44f4ec6.be1f",
        "type": "bigexec",
        "z": "6fa9f0cb.012fa",
        "name": "sshpass_scp",
        "command": "./user_scp.sh",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/home/wfs/.node-red/learn/bin",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 990,
        "y": 600,
        "wires": [
            [
                "dec1cb2.3470438",
                "21e96b48.2c5964"
            ],
            [
                "f014ed58.4304f",
                "dec1cb2.3470438"
            ],
            [
                "b236ff18.faa4a"
            ]
        ]
    },
    {
        "id": "f014ed58.4304f",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "sshpass rc",
        "func": "if (msg.control && (msg.control.state == 'end' || msg.control.state == 'error')) return { payload: msg.control.rc }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 600,
        "wires": [
            [
                "c28f086b.4d4868"
            ]
        ]
    },
    {
        "id": "c28f086b.4d4868",
        "type": "debug",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 620,
        "wires": []
    },
    {
        "id": "cf8325c0.41aba8",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(***) customization",
        "info": "",
        "x": 1010,
        "y": 540,
        "wires": []
    },
    {
        "id": "fc624c0c.2958",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(***) Customizing ...File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 210,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7a5de203.57fbbc",
        "type": "fs-file-lister",
        "z": "6fa9f0cb.012fa",
        "name": "Files",
        "start": "/home",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "d676b09.e85ac5",
                "f72700b8.6b80b"
            ]
        ]
    },
    {
        "id": "2f6ca353.77300c",
        "type": "fs-file-lister",
        "z": "6fa9f0cb.012fa",
        "name": "Folders",
        "start": "/home",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 800,
        "y": 1280,
        "wires": [
            [
                "6f242f2b.594ed"
            ]
        ]
    },
    {
        "id": "a6716de6.d99ad",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder === undefined) {\n    folder = \"/home\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden === undefined) {\n    hidden = false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic === \"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder = the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\n\nif (msg.topic === \"refresh\") {\n    folder = msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic === \"change\") {\n    folder = msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic === \"hidden\") {\n    hidden = msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "7a5de203.57fbbc",
                "2f6ca353.77300c",
                "e31fbf3.cc50a4"
            ]
        ]
    },
    {
        "id": "d676b09.e85ac5",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1160,
        "wires": [
            [
                "523dfe7.7b1cd"
            ]
        ]
    },
    {
        "id": "f72700b8.6b80b",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 1220,
        "wires": [
            [
                "ce349a37.8f7068"
            ]
        ]
    },
    {
        "id": "6f242f2b.594ed",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "abc1b84.4bbbb48"
            ]
        ]
    },
    {
        "id": "9878ee01.5ea22",
        "type": "inject",
        "z": "6fa9f0cb.012fa",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "/home/wfs/.node-red/learn/dist",
        "payloadType": "str",
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "e31fbf3.cc50a4",
        "type": "ui_text",
        "z": "6fa9f0cb.012fa",
        "group": "80449991.6026b8",
        "order": 11,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 800,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8e73d830.e699e8",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "topicType": "str",
        "x": 130,
        "y": 1240,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "39f9ef74.3d1f7",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected === undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1340,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "26da7923.7950d6",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "/home/wfs/.node-red/learn/dist",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "d0b9fd9f.640ea",
        "type": "ui_switch",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "80449991.6026b8",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "animate": true,
        "x": 140,
        "y": 1280,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "523dfe7.7b1cd",
        "type": "ui_dropdown",
        "z": "6fa9f0cb.012fa",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "80449991.6026b8",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 1230,
        "y": 1160,
        "wires": [
            [
                "4b98120d.74cefc"
            ]
        ]
    },
    {
        "id": "ce349a37.8f7068",
        "type": "template",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1220,
        "y": 1220,
        "wires": [
            [
                "e0233f3.1408ec"
            ]
        ]
    },
    {
        "id": "abc1b84.4bbbb48",
        "type": "ui_dropdown",
        "z": "6fa9f0cb.012fa",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "80449991.6026b8",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 1240,
        "y": 1280,
        "wires": [
            [
                "e031bf4b.77473"
            ]
        ]
    },
    {
        "id": "6b7b3560.7c321c",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Choice",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "Choice",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1400,
        "wires": [
            [
                "325c13b9.ad742c"
            ]
        ]
    },
    {
        "id": "bc8b5ff6.f24cd",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 1340,
        "wires": [
            [
                "39f9ef74.3d1f7"
            ]
        ]
    },
    {
        "id": "4b98120d.74cefc",
        "type": "change",
        "z": "6fa9f0cb.012fa",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "e0233f3.1408ec",
        "type": "ui_template",
        "z": "6fa9f0cb.012fa",
        "group": "80449991.6026b8",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1420,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "e031bf4b.77473",
        "type": "change",
        "z": "6fa9f0cb.012fa",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "325c13b9.ad742c",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "func": "let file = flow.get(\"fileselected\");\n\nmsg.payload = file;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "1f00219b.bcc87e"
            ]
        ]
    },
    {
        "id": "1f00219b.bcc87e",
        "type": "debug",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1400,
        "wires": []
    },
    {
        "id": "326ece3f.336692",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "/home/wfs/.node-red/learn/dist",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "a6716de6.d99ad"
            ]
        ]
    },
    {
        "id": "d94aa9e8.6f5738",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "Please check the payload  value of \"Reset\" button",
        "info": "",
        "x": 260,
        "y": 1020,
        "wires": []
    },
    {
        "id": "48a49c29.0b13b4",
        "type": "inject",
        "z": "6fa9f0cb.012fa",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "ef230c7d.36913"
            ]
        ]
    },
    {
        "id": "dae15202.440ba",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "Start Button",
        "info": "",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "1dfc4db1.8569d2",
        "type": "trigger",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"starting\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "ef230c7d.36913"
            ]
        ]
    },
    {
        "id": "ef230c7d.36913",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 16,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "distribute_event",
        "topicType": "str",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "1dfc4db1.8569d2",
                "9490f57.c85cd08"
            ]
        ]
    },
    {
        "id": "449ab53f.89d0fc",
        "type": "inject",
        "z": "6fa9f0cb.012fa",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"refresh\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "70e08636.e35bd8"
            ]
        ]
    },
    {
        "id": "2f5018d1.f48138",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "Refresh Button",
        "info": "",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "70e08636.e35bd8",
        "type": "ui_button",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "group": "80449991.6026b8",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "81f55fbd.09e7d",
                "a958b8d5.0d49f8"
            ]
        ]
    },
    {
        "id": "81f55fbd.09e7d",
        "type": "trigger",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"refreshing\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"refresh\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "70e08636.e35bd8"
            ]
        ]
    },
    {
        "id": "a6037244.3033e",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(L6.1)",
        "info": "",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "2d33696d.b98866",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(**) customization",
        "info": "",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "8516000f.e3b13",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "-> (L1.2 )",
        "info": "",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "7659bbbd.6ed514",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "-> (L1.1)",
        "info": "",
        "x": 1000,
        "y": 120,
        "wires": []
    },
    {
        "id": "2218f685.addc3a",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "func": "if (msg.return.command === 'updateOrAddData' && msg.return.arguments[0].length >= 2)\n{\n    //console.log(\"++++++\", msg.return.command, msg.return.arguments[0].length);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "64be0a39.3843d4"
            ]
        ]
    },
    {
        "id": "64be0a39.3843d4",
        "type": "link out",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "links": [
            "8f197dd9.14d3d"
        ],
        "x": 1615,
        "y": 100,
        "wires": []
    },
    {
        "id": "e9a6d95e.166678",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(L6.2)",
        "info": "",
        "x": 1630,
        "y": 60,
        "wires": []
    },
    {
        "id": "6b09bc5.318e744",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "update table values",
        "info": "",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "9490f57.c85cd08",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "table recorder",
        "func": "var status = {fill:\"red\",shape:\"ring\",text:\"an table change event\"};\nvar success = (msg.topic && msg.topic===\"success\") || false;\nvar tableData = flow.get(\"tableData\");\nif (tableData === undefined) {\n    tableData = [];\n    flow.set(\"tableData\",tableData);\n}\n\n// find the index for a row in tableData for a given index (id)\nfunction checkIndex(id) {\n    let matchRow=-1\n    tableData.forEach(function (row,index){\n        if (row.id === id){\n            matchRow=index;\n            return matchRow;\n        }\n    })\n    return matchRow;\n}\n\n// flat merge one row \nfunction mergeRow(dest,source) {\n    Object.keys(source).forEach(function(key) {\n        dest[key]=source[key];\n    })\n}\n\n//merge or add one or many rows into tableData \nfunction mergeData(newData,toTop) {\n    newData.forEach(function (item,index) {\n        node.warn([\"findIndex\",item]);\n        let row=checkIndex(item.id);\n        if (row<0) { // row do not existst in tableData\n            if (toTop) {\n                tableData.push(item);\n                status.text+=\"newRow @ top\";\n            } else {\n                tableData.unshift(item);\n                status.text+=\"newRow @ bottom\";\n            }\n            return;\n        } else { // row exists so update\n            mergeRow(tableData[row],item);\n            status.text+=\"row updated\";\n            return;\n        }\n        if (status.text!==\"\") node.status(status);\n    });\n}\n\nswitch (typeof msg.payload){\n    case \"object\":\n        node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        if (Array.isArray(msg.payload)) { // replace all tableData\n            status={fill:\"green\",shape:\"dot\",text:\"table replaced \"+msg.payload.length+\" rows\"};\n            tableData=RED.util.cloneMessage(msg.payload); \n        } else {\n            switch (msg.payload.command) { // clearData does not return a promise!\n                case \"clearData\":\n                    status={fill:\"green\",shape:\"dot\",text:\"clearData: done\"};\n                    tableData=[];\n                    flow.set(\"lastId\",0);\n                    break;                \n            }\n        }\n        break;\n    default: // likely a msg fom a ui-table command or callback\n        if (msg.hasOwnProperty(\"topic\")&&\n            msg.hasOwnProperty(\"ui_control\") && \n            msg.ui_control.hasOwnProperty(\"callback\") &&\n            msg.hasOwnProperty(\"return\")) { // message originates from a ui-table callback\n            if (success) {\n                switch(msg.return.command) {\n                    case \"addRow\":\n                        status.text=\"addRow: \";\n                        mergeData(msg.return.arguments[0],msg.return.arguments[1]);\n                        status.shape=\"dot\";\n                        break;\n                    case \"updateOrAddData\":\n                        status.text=\"updateOrAddData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    case \"updateData\":  // written by bblee\n                        status.text=\"updateData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    case \"deleteRow\":\n                        let row=checkIndex(msg.return.arguments[0]);\n                        tableData.splice(row,1);\n                        status.shape=\"dot\";\n                        status.text=\"deleteRow: \"+row+\" deleted\";\n                        break;\n                    default:\n                        status={fill:\"yellow\",shape:\"dot\",text:msg.return.command + \" unknown!\"};\n                        break;         \n                }\n            } else {\n                status.text=msg.topic+\" \"+msg.error;\n            }\n        }\n        break;\n}\nif (success) status.fill=\"green\";\nflow.set(\"tableData\",tableData);\nnode.status(status);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 360,
        "wires": [
            [
                "91c9e3bf.119f"
            ]
        ],
        "icon": "font-awesome/fa-database",
        "info": "# simple ui-table handler\n## abstract\nUsing ui-table with commands offer the hole flexibilty of tabulator. The table can be manipulated down to cell level.\nAs the ui-table node only passes the commands to tabulator and receives promises back the node does not hold the table data. If the data should be available after refresh, tab change, new connections the flow is responsible to cache the data and all the manipulations.\nThis node takes care of most simple data manipulation commands and holds a copy of the data in `flow.context.tabledata`\n\n## details\n\n### row index (id)\n\nTo identify a [row a index](http://tabulator.info/docs/4.5/data#overview) column has to be defined. This colum defaults to `id` but can be changed by specifing a **field** by using `msg.ui_control`. In this example the row index is a simple counter adding up by one if a new line is added.\n\n### addRow command\n\n[details @ tabulator addRow docs](http://tabulator.info/docs/4.5/update#alter-add)\n\nYou can add a row by sending the `addRow` command. You can decide if the row adds on the top or at the bottom of table.\n\n### addOrUpdate command\n\n[details @ tabulator addOrUpdate docs](http://tabulator.info/docs/4.5/update#alter-update)\n\nTo update data the best way is to use the `addOrUpdate` command. If the row indetified by the index is not exeisting a new row will be added automatically\n\n### deleteRow command\n\n[details @ tabulator deleteRow docs](http://tabulator.info/docs/4.5/update#row)\n\nDelete one or more rows (passing an array always results in \"row not found error\"! I think there is an issue in tabulator)\n\n### clearData\n\n[details @ tabulator clearData docs](http://tabulator.info/docs/4.5/update#alter-empty)\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "b5da469f.6c02f8",
        "type": "inject",
        "z": "6fa9f0cb.012fa",
        "name": "TP(Test Point)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 400,
        "wires": [
            [
                "9490f57.c85cd08"
            ]
        ]
    },
    {
        "id": "91c9e3bf.119f",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "distribute model file",
        "func": "let tableData = flow.get(\"tableData\");\nlet file = flow.get(\"fileselected\");\n//console.log('#####', tableData, file);\n\nif (file === undefined) {\n    console.log('select model file to distribute');\n    return null;\n}\n\nif (msg.topic === 'distribute_event')\n{\n    msg.topic = null;\n    \n    let pwd = 'raspberry';\n    let port = 22;\n    let tableData = flow.get(\"tableData\");\n\n    //console.log('$$$$$', tableData);\n    //console.log('$$$$$', msg.topic);\n    //console.log('$$$$$', tableData.length);\n    \n    // if queue doesn't exist, create it\n    context.queue = context.queue || [];\n    context.busy = context.busy || false;\n    \n    var i = 0;\n    for (i = 0; i < tableData.length; i++) {\n        if (tableData[i].port_sshpass === '-' && tableData[i].check == true)\n            tableData[i].port_sshpass = port;\n    }\n    \n    for (i = 0; i < tableData.length; i++) {\n        if (tableData[i].check == true)\n        {\n            msg.payload = tableData[i].id + ' ' + tableData[i].ip + ' ' + tableData[i].port_sshpass + ' ' +\n                      pwd + ' ' + file + ' ' + '/home/pi/edu/ckpt_data';\n            context.queue.push(msg.payload);\n        }\n    }\n    \n    if (context.queue.length > 0) {\n        var m = context.queue.shift();\n        //console.log('0000000000000', msg.payload);\n        return {payload:m};\n    }\n}\n\nif (msg.topic === 'trigger' && context.queue.length > 0)\n{\n    // if the msg is a trigger one release next message\n    if (msg.hasOwnProperty(\"trigger\")) {\n        if (context.queue.length > 0) {\n            var m = context.queue.shift();\n            //console.log('0000000000000', m);\n\n            return {payload:m};\n        }\n    }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 360,
        "wires": [
            [
                "c44f4ec6.be1f"
            ]
        ]
    },
    {
        "id": "dec1cb2.3470438",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.topic = 'trigger';\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 520,
        "wires": [
            [
                "91c9e3bf.119f"
            ]
        ]
    },
    {
        "id": "1fdf6e1f.f00f82",
        "type": "comment",
        "z": "6fa9f0cb.012fa",
        "name": "(***) customization",
        "info": "",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "a73b3cd3.34ce8",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "set timestamp",
        "func": "function date_format( d, p )\n{\n    var pad = function (n, l)\n    {\n        for (n = String(n), l -= n.length; --l >= 0; n = '0'+n);\n        return n;\n    };\n    var tz = function (n, s)\n    {\n        return ((n<0)?'+':'-')+pad(Math.abs(n/60),2)+s+pad(Math.abs(n%60),2);\n    };\n    return p.replace(/([DdFHhKkMmSsyZ])\\1*|'[^']*'|\"[^\"]*\"/g, function (m)\n    {\n        l = m.length;\n        switch (m.charAt(0))\n        {\n                case 'd': return pad(d.getDate(), l);\n                case 'H': return pad(d.getHours(), l);\n                case 'h': return pad(d.getHours() % 12 || 12, l);\n                case 'K': return pad(d.getHours() % 12, l);\n                case 'k': return pad(d.getHours() || 24, l);\n                case 'm': return pad(d.getMonth() + 1, l );\n                case 'M': return pad(d.getMinutes(), l);\n                case 'S': return pad(d.getMilliseconds(), l);\n                case 's': return pad(d.getSeconds(), l);\n                case 'y': return (l == 2) ? String(d.getFullYear()).substr(2) : pad(d.getFullYear(), l);\n                case 'Z': return tz(d.getTimezoneOffset(), ' ');\n                case \"'\":\n                case '\"': return m.substr(1, l - 2);\n                default: throw new Error('Illegal pattern');\n        }\n    });\n}\n\njs_obj = msg.payload;\n\n//var jstime = date_format(new Date(), 'dd-mm-yyyy HH:MM:ss.SSS');\nvar jstime = date_format(new Date(), 'yyyy-mm-dd HH:MM:ss');\n\njs_obj.timestamp = jstime;\n\nmsg.payload = js_obj ;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 680,
        "wires": [
            [
                "c3b31228.5324f"
            ]
        ]
    },
    {
        "id": "c3b31228.5324f",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "handle trace_events",
        "func": "var msg_obj = msg.payload ;\nvar arr_msgs = flow.get(\"trace_events\", 'memoryOnly');\n\nif (arr_msgs === undefined )\n{\n    // Create an empty array if it does not exist yet\n    arr_msgs = [];\n}\n\narr_msgs.push(msg_obj);\nflow.set(\"trace_events\", arr_msgs, 'memoryOnly');\n\nmsg.payload = flow.get(\"trace_events\", 'memoryOnly');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 680,
        "wires": [
            [
                "b45c35a1.f3f618"
            ]
        ]
    },
    {
        "id": "b45c35a1.f3f618",
        "type": "change",
        "z": "6fa9f0cb.012fa",
        "name": "sort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "($sort(payload,function($l , $r){$l.timestamp > $r.timestamp }) )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 840,
        "wires": [
            [
                "f743cb01.626ad8"
            ]
        ]
    },
    {
        "id": "f743cb01.626ad8",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "trace buffer",
        "func": "var arr = msg.payload ;\n\nvar bufferSize = 30;\nif(typeof arr === undefined)\n{\n    return ;\n} else\n{\n    var arrSize = arr.length;\n    var minSlice = 0;\n    var maxSlice = arrSize;\n    if (arrSize > bufferSize)\n    {\n        minSlice = arrSize - bufferSize;\n    }\n    msg.payload = arr.slice(minSlice, maxSlice);    \n    msg.topic = 'The newest 30 messages :';\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "1d42dcbd.9cc473"
            ]
        ]
    },
    {
        "id": "1d42dcbd.9cc473",
        "type": "template",
        "z": "6fa9f0cb.012fa",
        "name": "css",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "table {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    overflow-x: auto;\n    overflow-y: auto;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */",
        "output": "str",
        "x": 1810,
        "y": 840,
        "wires": [
            [
                "4286c351.ccbd0c"
            ]
        ]
    },
    {
        "id": "4286c351.ccbd0c",
        "type": "template",
        "z": "6fa9f0cb.012fa",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<head>\n    <style>\n        {{{payload.style}}}\n    </style>\n</head>\n\n\n<table id=\"trace-table\" border=\"1\">\n    \n    \n    <thead>\n        <tr>\n            <th colspan=\"3\">{{topic}}</th>\n        </tr>\n    </thead>\n    \n    \n    <tr>\n        <th>TimeStamp</th>\n        <th>Trace</th>\n        <th>Level</th>\n\n    </tr>\n    {{#payload}}\n        <tr class=\"\">\n            <td>{{timestamp}}</td>            \n            <td>{{t}}</td>\n            <td>{{l}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1610,
        "y": 960,
        "wires": [
            [
                "a6710df3.c40ac"
            ]
        ]
    },
    {
        "id": "a6710df3.c40ac",
        "type": "ui_template",
        "z": "6fa9f0cb.012fa",
        "group": "80449991.6026b8",
        "name": "Scrolling Traces",
        "order": 17,
        "width": 10,
        "height": 12,
        "format": "<div ng-bind-html=\"msg.payload\" id=\"div-table\" height=\"500\" ></div>\n\n<script>\n    \n    (function(scope)\n    {\n        scope.$watch('msg.payload', function(data)\n        {\n            var elmt = document.getElementById(\"div-table\");\n            console.log(elmt);\n            // this one is null... why?\n            var elmtTable = document.getElementById(\"trace-table\");\n            console.log(elmtTable);\n            var nrCh = elmt.children.length;\n            console.log(\"nrCh: \" + nrCh);\n            if (nrCh > 0)\n            {\n                // the only div child is the table !\n                var elmtChild = elmt.children[0];\n                console.log(elmtChild);\n                elmtChild.scrollIntoView(false);\n                console.log('scroll to bottom');\n            }\n        });\n    })(scope);\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1840,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "21e96b48.2c5964",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "stdout",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":1}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "a73b3cd3.34ce8"
            ]
        ]
    },
    {
        "id": "b236ff18.faa4a",
        "type": "function",
        "z": "6fa9f0cb.012fa",
        "name": "stderr",
        "func": "msg.payload = {\"t\":msg.payload,\"l\":2}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "c28f086b.4d4868",
                "a73b3cd3.34ce8"
            ]
        ]
    },
    {
        "id": "849ee1bf.1ffc1",
        "type": "ui_ui_control",
        "z": "6fa9f0cb.012fa",
        "name": "",
        "events": "change",
        "x": 1480,
        "y": 60,
        "wires": [
            [
                "64be0a39.3843d4"
            ]
        ]
    },
    {
        "id": "a13fe9fde14c1265",
        "type": "template",
        "z": "052e83af3394bd32",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"http://172.30.1.18:5001/inference\">",
        "output": "str",
        "x": 660,
        "y": 400,
        "wires": [
            [
                "c1a4eb3a44ef7031"
            ]
        ]
    },
    {
        "id": "c1a4eb3a44ef7031",
        "type": "ui_template",
        "z": "052e83af3394bd32",
        "group": "1fcdc80d66586d65",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2798a6b844312195",
        "type": "ui_button",
        "z": "052e83af3394bd32",
        "name": "",
        "group": "1fcdc80d66586d65",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Webcam",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "a13fe9fde14c1265"
            ]
        ]
    },
    {
        "id": "bdc90847ce31474f",
        "type": "inject",
        "z": "052e83af3394bd32",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 240,
        "wires": [
            [
                "a13fe9fde14c1265"
            ]
        ]
    },
    {
        "id": "a018ccca987d077b",
        "type": "comment",
        "z": "052e83af3394bd32",
        "name": "flask ip 맞춰서 변경",
        "info": "1. local에서 돌릴 때는 따로 변경하지 않는 한\nhttp://127.0.0.1:5000/stream\n\n2. 그 외에는 연결된 내부 ip 맞춰서 변경(고정 ip면 괜찮)\nhttp://172.30.1.54:5000/stream",
        "x": 670,
        "y": 440,
        "wires": []
    },
    {
        "id": "f564c5c5.003428",
        "type": "function",
        "z": "5bc58e01.4f95f",
        "name": "updateData",
        "func": "if (msg.payload <= 40)\n    msg.dangerous = 'G';\nelse if (msg.payload >= 41 && msg.payload <= 60)\n    msg.dangerous = 'Y';\nelse\n    msg.dangerous = 'R';\n\nif (msg.topic == 'edge_01'){\n    node.status({fill:\"red\",shape:\"ring\",text:msg.topic+':'+msg.payload+'°C'});\n    return [msg,null,null,null,null];\n}\n\nif (msg.topic == 'edge_02'){\n    node.status({fill:\"red\",shape:\"ring\",text:msg.topic+':'+msg.payload+'°C'});\n    return [null,msg,null,null,null];\n}\n    \nif (msg.topic == 'edge_03'){\n    node.status({fill:\"red\",shape:\"ring\",text:msg.topic+':'+msg.payload+'°C'});\n    return [null,null,msg,null,null];\n}\n\nif (msg.topic == 'edge_04'){\n    node.status({fill:\"red\",shape:\"ring\",text:msg.topic+':'+msg.payload+'°C'});\n    return [null,null,null,msg,null];\n}\n\nif (msg.topic == 'edge_05'){\n    node.status({fill:\"red\",shape:\"ring\",text:msg.topic+':'+msg.payload+'°C'});\n    return [null,null,null,null,msg];\n}\nreturn [null,null,null,null,null];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 280,
        "wires": [
            [
                "2d6085bc09afa22b"
            ],
            [
                "31e9130794f1a229"
            ],
            [
                "44c8ef252b3c3e68"
            ],
            [
                "8e5de0a6836b07c1"
            ],
            [
                "2285a1e4fc09bf84"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "38cb4654.1df87a",
        "type": "link in",
        "z": "5bc58e01.4f95f",
        "name": "",
        "links": [
            "3d1342b5070bfeb3"
        ],
        "x": 215,
        "y": 280,
        "wires": [
            [
                "f564c5c5.003428"
            ]
        ]
    },
    {
        "id": "70a0a1.41f4bf6",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "84cb0308.4b9",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "-> (L1.4 )",
        "info": "",
        "x": 260,
        "y": 220,
        "wires": []
    },
    {
        "id": "07a42f9e342575c8",
        "type": "base64",
        "z": "5bc58e01.4f95f",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1060,
        "y": 560,
        "wires": [
            [
                "aad1ab013df251d0"
            ]
        ]
    },
    {
        "id": "aad1ab013df251d0",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "7270f30b8b307fb9",
        "name": "Display image",
        "order": 3,
        "width": 8,
        "height": 7,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1260,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6b3f748b470a8f45",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "1b1d130d92e9a7ba"
            ]
        ]
    },
    {
        "id": "1b1d130d92e9a7ba",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "start button",
        "group": "7270f30b8b307fb9",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "className": "",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 560,
        "wires": [
            [
                "9974dcaac51b03f7",
                "3e210a53bd77cfc6"
            ]
        ]
    },
    {
        "id": "9974dcaac51b03f7",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 660,
        "wires": [
            [
                "1b1d130d92e9a7ba"
            ]
        ]
    },
    {
        "id": "e4f41d48ba5dfa1a",
        "type": "debug",
        "z": "5bc58e01.4f95f",
        "name": "Part headers (content)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "content",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "40d1d930f63d57ce",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "pause button",
        "group": "7270f30b8b307fb9",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "className": "",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 720,
        "wires": [
            [
                "b22206c01e585c31",
                "233d6c5e685218df"
            ]
        ]
    },
    {
        "id": "b22206c01e585c31",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 820,
        "wires": [
            [
                "40d1d930f63d57ce"
            ]
        ]
    },
    {
        "id": "b6d5fe7ca567d82c",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "resume button",
        "group": "7270f30b8b307fb9",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 360,
        "y": 880,
        "wires": [
            [
                "7c2ad6e7da528149",
                "aea002b486c57dcb"
            ]
        ]
    },
    {
        "id": "7c2ad6e7da528149",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 980,
        "wires": [
            [
                "b6d5fe7ca567d82c"
            ]
        ]
    },
    {
        "id": "aea002b486c57dcb",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 880,
        "wires": [
            [
                "0de534476db876b5"
            ]
        ]
    },
    {
        "id": "c566bbe29d13f2ba",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "stop button",
        "group": "7270f30b8b307fb9",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "f7099851e00edeb4",
                "5957c431d2d50053"
            ]
        ]
    },
    {
        "id": "f7099851e00edeb4",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "c566bbe29d13f2ba"
            ]
        ]
    },
    {
        "id": "5957c431d2d50053",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "0de534476db876b5"
            ]
        ]
    },
    {
        "id": "b1738e15d261294f",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "40d1d930f63d57ce"
            ]
        ]
    },
    {
        "id": "08723be7b24c4f43",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "b6d5fe7ca567d82c"
            ]
        ]
    },
    {
        "id": "0901a03fc79e5795",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "c566bbe29d13f2ba"
            ]
        ]
    },
    {
        "id": "0de534476db876b5",
        "type": "multipart-decoder",
        "z": "5bc58e01.4f95f",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 850,
        "y": 560,
        "wires": [
            [
                "07a42f9e342575c8",
                "e4f41d48ba5dfa1a"
            ]
        ]
    },
    {
        "id": "3e210a53bd77cfc6",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.11:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "0de534476db876b5"
            ]
        ]
    },
    {
        "id": "233d6c5e685218df",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 720,
        "wires": [
            [
                "0de534476db876b5"
            ]
        ]
    },
    {
        "id": "d65926eba65ff98b",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "fd272134.434a1",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .nr-dashboard-button\n    .md-button { text-align: justify; }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 80,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1795a25a9a394af1",
        "type": "base64",
        "z": "5bc58e01.4f95f",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1060,
        "y": 1300,
        "wires": [
            [
                "b91646fb06b00d1f"
            ]
        ]
    },
    {
        "id": "b91646fb06b00d1f",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "9541b4cecc905a81",
        "name": "Display image",
        "order": 3,
        "width": 8,
        "height": 7,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1260,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "3d4fae471a023c92",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1300,
        "wires": [
            [
                "3557978051da2029"
            ]
        ]
    },
    {
        "id": "3557978051da2029",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "start button",
        "group": "9541b4cecc905a81",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "92919d9f64a91ac2",
                "1c19c18c7af1ed6e"
            ]
        ]
    },
    {
        "id": "92919d9f64a91ac2",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 1400,
        "wires": [
            [
                "3557978051da2029"
            ]
        ]
    },
    {
        "id": "09680f286914b598",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "pause button",
        "group": "9541b4cecc905a81",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 1460,
        "wires": [
            [
                "8b087b6062b5d59b",
                "e93781e62ce281d6"
            ]
        ]
    },
    {
        "id": "8b087b6062b5d59b",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 1560,
        "wires": [
            [
                "09680f286914b598"
            ]
        ]
    },
    {
        "id": "5142bf6dbeb95393",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "resume button",
        "group": "9541b4cecc905a81",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 360,
        "y": 1620,
        "wires": [
            [
                "c9103ee12cfe2405",
                "ff57bcd9816a8355"
            ]
        ]
    },
    {
        "id": "c9103ee12cfe2405",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 1720,
        "wires": [
            [
                "5142bf6dbeb95393"
            ]
        ]
    },
    {
        "id": "ff57bcd9816a8355",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1620,
        "wires": [
            [
                "02cffa4cdff327c7"
            ]
        ]
    },
    {
        "id": "22684f5d90586443",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "stop button",
        "group": "9541b4cecc905a81",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 1780,
        "wires": [
            [
                "4c3c104857f9c741",
                "7231c53fdaec8191"
            ]
        ]
    },
    {
        "id": "4c3c104857f9c741",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 1880,
        "wires": [
            [
                "22684f5d90586443"
            ]
        ]
    },
    {
        "id": "7231c53fdaec8191",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1780,
        "wires": [
            [
                "02cffa4cdff327c7"
            ]
        ]
    },
    {
        "id": "b026082728b2c5bc",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1460,
        "wires": [
            [
                "09680f286914b598"
            ]
        ]
    },
    {
        "id": "46879c2d3c4746d4",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1620,
        "wires": [
            [
                "5142bf6dbeb95393"
            ]
        ]
    },
    {
        "id": "1da1d589789e56dd",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1780,
        "wires": [
            [
                "22684f5d90586443"
            ]
        ]
    },
    {
        "id": "02cffa4cdff327c7",
        "type": "multipart-decoder",
        "z": "5bc58e01.4f95f",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "1795a25a9a394af1"
            ]
        ]
    },
    {
        "id": "1c19c18c7af1ed6e",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.12:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "02cffa4cdff327c7"
            ]
        ]
    },
    {
        "id": "e93781e62ce281d6",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1460,
        "wires": [
            [
                "02cffa4cdff327c7"
            ]
        ]
    },
    {
        "id": "6f2b76513846210c",
        "type": "base64",
        "z": "5bc58e01.4f95f",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "93741a65f55d50e9"
            ]
        ]
    },
    {
        "id": "93741a65f55d50e9",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "23f54f24917025dd",
        "name": "Display image",
        "order": 3,
        "width": 8,
        "height": 7,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1260,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "dae9c8cf3feea2f7",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2040,
        "wires": [
            [
                "530fb4d7c239a4d7"
            ]
        ]
    },
    {
        "id": "530fb4d7c239a4d7",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "start button",
        "group": "23f54f24917025dd",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 2040,
        "wires": [
            [
                "de474778236d3519",
                "4d3a19bc3496a809"
            ]
        ]
    },
    {
        "id": "de474778236d3519",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 2140,
        "wires": [
            [
                "530fb4d7c239a4d7"
            ]
        ]
    },
    {
        "id": "2435efce98812de0",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "pause button",
        "group": "23f54f24917025dd",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 2200,
        "wires": [
            [
                "f4f4802e20ebf510",
                "51432d8c44942314"
            ]
        ]
    },
    {
        "id": "f4f4802e20ebf510",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 2300,
        "wires": [
            [
                "2435efce98812de0"
            ]
        ]
    },
    {
        "id": "d446419b359deb84",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "resume button",
        "group": "23f54f24917025dd",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 360,
        "y": 2360,
        "wires": [
            [
                "76fa98333efba7e1",
                "bfe1b3714acc9574"
            ]
        ]
    },
    {
        "id": "76fa98333efba7e1",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 2460,
        "wires": [
            [
                "d446419b359deb84"
            ]
        ]
    },
    {
        "id": "bfe1b3714acc9574",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2360,
        "wires": [
            [
                "62260a8803502015"
            ]
        ]
    },
    {
        "id": "4b2a2ea0e040b34b",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "stop button",
        "group": "23f54f24917025dd",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 2520,
        "wires": [
            [
                "53ebf182c7fa4928",
                "dc15297584a853b0"
            ]
        ]
    },
    {
        "id": "53ebf182c7fa4928",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 2620,
        "wires": [
            [
                "4b2a2ea0e040b34b"
            ]
        ]
    },
    {
        "id": "dc15297584a853b0",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2520,
        "wires": [
            [
                "62260a8803502015"
            ]
        ]
    },
    {
        "id": "721bb9979571b028",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2200,
        "wires": [
            [
                "2435efce98812de0"
            ]
        ]
    },
    {
        "id": "da10015db74ed8ce",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2360,
        "wires": [
            [
                "d446419b359deb84"
            ]
        ]
    },
    {
        "id": "9278dc6240827298",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2520,
        "wires": [
            [
                "4b2a2ea0e040b34b"
            ]
        ]
    },
    {
        "id": "62260a8803502015",
        "type": "multipart-decoder",
        "z": "5bc58e01.4f95f",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "6f2b76513846210c"
            ]
        ]
    },
    {
        "id": "4d3a19bc3496a809",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.13:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2040,
        "wires": [
            [
                "62260a8803502015"
            ]
        ]
    },
    {
        "id": "51432d8c44942314",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2200,
        "wires": [
            [
                "62260a8803502015"
            ]
        ]
    },
    {
        "id": "2085b827374424cd",
        "type": "base64",
        "z": "5bc58e01.4f95f",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1060,
        "y": 2780,
        "wires": [
            [
                "493a162d707b58eb"
            ]
        ]
    },
    {
        "id": "493a162d707b58eb",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "3ec31de71bfbc1ba",
        "name": "Display image",
        "order": 3,
        "width": 8,
        "height": 7,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1260,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "f4c7a1204a243376",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2780,
        "wires": [
            [
                "85d5e25bf83953ab"
            ]
        ]
    },
    {
        "id": "85d5e25bf83953ab",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "start button",
        "group": "3ec31de71bfbc1ba",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 2780,
        "wires": [
            [
                "2b6c40c26255576d",
                "bb03c2c60e3990b6"
            ]
        ]
    },
    {
        "id": "2b6c40c26255576d",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 2880,
        "wires": [
            [
                "85d5e25bf83953ab"
            ]
        ]
    },
    {
        "id": "628b76e928a164eb",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "pause button",
        "group": "3ec31de71bfbc1ba",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 2940,
        "wires": [
            [
                "8e4fefbbe3feea40",
                "5c6932411416f2de"
            ]
        ]
    },
    {
        "id": "8e4fefbbe3feea40",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3040,
        "wires": [
            [
                "628b76e928a164eb"
            ]
        ]
    },
    {
        "id": "ab7ff04069cd881b",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "resume button",
        "group": "3ec31de71bfbc1ba",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 360,
        "y": 3100,
        "wires": [
            [
                "33fc3fadd863b19d",
                "b644076fac09d04b"
            ]
        ]
    },
    {
        "id": "33fc3fadd863b19d",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3200,
        "wires": [
            [
                "ab7ff04069cd881b"
            ]
        ]
    },
    {
        "id": "b644076fac09d04b",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3100,
        "wires": [
            [
                "99c39191a7422fbc"
            ]
        ]
    },
    {
        "id": "2991c4141d920080",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "stop button",
        "group": "3ec31de71bfbc1ba",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 3260,
        "wires": [
            [
                "13fecfbec0736407",
                "b450686ed0edec7d"
            ]
        ]
    },
    {
        "id": "13fecfbec0736407",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3360,
        "wires": [
            [
                "2991c4141d920080"
            ]
        ]
    },
    {
        "id": "b450686ed0edec7d",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 3260,
        "wires": [
            [
                "99c39191a7422fbc"
            ]
        ]
    },
    {
        "id": "07df2d4dc6276324",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 2940,
        "wires": [
            [
                "628b76e928a164eb"
            ]
        ]
    },
    {
        "id": "49c3c1ad2883f576",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "ab7ff04069cd881b"
            ]
        ]
    },
    {
        "id": "b4434b4d910a81f9",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 3260,
        "wires": [
            [
                "2991c4141d920080"
            ]
        ]
    },
    {
        "id": "99c39191a7422fbc",
        "type": "multipart-decoder",
        "z": "5bc58e01.4f95f",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 850,
        "y": 2780,
        "wires": [
            [
                "2085b827374424cd"
            ]
        ]
    },
    {
        "id": "bb03c2c60e3990b6",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.14:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2780,
        "wires": [
            [
                "99c39191a7422fbc"
            ]
        ]
    },
    {
        "id": "5c6932411416f2de",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2940,
        "wires": [
            [
                "99c39191a7422fbc"
            ]
        ]
    },
    {
        "id": "d0286ebb9fc5a169",
        "type": "base64",
        "z": "5bc58e01.4f95f",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1060,
        "y": 3520,
        "wires": [
            [
                "614d6f7560b89664"
            ]
        ]
    },
    {
        "id": "614d6f7560b89664",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "8d87bb84a73633fc",
        "name": "Display image",
        "order": 3,
        "width": 8,
        "height": 7,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1260,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "acd71cd162becb75",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 3520,
        "wires": [
            [
                "136d05f6bc8e3f76"
            ]
        ]
    },
    {
        "id": "136d05f6bc8e3f76",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "start button",
        "group": "8d87bb84a73633fc",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 3520,
        "wires": [
            [
                "de0f84bb518e976f",
                "bc2a18470ca8f841"
            ]
        ]
    },
    {
        "id": "de0f84bb518e976f",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3620,
        "wires": [
            [
                "136d05f6bc8e3f76"
            ]
        ]
    },
    {
        "id": "cc695be42ca75126",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "pause button",
        "group": "8d87bb84a73633fc",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 3680,
        "wires": [
            [
                "184d785b5dff9035",
                "81d4edda7afbc242"
            ]
        ]
    },
    {
        "id": "184d785b5dff9035",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3780,
        "wires": [
            [
                "cc695be42ca75126"
            ]
        ]
    },
    {
        "id": "59354ae98e6f4ff8",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "resume button",
        "group": "8d87bb84a73633fc",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 360,
        "y": 3840,
        "wires": [
            [
                "cf4b62cc03129ddc",
                "0730a7e80c6530b8"
            ]
        ]
    },
    {
        "id": "cf4b62cc03129ddc",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 3940,
        "wires": [
            [
                "59354ae98e6f4ff8"
            ]
        ]
    },
    {
        "id": "0730a7e80c6530b8",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3840,
        "wires": [
            [
                "23220ed2e6894fc7"
            ]
        ]
    },
    {
        "id": "ac5def31156d212e",
        "type": "ui_button",
        "z": "5bc58e01.4f95f",
        "name": "stop button",
        "group": "8d87bb84a73633fc",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 350,
        "y": 4000,
        "wires": [
            [
                "2fdf944833bed301",
                "2cd550f8d53d29df"
            ]
        ]
    },
    {
        "id": "2fdf944833bed301",
        "type": "trigger",
        "z": "5bc58e01.4f95f",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 4100,
        "wires": [
            [
                "ac5def31156d212e"
            ]
        ]
    },
    {
        "id": "2cd550f8d53d29df",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 4000,
        "wires": [
            [
                "23220ed2e6894fc7"
            ]
        ]
    },
    {
        "id": "2665d27512f522b7",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 3680,
        "wires": [
            [
                "cc695be42ca75126"
            ]
        ]
    },
    {
        "id": "0bcb22d60b83bed9",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 3840,
        "wires": [
            [
                "59354ae98e6f4ff8"
            ]
        ]
    },
    {
        "id": "b52c88c024a04199",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 4000,
        "wires": [
            [
                "ac5def31156d212e"
            ]
        ]
    },
    {
        "id": "23220ed2e6894fc7",
        "type": "multipart-decoder",
        "z": "5bc58e01.4f95f",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 850,
        "y": 3520,
        "wires": [
            [
                "d0286ebb9fc5a169"
            ]
        ]
    },
    {
        "id": "bc2a18470ca8f841",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.15:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 3520,
        "wires": [
            [
                "23220ed2e6894fc7"
            ]
        ]
    },
    {
        "id": "81d4edda7afbc242",
        "type": "change",
        "z": "5bc58e01.4f95f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3680,
        "wires": [
            [
                "23220ed2e6894fc7"
            ]
        ]
    },
    {
        "id": "0eea9ae9a51615d3",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "Edge_01",
        "info": "",
        "x": 80,
        "y": 500,
        "wires": []
    },
    {
        "id": "bcd7ad67bc80cf5e",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "Edge_02",
        "info": "",
        "x": 80,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6c01659477e33089",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "Edge_03",
        "info": "",
        "x": 80,
        "y": 2000,
        "wires": []
    },
    {
        "id": "4b43c81038f4f396",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "Edge_04",
        "info": "",
        "x": 80,
        "y": 2740,
        "wires": []
    },
    {
        "id": "a068a0da7e170de0",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "Edge_05",
        "info": "",
        "x": 80,
        "y": 3480,
        "wires": []
    },
    {
        "id": "2d6085bc09afa22b",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "7270f30b8b307fb9",
        "name": "html progressbar",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div ng-if=\"msg.payload == 0\" class=\"w3-green w3-center\" style=\"height:24px; width:0.1\">0.0°C</div>\n      <div ng-if=\" msg.dangerous == 'G' && msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n      <div ng-if=\" msg.dangerous == 'Y' && msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n      <div ng-if=\" msg.dangerous == 'R' && msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 200,
        "wires": [
            [
                "efca2645f3b4791b"
            ]
        ]
    },
    {
        "id": "31e9130794f1a229",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "9541b4cecc905a81",
        "name": "html progressbar",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-yellow,.w3-hover-yellow:hover{\n        color:#000!important;\n        background-color:#ffeb3b!important\n    }\n    .w3-red,.w3-hover-red:hover{\n       color:#fff!important;\n       background-color:#f44336!important\n    }\n    .w3-center, .w3-hover-center:h#over {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n    .w3-text-red,.w3-hover-text-red:hover{\n        color:#f44336!important\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div ng-if=\"msg.payload == 0\" class=\"w3-green w3-center\" style=\"height:24px; width:0.1\">0.0°C</div>\n      <div ng-if=\" msg.dangerous == 'G' && msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n      <div ng-if=\" msg.dangerous == 'Y' && msg.payload != 0\" class=\"w3-yellow w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n      <div ng-if=\" msg.dangerous == 'R' && msg.payload != 0\" class=\"w3-red w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 690,
        "y": 240,
        "wires": [
            [
                "efca2645f3b4791b"
            ]
        ]
    },
    {
        "id": "8e5de0a6836b07c1",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "3ec31de71bfbc1ba",
        "name": "html progressbar",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div ng-if=\"msg.payload == 0\" class=\"w3-green w3-center\" style=\"height:24px; width:0.1\">0.0°C</div>\n      <div ng-if=\"msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "44c8ef252b3c3e68",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "23f54f24917025dd",
        "name": "html progressbar",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div ng-if=\"msg.payload == 0\" class=\"w3-green w3-center\" style=\"height:24px; width:0.1\">0.0°C</div>\n      <div ng-if=\"msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 690,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2285a1e4fc09bf84",
        "type": "ui_template",
        "z": "5bc58e01.4f95f",
        "group": "8d87bb84a73633fc",
        "name": "html progressbar",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div ng-if=\"msg.payload == 0\" class=\"w3-green w3-center\" style=\"height:24px; width:0.1\">0.0°C</div>\n      <div ng-if=\"msg.payload != 0\" class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.payload}}\">{{msg.payload}}°C</div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 690,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d450849b4ded8b5c",
        "type": "link out",
        "z": "5bc58e01.4f95f",
        "name": "",
        "links": [
            "8f197dd9.14d3d"
        ],
        "x": 215,
        "y": 140,
        "wires": []
    },
    {
        "id": "3f0c2f35f4e95af5",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "LPilot.1",
        "info": "",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "efca2645f3b4791b",
        "type": "debug",
        "z": "5bc58e01.4f95f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "4f59f671071cb181",
        "type": "inject",
        "z": "5bc58e01.4f95f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "d450849b4ded8b5c"
            ]
        ]
    },
    {
        "id": "347177dadf314dc9",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 580,
        "y": 520,
        "wires": []
    },
    {
        "id": "8f5d44eb302f5caf",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 580,
        "y": 1260,
        "wires": []
    },
    {
        "id": "eb45b3ee59e0d077",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 580,
        "y": 2000,
        "wires": []
    },
    {
        "id": "a8430c59c4bd91ff",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 580,
        "y": 2740,
        "wires": []
    },
    {
        "id": "4249e9a2ae1f5caf",
        "type": "comment",
        "z": "5bc58e01.4f95f",
        "name": "(**) customization",
        "info": "",
        "x": 580,
        "y": 3480,
        "wires": []
    },
    {
        "id": "6535feb.cbf33",
        "type": "base64",
        "z": "a664a4ce.493678",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 1080,
        "y": 140,
        "wires": [
            [
                "fb64a032.e945b"
            ]
        ]
    },
    {
        "id": "fb64a032.e945b",
        "type": "ui_template",
        "z": "a664a4ce.493678",
        "group": "1a7f6b0.0560695",
        "name": "Display image",
        "order": 1,
        "width": 7,
        "height": 5,
        "format": "<img width=\"24\" height=\"24\" alt=\"stream test\" src=\"data:image/jpg;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1260,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "dd6b0948.e8e128",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "83d61327.053ee"
            ]
        ]
    },
    {
        "id": "83d61327.053ee",
        "type": "ui_button",
        "z": "a664a4ce.493678",
        "name": "start button",
        "group": "fd272134.434a1",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "d1069f1f.a64d7",
                "fe492f09.19014"
            ]
        ]
    },
    {
        "id": "d1069f1f.a64d7",
        "type": "trigger",
        "z": "a664a4ce.493678",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "83d61327.053ee"
            ]
        ]
    },
    {
        "id": "c6b26489.abaa98",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Radio station full speed",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "f6b60983.206868"
            ]
        ]
    },
    {
        "id": "f6b60983.206868",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.10:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 860,
        "wires": [
            [
                "88ae4e6d.f3b2b"
            ]
        ]
    },
    {
        "id": "e373b377.75fc2",
        "type": "debug",
        "z": "a664a4ce.493678",
        "name": "Part headers (content)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "content",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 920,
        "wires": []
    },
    {
        "id": "88ae4e6d.f3b2b",
        "type": "multipart-decoder",
        "z": "a664a4ce.493678",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 890,
        "y": 920,
        "wires": [
            [
                "e373b377.75fc2"
            ]
        ]
    },
    {
        "id": "76161d4b.0e93d4",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Pause stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "21ea3420.d8eb9c"
            ]
        ]
    },
    {
        "id": "1def2fdc.c32e",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Resume stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 940,
        "wires": [
            [
                "36dfa96e.2d4a86"
            ]
        ]
    },
    {
        "id": "30f4b4ec.bc536c",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Stop stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "d6c01f7f.34f9e"
            ]
        ]
    },
    {
        "id": "21ea3420.d8eb9c",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 900,
        "wires": [
            [
                "88ae4e6d.f3b2b"
            ]
        ]
    },
    {
        "id": "36dfa96e.2d4a86",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 940,
        "wires": [
            [
                "88ae4e6d.f3b2b"
            ]
        ]
    },
    {
        "id": "d6c01f7f.34f9e",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "88ae4e6d.f3b2b"
            ]
        ]
    },
    {
        "id": "51940d2c.70fb34",
        "type": "ui_button",
        "z": "a664a4ce.493678",
        "name": "pause button",
        "group": "fd272134.434a1",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "44396b0e.4944a4",
                "94ef1b57.cd6be8"
            ]
        ]
    },
    {
        "id": "44396b0e.4944a4",
        "type": "trigger",
        "z": "a664a4ce.493678",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "51940d2c.70fb34"
            ]
        ]
    },
    {
        "id": "1f1171e4.e1a1be",
        "type": "ui_button",
        "z": "a664a4ce.493678",
        "name": "resume button",
        "group": "fd272134.434a1",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "5de79474.7c2cfc",
                "e92adb57.cf1478"
            ]
        ]
    },
    {
        "id": "5de79474.7c2cfc",
        "type": "trigger",
        "z": "a664a4ce.493678",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 560,
        "wires": [
            [
                "1f1171e4.e1a1be"
            ]
        ]
    },
    {
        "id": "e92adb57.cf1478",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resume",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "928ea9d1.3a86a8"
            ]
        ]
    },
    {
        "id": "d1708e4f.95f54",
        "type": "ui_button",
        "z": "a664a4ce.493678",
        "name": "stop button",
        "group": "fd272134.434a1",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload.l}} ",
        "tooltip": "",
        "color": "{{payload.t}} ",
        "bgcolor": "{{payload.b}} ",
        "icon": "{{payload.h}} ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 620,
        "wires": [
            [
                "66e78d04.7130a4",
                "8494b066.833d4"
            ]
        ]
    },
    {
        "id": "66e78d04.7130a4",
        "type": "trigger",
        "z": "a664a4ce.493678",
        "name": "",
        "op1": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop...\",\"h\":\"fa-refresh fa-spin\"}",
        "op2": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"icon\":\"refresh\"}",
        "op1type": "json",
        "op2type": "json",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 720,
        "wires": [
            [
                "d1708e4f.95f54"
            ]
        ]
    },
    {
        "id": "8494b066.833d4",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 620,
        "wires": [
            [
                "928ea9d1.3a86a8"
            ]
        ]
    },
    {
        "id": "47230119.b041b",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"pause\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "51940d2c.70fb34"
            ]
        ]
    },
    {
        "id": "993b87cc.92e328",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"resume\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "1f1171e4.e1a1be"
            ]
        ]
    },
    {
        "id": "3d2f0938.f7a1a6",
        "type": "inject",
        "z": "a664a4ce.493678",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"stop\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "d1708e4f.95f54"
            ]
        ]
    },
    {
        "id": "928ea9d1.3a86a8",
        "type": "multipart-decoder",
        "z": "a664a4ce.493678",
        "name": "",
        "ret": "bin",
        "url": "",
        "tls": "",
        "delay": 0,
        "maximum": "10000000",
        "blockSize": "1",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "6535feb.cbf33",
                "e373b377.75fc2"
            ]
        ]
    },
    {
        "id": "fe492f09.19014",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.11:8000/stream.mjpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "928ea9d1.3a86a8"
            ]
        ]
    },
    {
        "id": "94ef1b57.cd6be8",
        "type": "change",
        "z": "a664a4ce.493678",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 300,
        "wires": [
            [
                "928ea9d1.3a86a8"
            ]
        ]
    },
    {
        "id": "d169a693.645d48",
        "type": "ui_template",
        "z": "a664a4ce.493678",
        "group": "fd272134.434a1",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .nr-dashboard-button\n    .md-button { text-align: justify; }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d0e50eb9.d7609",
        "type": "jimp-image",
        "z": "a664a4ce.493678",
        "d": true,
        "name": "edge-gesture",
        "data": "http://129.254.73.56:55000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 810,
        "y": 60,
        "wires": [
            [
                "6535feb.cbf33"
            ]
        ]
    },
    {
        "id": "ab233cd8.e0366",
        "type": "inject",
        "z": "a664a4ce.493678",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "d0e50eb9.d7609"
            ]
        ]
    },
    {
        "id": "4ce2fac6.848174",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "7de23636.088a88",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "3913cef7.bb6e3a"
            ]
        ]
    },
    {
        "id": "a5ecda5c.164c28",
        "type": "debug",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "d615e8d1.844438",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "7de23636.088a88",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7f9bc166.833c3",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "d615e8d1.844438"
            ]
        ]
    },
    {
        "id": "2d9d272a.787cb8",
        "type": "image viewer",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "width": "200",
        "data": "payload",
        "dataType": "msg",
        "x": 1030,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "39348063.8900c",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 240,
        "wires": [
            [
                "111cae85.35c041"
            ]
        ]
    },
    {
        "id": "834bc42f.bf0548",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "7a55885a.fb6d68",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "111cae85.35c041",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "834bc42f.bf0548"
            ]
        ]
    },
    {
        "id": "e6c87ed0.795fb",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 318,
        "wires": [
            [
                "d322d4e5.357068"
            ]
        ]
    },
    {
        "id": "476eb356.c8c71c",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "876063e7.a6e4f",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 318,
        "wires": [
            []
        ]
    },
    {
        "id": "d322d4e5.357068",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 318,
        "wires": [
            [
                "476eb356.c8c71c"
            ]
        ]
    },
    {
        "id": "5f09e7c5.182528",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 400,
        "wires": [
            [
                "2963da0f.d99976"
            ]
        ]
    },
    {
        "id": "71eb540e.f4e97c",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "a45b265b.8f88f8",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2963da0f.d99976",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "71eb540e.f4e97c"
            ]
        ]
    },
    {
        "id": "6713843e.6de60c",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 480,
        "wires": [
            [
                "424a45fb.a5dd1c"
            ]
        ]
    },
    {
        "id": "d82d8ddf.6feac",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "a0b6253.56614d8",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "424a45fb.a5dd1c",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "d82d8ddf.6feac"
            ]
        ]
    },
    {
        "id": "1ebb210a.bb5a7f",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 560,
        "wires": [
            [
                "c645f4ec.f60a18"
            ]
        ]
    },
    {
        "id": "aea0a5cd.be7d08",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "468b73d2.70366c",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c645f4ec.f60a18",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 560,
        "wires": [
            [
                "aea0a5cd.be7d08"
            ]
        ]
    },
    {
        "id": "2a74f25c.4a7a0e",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "7a55885a.fb6d68",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "39348063.8900c"
            ]
        ]
    },
    {
        "id": "30fce581.c0252a",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "876063e7.a6e4f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "e6c87ed0.795fb"
            ]
        ]
    },
    {
        "id": "54f23394.09f07c",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "a45b265b.8f88f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "5f09e7c5.182528"
            ]
        ]
    },
    {
        "id": "4a10825c.f2bc2c",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "a0b6253.56614d8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 480,
        "wires": [
            [
                "6713843e.6de60c"
            ]
        ]
    },
    {
        "id": "16e3c04e.c9add",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "468b73d2.70366c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 560,
        "wires": [
            [
                "1ebb210a.bb5a7f"
            ]
        ]
    },
    {
        "id": "39d81d91.b8f532",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 640,
        "wires": [
            [
                "5338b036.6f1a1"
            ]
        ]
    },
    {
        "id": "7001a037.b9da7",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "81083b9b.8f1058",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5338b036.6f1a1",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "7001a037.b9da7"
            ]
        ]
    },
    {
        "id": "1d331692.1ac959",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 720,
        "wires": [
            [
                "2864e360.5c818c"
            ]
        ]
    },
    {
        "id": "9a95c502.d2c248",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "98222abf.a9dff8",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2864e360.5c818c",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 720,
        "wires": [
            [
                "9a95c502.d2c248"
            ]
        ]
    },
    {
        "id": "d1ff0fe9.a34eb",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 800,
        "wires": [
            [
                "315aa78f.3d49c8"
            ]
        ]
    },
    {
        "id": "27928163.e300ce",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "3d593049.a9028",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "315aa78f.3d49c8",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "27928163.e300ce"
            ]
        ]
    },
    {
        "id": "666e732b.47eecc",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 880,
        "wires": [
            [
                "e3f5251c.09dfa8"
            ]
        ]
    },
    {
        "id": "86d8b59.b7e5f48",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "4c5853d2.f9decc",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f5251c.09dfa8",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 880,
        "wires": [
            [
                "86d8b59.b7e5f48"
            ]
        ]
    },
    {
        "id": "bcf67d95.08fe5",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "5830b55a.2f83dc"
            ]
        ]
    },
    {
        "id": "740ea829.ae5d98",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "cf86657d.3ef678",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "15b01fbb.7baca",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1182,
        "wires": [
            [
                "a0cd6d37.38762"
            ]
        ]
    },
    {
        "id": "2e11cea0.3081d2",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "ee0802db.bee35",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1182,
        "wires": [
            []
        ]
    },
    {
        "id": "a0cd6d37.38762",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1182,
        "wires": [
            [
                "2e11cea0.3081d2"
            ]
        ]
    },
    {
        "id": "ddd6daa6.36a5b8",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1262,
        "wires": [
            [
                "2d9e887b.8a9d48"
            ]
        ]
    },
    {
        "id": "cd144760.528848",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "c4bea5c.7eee158",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1262,
        "wires": [
            []
        ]
    },
    {
        "id": "2d9e887b.8a9d48",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1262,
        "wires": [
            [
                "cd144760.528848"
            ]
        ]
    },
    {
        "id": "5830b55a.2f83dc",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "740ea829.ae5d98"
            ]
        ]
    },
    {
        "id": "78f28428.abcf2c",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "81083b9b.8f1058",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "39d81d91.b8f532"
            ]
        ]
    },
    {
        "id": "f6519730.8b76e8",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "98222abf.a9dff8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 720,
        "wires": [
            [
                "1d331692.1ac959"
            ]
        ]
    },
    {
        "id": "198abf2f.3a4bf1",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "3d593049.a9028",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 800,
        "wires": [
            [
                "d1ff0fe9.a34eb"
            ]
        ]
    },
    {
        "id": "d24d8a06.658268",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "4c5853d2.f9decc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 880,
        "wires": [
            [
                "666e732b.47eecc"
            ]
        ]
    },
    {
        "id": "846a433e.7291d",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "cf86657d.3ef678",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1100,
        "wires": [
            [
                "bcf67d95.08fe5"
            ]
        ]
    },
    {
        "id": "bf6db1d2.d53a",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "ee0802db.bee35",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1180,
        "wires": [
            [
                "15b01fbb.7baca"
            ]
        ]
    },
    {
        "id": "765a479.bd30cb8",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "c4bea5c.7eee158",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1260,
        "wires": [
            [
                "ddd6daa6.36a5b8"
            ]
        ]
    },
    {
        "id": "bda9702f.e16aa",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1340,
        "wires": [
            [
                "2e6ecdd9.f6b682"
            ]
        ]
    },
    {
        "id": "7f554e38.8684a",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "8f80eb1c.1c4e08",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "2e6ecdd9.f6b682",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1340,
        "wires": [
            [
                "7f554e38.8684a"
            ]
        ]
    },
    {
        "id": "f2351146.2b3f5",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1420,
        "wires": [
            [
                "f0241e2.45e75e"
            ]
        ]
    },
    {
        "id": "d9d5ba4.8034f48",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "4d516664.379bd8",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f0241e2.45e75e",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1420,
        "wires": [
            [
                "d9d5ba4.8034f48"
            ]
        ]
    },
    {
        "id": "b669cd6a.3742f",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1500,
        "wires": [
            [
                "dfd4a29a.74fed"
            ]
        ]
    },
    {
        "id": "24974f3c.d4a7",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "abf4802b.c1052",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "dfd4a29a.74fed",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1500,
        "wires": [
            [
                "24974f3c.d4a7"
            ]
        ]
    },
    {
        "id": "71ac7f16.6e31c",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1580,
        "wires": [
            [
                "88761c97.bd5ed"
            ]
        ]
    },
    {
        "id": "b278e838.4e4c38",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "afa663af.6b7c6",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "88761c97.bd5ed",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1580,
        "wires": [
            [
                "b278e838.4e4c38"
            ]
        ]
    },
    {
        "id": "60bc079.04481f8",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1660,
        "wires": [
            [
                "996288fd.1e2ca8"
            ]
        ]
    },
    {
        "id": "8f99db5e.3a25b8",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "5223b1b4.9d114",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "45b25d93.7dec84",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1742,
        "wires": [
            [
                "be8cbc43.f73c1"
            ]
        ]
    },
    {
        "id": "dae44a21.c46f88",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "193d4963.c1f4a7",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1742,
        "wires": [
            []
        ]
    },
    {
        "id": "be8cbc43.f73c1",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1742,
        "wires": [
            [
                "dae44a21.c46f88"
            ]
        ]
    },
    {
        "id": "626d400c.a89ba",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://192.168.0.10:8000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 1822,
        "wires": [
            [
                "d9306f0a.cf758"
            ]
        ]
    },
    {
        "id": "3e0953c6.937a6c",
        "type": "ui_template",
        "z": "bbb392c4.3b2f5",
        "group": "593eefc5.2d36c",
        "name": "ui template",
        "order": 2,
        "width": 12,
        "height": 10,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "d9306f0a.cf758",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1822,
        "wires": [
            [
                "3e0953c6.937a6c"
            ]
        ]
    },
    {
        "id": "996288fd.1e2ca8",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 1040,
        "y": 1660,
        "wires": [
            [
                "8f99db5e.3a25b8"
            ]
        ]
    },
    {
        "id": "a460fdc8.c0136",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "8f80eb1c.1c4e08",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1340,
        "wires": [
            [
                "bda9702f.e16aa"
            ]
        ]
    },
    {
        "id": "6408eeb2.b1016",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "4d516664.379bd8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1420,
        "wires": [
            [
                "f2351146.2b3f5"
            ]
        ]
    },
    {
        "id": "e664044c.328a28",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "abf4802b.c1052",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1500,
        "wires": [
            [
                "b669cd6a.3742f"
            ]
        ]
    },
    {
        "id": "1cb2a53e.9f6aeb",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "afa663af.6b7c6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "71ac7f16.6e31c"
            ]
        ]
    },
    {
        "id": "f0a33614.fb30d8",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "5223b1b4.9d114",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "60bc079.04481f8"
            ]
        ]
    },
    {
        "id": "d090a079.31fa2",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "193d4963.c1f4a7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1740,
        "wires": [
            [
                "45b25d93.7dec84"
            ]
        ]
    },
    {
        "id": "b0af2d21.88a79",
        "type": "ui_button",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "group": "593eefc5.2d36c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Image from Edge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1820,
        "wires": [
            [
                "626d400c.a89ba"
            ]
        ]
    },
    {
        "id": "1b1f58b8.44ae77",
        "type": "inject",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 980,
        "wires": [
            [
                "39348063.8900c",
                "e6c87ed0.795fb",
                "5f09e7c5.182528",
                "6713843e.6de60c",
                "1ebb210a.bb5a7f",
                "39d81d91.b8f532",
                "1d331692.1ac959",
                "d1ff0fe9.a34eb",
                "666e732b.47eecc",
                "bcf67d95.08fe5",
                "15b01fbb.7baca",
                "ddd6daa6.36a5b8",
                "bda9702f.e16aa",
                "f2351146.2b3f5",
                "b669cd6a.3742f",
                "71ac7f16.6e31c",
                "60bc079.04481f8",
                "45b25d93.7dec84",
                "626d400c.a89ba",
                "3913cef7.bb6e3a"
            ]
        ]
    },
    {
        "id": "3913cef7.bb6e3a",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://129.254.73.56:55000/view",
        "dataType": "str",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 160,
        "wires": [
            [
                "7f9bc166.833c3",
                "a5ecda5c.164c28",
                "2d9d272a.787cb8"
            ]
        ]
    },
    {
        "id": "f2f9ab93.6efd98",
        "type": "function",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "func": "var tmpimg = msg.payload;\n\nd = new Date()\nmsg.filename = \"./getreq_imgs/\"+\"ID_01\"+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "ef8185c.f608c78"
            ]
        ]
    },
    {
        "id": "ef8185c.f608c78",
        "type": "file",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1190,
        "y": 60,
        "wires": [
            [
                "f154061a.ba4398"
            ]
        ]
    },
    {
        "id": "f154061a.ba4398",
        "type": "template",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"640px\" height=\"480px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1340,
        "y": 60,
        "wires": [
            [
                "d615e8d1.844438"
            ]
        ]
    },
    {
        "id": "cc07e7ab.928318",
        "type": "jimp-image",
        "z": "bbb392c4.3b2f5",
        "name": "edge-gesture",
        "data": "http://129.254.73.56:55000/view",
        "dataType": "str",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 770,
        "y": 60,
        "wires": [
            [
                "f2f9ab93.6efd98"
            ]
        ]
    },
    {
        "id": "35562077.2c13c",
        "type": "inject",
        "z": "bbb392c4.3b2f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "cc07e7ab.928318"
            ]
        ]
    },
    {
        "id": "449122.707e6ee",
        "type": "comment",
        "z": "bbb392c4.3b2f5",
        "name": "ouput format : buffer",
        "info": "",
        "x": 800,
        "y": 20,
        "wires": []
    },
    {
        "id": "ce8e5f06.e779e",
        "type": "comment",
        "z": "bbb392c4.3b2f5",
        "name": "ouput format :base64",
        "info": "",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "d5de2d26.2a21d",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "command": "sh",
        "commandArgs": "-c '(echo stdout; echo stderr >&2)'",
        "minError": 1,
        "minWarning": 1,
        "cwd": "",
        "shell": false,
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 860,
        "y": 380,
        "wires": [
            [
                "5fc11ed1.a03ee"
            ],
            [
                "ea429413.15bd68"
            ],
            [
                "264e6051.d9b1a"
            ]
        ]
    },
    {
        "id": "f8c5aa9.f073a58",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "output",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 670,
        "y": 580,
        "wires": []
    },
    {
        "id": "fe42cda2.01bd3",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "true",
        "command": "true",
        "commandArgs": "",
        "minError": 1,
        "minWarning": "",
        "cwd": "",
        "shell": false,
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 370,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9984f682.667b08",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "sh",
        "command": "sh",
        "commandArgs": "-c",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/tmp",
        "shell": false,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 810,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2bb9bf06.d4464",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "\"exit 0\"",
        "payloadType": "str",
        "x": 650,
        "y": 180,
        "wires": [
            [
                "9984f682.667b08"
            ]
        ]
    },
    {
        "id": "89ba4484.7645b8",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "\"exit 1\"",
        "payloadType": "str",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "9984f682.667b08"
            ]
        ]
    },
    {
        "id": "15f3c5e6.ea0c3a",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "\"exit 8\"",
        "payloadType": "str",
        "x": 650,
        "y": 260,
        "wires": [
            [
                "9984f682.667b08"
            ]
        ]
    },
    {
        "id": "64eb1fc.f9b14e",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "sleep",
        "command": "sleep",
        "commandArgs": "",
        "minError": "8",
        "minWarning": "1",
        "cwd": "/tmp",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 370,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f8e2ffe.f071d",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "64eb1fc.f9b14e"
            ]
        ]
    },
    {
        "id": "84c0f395.7b3f1",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "True!",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "fe42cda2.01bd3"
            ]
        ]
    },
    {
        "id": "8ec7d32f.71383",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "false",
        "command": "false",
        "commandArgs": "",
        "minError": 1,
        "minWarning": "",
        "cwd": "",
        "shell": false,
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 370,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e80797ae.17f868",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "False!",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "8ec7d32f.71383"
            ]
        ]
    },
    {
        "id": "c4498d7f.3bb67",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "Hello!",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "Hello you!",
        "payloadType": "str",
        "x": 210,
        "y": 580,
        "wires": [
            [
                "8d33cea7.72cc3"
            ]
        ]
    },
    {
        "id": "8d33cea7.72cc3",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "echo",
        "command": "echo",
        "commandArgs": "",
        "minError": 1,
        "minWarning": "",
        "cwd": "",
        "shell": false,
        "extraArgumentProperty": "",
        "envProperty": "",
        "format": "utf8",
        "payloadIs": "argument",
        "x": 370,
        "y": 580,
        "wires": [
            [
                "d3ea0250.2c16"
            ],
            [],
            []
        ]
    },
    {
        "id": "d3ea0250.2c16",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "toString()",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 580,
        "wires": [
            [
                "f8c5aa9.f073a58"
            ]
        ]
    },
    {
        "id": "31646763.ce9b98",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "unknown",
        "command": "/I/m/not/existing",
        "commandArgs": "",
        "minError": 1,
        "minWarning": 1,
        "cwd": "",
        "shell": "",
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 380,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cb4518e9.34bae8",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "unknown",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 380,
        "wires": [
            [
                "31646763.ce9b98"
            ]
        ]
    },
    {
        "id": "6f6db996.909248",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "stdout",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1210,
        "y": 320,
        "wires": []
    },
    {
        "id": "d12de8f8.2ed218",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "stderr",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1210,
        "y": 440,
        "wires": []
    },
    {
        "id": "4dfd7668.b20288",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "sample echo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 670,
        "y": 380,
        "wires": [
            [
                "d5de2d26.2a21d"
            ]
        ]
    },
    {
        "id": "ea429413.15bd68",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "rc",
        "func": "if (msg.control && (msg.control.state == 'end' || msg.control.state == 'error')) return { payload: msg.control.rc }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "c9d0ae96.362f5"
            ]
        ]
    },
    {
        "id": "c9d0ae96.362f5",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "rc",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7d24f0d.282db",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Sample usage of Big Exec (Linux / Mac) command lines",
        "info": "",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "5fc11ed1.a03ee",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "toString()",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "6f6db996.909248"
            ]
        ]
    },
    {
        "id": "264e6051.d9b1a",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "toString()",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 440,
        "wires": [
            [
                "d12de8f8.2ed218"
            ]
        ]
    },
    {
        "id": "e3dc229b.1c23e",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Big Line should be better here",
        "info": "",
        "x": 1120,
        "y": 260,
        "wires": []
    },
    {
        "id": "1b1197e8.e4ee68",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Showing 3 states statuses",
        "info": "",
        "x": 870,
        "y": 160,
        "wires": []
    },
    {
        "id": "85fee1ad.7a012",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Sending data through stdin",
        "info": "",
        "x": 430,
        "y": 540,
        "wires": []
    },
    {
        "id": "e9635a5.f169ca8",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Unknow command",
        "info": "",
        "x": 410,
        "y": 340,
        "wires": []
    },
    {
        "id": "7d44c335.5af70c",
        "type": "bigexec",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "command": "python3",
        "commandArgs": "/opt/local/bin/s.py",
        "minError": 1,
        "minWarning": 1,
        "cwd": "",
        "shell": true,
        "extraArgumentProperty": "",
        "envProperty": "",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "f851f3c8.d5945"
            ],
            [
                "66c37e07.d4d99"
            ],
            [
                "16279529.ee872b"
            ]
        ]
    },
    {
        "id": "2e97070.fa4d9fa",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "stdout",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 810,
        "y": 920,
        "wires": []
    },
    {
        "id": "a6d9c7b3.41bca8",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "stderr",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 810,
        "y": 1040,
        "wires": []
    },
    {
        "id": "693a40be.ff458",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "sample echo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 230,
        "y": 980,
        "wires": [
            [
                "7d44c335.5af70c"
            ]
        ]
    },
    {
        "id": "66c37e07.d4d99",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "rc",
        "func": "//if (msg.control && (msg.control.state == 'end' || msg.control.state == 'error')) return { payload: msg.control.rc }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 980,
        "wires": [
            [
                "7af470ea.9f9ef"
            ]
        ]
    },
    {
        "id": "7af470ea.9f9ef",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "rc",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 980,
        "wires": []
    },
    {
        "id": "f851f3c8.d5945",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "toString()",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 920,
        "wires": [
            [
                "2e97070.fa4d9fa"
            ]
        ]
    },
    {
        "id": "16279529.ee872b",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "toString()",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "a6d9c7b3.41bca8"
            ]
        ]
    },
    {
        "id": "99b1b0ef.f590b",
        "type": "comment",
        "z": "2cc7c27a.1e509e",
        "name": "Big Line should be better here",
        "info": "",
        "x": 880,
        "y": 880,
        "wires": []
    },
    {
        "id": "c5a7a894.9dedc8",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "Set flow.pypid to msg.status.text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "pypid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 840,
        "wires": [
            [
                "1d063f38.9ba521"
            ]
        ]
    },
    {
        "id": "1e5b8bc.e538374",
        "type": "status",
        "z": "2cc7c27a.1e509e",
        "name": "Status PyExec(s.py)",
        "scope": [
            "7d44c335.5af70c"
        ],
        "x": 230,
        "y": 840,
        "wires": [
            [
                "c5a7a894.9dedc8"
            ]
        ]
    },
    {
        "id": "b2e442ed.997d8",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "Set msg.status.text to \"Not started\"",
        "rules": [
            {
                "t": "set",
                "p": "status.text",
                "pt": "msg",
                "to": "Not started",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 780,
        "wires": [
            [
                "c5a7a894.9dedc8"
            ]
        ]
    },
    {
        "id": "343e6b0f.4b5374",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "AtFlowStart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 780,
        "wires": [
            [
                "b2e442ed.997d8"
            ]
        ]
    },
    {
        "id": "1d063f38.9ba521",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 840,
        "wires": []
    },
    {
        "id": "9e237dfa.40deb",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9edb02fe.c71ff",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1360,
        "wires": []
    },
    {
        "id": "36e6746d.052fec",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a4f3fa19.f8bd38",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "kill",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1560,
        "wires": [
            [
                "95608ea0.4c2da"
            ]
        ]
    },
    {
        "id": "831cbe22.8fd62",
        "type": "exec",
        "z": "2cc7c27a.1e509e",
        "command": "sleep 1000",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "sleep test",
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "9e237dfa.40deb"
            ],
            [
                "9edb02fe.c71ff"
            ],
            [
                "36e6746d.052fec"
            ]
        ]
    },
    {
        "id": "598c9afd.6e0d84",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "9e237dfa.40deb",
                "831cbe22.8fd62"
            ]
        ]
    },
    {
        "id": "95608ea0.4c2da",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "term",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'kill -15 '&$flowContext('pid')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1560,
        "wires": [
            [
                "2c762987.e54856",
                "5b840d94.e73034"
            ]
        ]
    },
    {
        "id": "327fa5fd.f52fea",
        "type": "catch",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "dd8124f5.5f36f8"
            ]
        ]
    },
    {
        "id": "dd8124f5.5f36f8",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 450,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2c762987.e54856",
        "type": "exec",
        "z": "2cc7c27a.1e509e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 1560,
        "wires": [
            [
                "506e9343.e35eec"
            ],
            [
                "6a35582c.f18488"
            ],
            [
                "8d945170.117a1"
            ]
        ]
    },
    {
        "id": "506e9343.e35eec",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6a35582c.f18488",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1560,
        "wires": []
    },
    {
        "id": "8d945170.117a1",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4911075e.17eac8",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1460,
        "wires": []
    },
    {
        "id": "a905f6db.587f78",
        "type": "status",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "scope": [
            "831cbe22.8fd62"
        ],
        "x": 240,
        "y": 1460,
        "wires": [
            [
                "38a0e9b2.302f36"
            ]
        ]
    },
    {
        "id": "38a0e9b2.302f36",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pid",
                "pt": "flow",
                "to": "$number($split(status.text, ':')[1])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1460,
        "wires": [
            [
                "4911075e.17eac8"
            ]
        ]
    },
    {
        "id": "5b840d94.e73034",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4456ce4f.9fe1",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1960,
        "wires": [
            [
                "5604dc94.561c84"
            ]
        ]
    },
    {
        "id": "5604dc94.561c84",
        "type": "exec",
        "z": "2cc7c27a.1e509e",
        "command": "",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 1960,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bc0ef35c.fdc28",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2020,
        "wires": [
            [
                "c3985cd.5b84ca"
            ]
        ]
    },
    {
        "id": "c3985cd.5b84ca",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "set to pid",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pid",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 2020,
        "wires": [
            [
                "6a2b4bb4.ce9f24"
            ]
        ]
    },
    {
        "id": "6a2b4bb4.ce9f24",
        "type": "exec",
        "z": "2cc7c27a.1e509e",
        "command": "kill ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 2020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "177734e3.b41bdb",
        "type": "status",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "scope": [
            "5604dc94.561c84"
        ],
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "36b53498.9c359c"
            ]
        ]
    },
    {
        "id": "36b53498.9c359c",
        "type": "function",
        "z": "2cc7c27a.1e509e",
        "name": "get pid",
        "func": "if(msg.status.text){\n    let pid = msg.status.text.split(':');\n    msg.payload = pid[1];\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2080,
        "wires": [
            [
                "62302c88.824804"
            ]
        ]
    },
    {
        "id": "62302c88.824804",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "47df6c27.6cdd64",
        "type": "http request",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://jsonplaceholder.typicode.com/posts/{{post}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 2240,
        "wires": [
            [
                "1ca30c73.7c1954"
            ]
        ]
    },
    {
        "id": "1ca30c73.7c1954",
        "type": "debug",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.title",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 2240,
        "wires": []
    },
    {
        "id": "e2029773.1bb298",
        "type": "inject",
        "z": "2cc7c27a.1e509e",
        "name": "post id",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "ea526829.fcc618"
            ]
        ]
    },
    {
        "id": "ea526829.fcc618",
        "type": "change",
        "z": "2cc7c27a.1e509e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 2240,
        "wires": [
            [
                "47df6c27.6cdd64"
            ]
        ]
    },
    {
        "id": "b7f441c7.fc588",
        "type": "exec",
        "z": "47ae11e2.286f3",
        "d": true,
        "command": "/opt/local/bin/pytest.py",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "PyExec",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "24d5c1ef.e0479e"
            ],
            [],
            [
                "50a785d8.effdc4"
            ]
        ]
    },
    {
        "id": "24d5c1ef.e0479e",
        "type": "ui_text",
        "z": "47ae11e2.286f3",
        "group": "1594d936.db51f7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Show python output",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "1c698315.cbd74d",
        "type": "ui_switch",
        "z": "47ae11e2.286f3",
        "name": "Run switch",
        "label": "RunPy",
        "tooltip": "",
        "group": "1594d936.db51f7",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "60f86d39.d33e84"
            ]
        ]
    },
    {
        "id": "e255642e.e160c",
        "type": "ui_text",
        "z": "47ae11e2.286f3",
        "group": "1594d936.db51f7",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Show msg.status.txt",
        "label": "",
        "format": "{{msg.status.text}}",
        "layout": "row-spread",
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "502a7d93.eba134",
        "type": "status",
        "z": "47ae11e2.286f3",
        "name": "Status PyExec",
        "scope": [
            "b7f441c7.fc588",
            "db5c6bc9.021628"
        ],
        "x": 120,
        "y": 220,
        "wires": [
            [
                "8857ad9.d354dd"
            ]
        ]
    },
    {
        "id": "8857ad9.d354dd",
        "type": "change",
        "z": "47ae11e2.286f3",
        "name": "Set flow.pypid to msg.status.text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "pypid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "e255642e.e160c"
            ]
        ]
    },
    {
        "id": "7b0506b3.f295a",
        "type": "change",
        "z": "47ae11e2.286f3",
        "name": "0: Set kill message",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "TERM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 320,
        "wires": [
            [
                "b7f441c7.fc588",
                "1c698315.cbd74d",
                "db5c6bc9.021628"
            ]
        ]
    },
    {
        "id": "b94022b8.9d5238",
        "type": "function",
        "z": "47ae11e2.286f3",
        "name": "1: Don't start if running",
        "func": "pid = flow.get(\"pypid\")\nif (pid === undefined) {\n    return msg\n}\nif (pid.includes(\"pid\")) {\n    return null\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 460,
        "wires": [
            [
                "b7f441c7.fc588",
                "1c698315.cbd74d",
                "db5c6bc9.021628"
            ]
        ]
    },
    {
        "id": "d23af7b6.d72968",
        "type": "inject",
        "z": "47ae11e2.286f3",
        "name": "AtFlowStart",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "3e84a044.8254f8"
            ]
        ]
    },
    {
        "id": "3e84a044.8254f8",
        "type": "change",
        "z": "47ae11e2.286f3",
        "name": "Set msg.status.text to \"Not started\"",
        "rules": [
            {
                "t": "set",
                "p": "status.text",
                "pt": "msg",
                "to": "Not started",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "8857ad9.d354dd"
            ]
        ]
    },
    {
        "id": "60f86d39.d33e84",
        "type": "switch",
        "z": "47ae11e2.286f3",
        "name": "split 0/1",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 400,
        "wires": [
            [
                "7b0506b3.f295a"
            ],
            [
                "b94022b8.9d5238"
            ]
        ]
    },
    {
        "id": "50a785d8.effdc4",
        "type": "change",
        "z": "47ae11e2.286f3",
        "name": "Set payload to 0 (off) at python exit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "1c698315.cbd74d"
            ]
        ]
    },
    {
        "id": "f49b9389.1c64b",
        "type": "comment",
        "z": "47ae11e2.286f3",
        "name": "Use flow variable pypid to track status",
        "info": "",
        "x": 710,
        "y": 160,
        "wires": []
    },
    {
        "id": "7ee2e7e7.746c28",
        "type": "comment",
        "z": "47ae11e2.286f3",
        "name": "Switch shows its input",
        "info": "",
        "x": 160,
        "y": 340,
        "wires": []
    },
    {
        "id": "977f6853.7a18c",
        "type": "comment",
        "z": "47ae11e2.286f3",
        "name": "Spawn mode",
        "info": "",
        "x": 770,
        "y": 380,
        "wires": []
    },
    {
        "id": "db5c6bc9.021628",
        "type": "exec",
        "z": "47ae11e2.286f3",
        "d": true,
        "command": "/opt/local/bin/pytest_darknet.py",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "PyExec-spawn",
        "x": 1020,
        "y": 680,
        "wires": [
            [
                "24d5c1ef.e0479e"
            ],
            [],
            [
                "50a785d8.effdc4"
            ]
        ]
    },
    {
        "id": "30e1839a.cade6c",
        "type": "exec",
        "z": "47ae11e2.286f3",
        "command": "sleep 20",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 960,
        "wires": [
            [
                "dccd5011.4926e"
            ],
            [
                "64252707.f9e7"
            ],
            [
                "a9768a27.692d6"
            ]
        ]
    },
    {
        "id": "127167a5.30506",
        "type": "inject",
        "z": "47ae11e2.286f3",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 144,
        "y": 926,
        "wires": [
            [
                "30e1839a.cade6c",
                "7d39cdd0.42cc64"
            ]
        ]
    },
    {
        "id": "dccd5011.4926e",
        "type": "debug",
        "z": "47ae11e2.286f3",
        "name": "OP/1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "64252707.f9e7",
        "type": "debug",
        "z": "47ae11e2.286f3",
        "name": "OP/2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 608,
        "y": 962,
        "wires": []
    },
    {
        "id": "a9768a27.692d6",
        "type": "debug",
        "z": "47ae11e2.286f3",
        "name": "OP/3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 608,
        "y": 1002,
        "wires": []
    },
    {
        "id": "7d39cdd0.42cc64",
        "type": "debug",
        "z": "47ae11e2.286f3",
        "name": "START",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 621,
        "y": 871,
        "wires": []
    },
    {
        "id": "b5c8edd6.40f6d",
        "type": "http request",
        "z": "7a698083.6eeeb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "22cb552e.98854a",
                "d5c4b4e8.d9a6b8"
            ]
        ]
    },
    {
        "id": "46620e1.ac5a3f",
        "type": "function",
        "z": "7a698083.6eeeb",
        "name": "",
        "func": "msg.headers = {\n    'content-type' : 'application/json; charset=utf-8'\n}\n\nmsg.method = 'post';\nmsg.url = \"http://129.254.73.56:55001\";\nmsg.requestTimeout = 30000;\nmsg.payload = {\n    'camera_id' : 16\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "b5c8edd6.40f6d"
            ]
        ]
    },
    {
        "id": "22cb552e.98854a",
        "type": "function",
        "z": "7a698083.6eeeb",
        "name": "",
        "func": "if(msg.statusCode !== 200){\n    node.status({fill:\"red\",shape:\"dot\",text:\"error\"});\n    return [null,msg];\n}\nelse{\n    node.status({fill:\"green\",shape:\"dot\",text:\"done\"});\n    //console.log('--------', msg.payload);\n    return [msg,null];\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 300,
        "wires": [
            [
                "1dfd2d9e.c2e262"
            ]
        ]
    },
    {
        "id": "d5c4b4e8.d9a6b8",
        "type": "debug",
        "z": "7a698083.6eeeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 120,
        "wires": []
    },
    {
        "id": "d0c2da82.bfce68",
        "type": "inject",
        "z": "7a698083.6eeeb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "46620e1.ac5a3f"
            ]
        ]
    },
    {
        "id": "1dfd2d9e.c2e262",
        "type": "json",
        "z": "7a698083.6eeeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "b93227ce.c2a098",
                "b653f8.d1a69c08",
                "77e41cdb.ad5494",
                "ef0ab25e.245fd"
            ]
        ]
    },
    {
        "id": "b93227ce.c2a098",
        "type": "base64",
        "z": "7a698083.6eeeb",
        "name": "",
        "action": "",
        "property": "payload.capture",
        "x": 560,
        "y": 360,
        "wires": [
            [
                "713e3ba0.1d8164"
            ]
        ]
    },
    {
        "id": "713e3ba0.1d8164",
        "type": "function",
        "z": "7a698083.6eeeb",
        "name": "",
        "func": "var tmpimg = msg.payload.capture;\n\nd = new Date()\nmsg.filename = \"./getreq_imgs/\"+\"ID\"+msg.payload.camera_id+\"_\"+msg.payload.index+\"_\"+d.getTime()+\"_\"+msg.payload.label+\"_\"+msg.payload.result+\".jpg\";\nconsole.log('label------', msg.payload.label);\ndelete msg.payload;\nmsg.payload = tmpimg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 360,
        "wires": [
            [
                "7da8db6b.cb9d64"
            ]
        ]
    },
    {
        "id": "b653f8.d1a69c08",
        "type": "ui_text",
        "z": "7a698083.6eeeb",
        "group": "12d04580.99e09b",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Camera",
        "format": "{{ msg.payload.camera_id}}",
        "layout": "col-center",
        "className": "",
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "77e41cdb.ad5494",
        "type": "ui_text",
        "z": "7a698083.6eeeb",
        "group": "12d04580.99e09b",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Label",
        "format": "{{msg.payload.label}}",
        "layout": "col-center",
        "x": 550,
        "y": 280,
        "wires": []
    },
    {
        "id": "ef0ab25e.245fd",
        "type": "ui_text",
        "z": "7a698083.6eeeb",
        "group": "12d04580.99e09b",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "datetime",
        "format": "{{ msg.payload.datetime}}",
        "layout": "col-center",
        "x": 560,
        "y": 320,
        "wires": []
    },
    {
        "id": "7da8db6b.cb9d64",
        "type": "file",
        "z": "7a698083.6eeeb",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "88b12908.c6ee28"
            ]
        ]
    },
    {
        "id": "88b12908.c6ee28",
        "type": "template",
        "z": "7a698083.6eeeb",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1024px\" height=\"768px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1020,
        "y": 360,
        "wires": [
            [
                "77186e2e.6652a"
            ]
        ]
    },
    {
        "id": "77186e2e.6652a",
        "type": "ui_template",
        "z": "7a698083.6eeeb",
        "group": "12d04580.99e09b",
        "name": "",
        "order": 1,
        "width": 18,
        "height": 13,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1180,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d6cb36f3.3bb198",
        "type": "ui_ui-button",
        "z": "7a698083.6eeeb",
        "action": "click",
        "actionType": "str",
        "name": "",
        "group": "12d04580.99e09b",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": " GestureDetection",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "46620e1.ac5a3f"
            ]
        ]
    },
    {
        "id": "d6403376.10fc6",
        "type": "inject",
        "z": "c5766a62.95b638",
        "name": "",
        "props": [
            {
                "p": "filename",
                "v": "/opt/local/model/dataset/annotations/sources/ID01_20210422105813_0000_af.jpg",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "7e5d96bf.d6ef88"
            ]
        ]
    },
    {
        "id": "f7b7139e.19ec8",
        "type": "ui_template",
        "z": "c5766a62.95b638",
        "group": "b930fe7e.897db",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1160,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7e5d96bf.d6ef88",
        "type": "file in",
        "z": "c5766a62.95b638",
        "name": "",
        "filename": "/opt/local/model/dataset/annotations/sources/ID01_20210422105813_0000_af.jpg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "df3936ad.c8b588"
            ]
        ]
    },
    {
        "id": "df3936ad.c8b588",
        "type": "base64",
        "z": "c5766a62.95b638",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 960,
        "y": 100,
        "wires": [
            [
                "f7b7139e.19ec8"
            ]
        ]
    },
    {
        "id": "e141708f.5c149",
        "type": "inject",
        "z": "c5766a62.95b638",
        "name": "",
        "props": [
            {
                "p": "filename",
                "v": "/opt/local/model/dataset/annotations/sources/ID01_20210422105813_0000_af.jpg",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "9ff8a7c0.8020e8"
            ]
        ]
    },
    {
        "id": "9ea9e457.1389c8",
        "type": "ui_template",
        "z": "c5766a62.95b638",
        "group": "b930fe7e.897db",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1180,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9ff8a7c0.8020e8",
        "type": "file in",
        "z": "c5766a62.95b638",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "43bf0486.98d02c"
            ]
        ]
    },
    {
        "id": "43bf0486.98d02c",
        "type": "base64",
        "z": "c5766a62.95b638",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 960,
        "y": 280,
        "wires": [
            [
                "9ea9e457.1389c8"
            ]
        ]
    },
    {
        "id": "2aa9608a.eab02",
        "type": "inject",
        "z": "c5766a62.95b638",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "this is topic from the function",
        "payload": "this data is feeded to the function",
        "payloadType": "str",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "bf972eaa.fa10b"
            ]
        ]
    },
    {
        "id": "c062e883.4f8748",
        "type": "debug",
        "z": "c5766a62.95b638",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 570,
        "y": 600,
        "wires": []
    },
    {
        "id": "bf972eaa.fa10b",
        "type": "file function",
        "z": "c5766a62.95b638",
        "name": "",
        "filename": "/opt/local/bin/sample-file-function.js",
        "reloadfile": false,
        "outputs": "1",
        "x": 375,
        "y": 600,
        "wires": [
            [
                "c062e883.4f8748"
            ]
        ]
    },
    {
        "id": "ccf3e49f.190be",
        "type": "inject",
        "z": "ee47c5e8.e17bd",
        "name": "Fruits",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"title\":\"<b>Apple</b>\",\"description\":\"This is description of <font color=\\\"red\\\"><b>Apple</b></b>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Red_Apple.jpg/500px-Red_Apple.jpg\"},{\"title\":\"<b>Banana</b>\",\"description\":\"This is description of <font color=\\\"yellow\\\"><b>Banana</b></font>(no picture).\",\"icon\":null},{\"title\":\"<b>Orange</b>\",\"description\":\"This is description of <font color=\\\"orange\\\"><b>Orange</b></font>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Ambersweet_oranges.jpg/440px-Ambersweet_oranges.jpg\"},{\"title\":\"<b>Watermelon</b>\",\"description\":\"This is description of <font color=\\\"green\\\"><b>Watermelon</b></font>.\",\"icon\":\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Vampire_watermelon.jpg/440px-Vampire_watermelon.jpg\"}]",
        "payloadType": "json",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "93612884.34d35"
            ]
        ]
    },
    {
        "id": "cd592928.56da38",
        "type": "debug",
        "z": "ee47c5e8.e17bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "503b6c22.32a6fc",
        "type": "inject",
        "z": "ee47c5e8.e17bd",
        "name": "WiFi",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"title\":\"No WiFi Signal\",\"description\":\"Lost network connection\",\"icon_name\":\"signal_wifi_0_bar\"},{\"title\":\"Weak WiFi Signal\",\"description\":\"May lose network connection\",\"icon_name\":\"signal_wifi_2_bar\"},{\"title\":\"Strong WiFi Signal\",\"description\":\"Connected to network\",\"icon_name\":\"signal_wifi_4_bar\"}]",
        "payloadType": "json",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "4783aeef.e2332"
            ]
        ]
    },
    {
        "id": "ceb5f753.ed31a8",
        "type": "inject",
        "z": "ee47c5e8.e17bd",
        "name": "Day of Week",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"title\":\"Sunday\",\"isChecked\":true},{\"title\":\"Monday\"},{\"title\":\"Tuesday\"},{\"title\":\"Wednesday\"},{\"title\":\"Thursday\"},{\"title\":\"Friday\"},{\"title\":\"Saturday\",\"isChecked\":true}]",
        "payloadType": "json",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "f46b267.9f03558"
            ]
        ]
    },
    {
        "id": "ea6d6cbc.9770a8",
        "type": "debug",
        "z": "ee47c5e8.e17bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "c75bdf1a.71a15",
        "type": "debug",
        "z": "ee47c5e8.e17bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "640d11fe.215c28",
        "type": "inject",
        "z": "ee47c5e8.e17bd",
        "name": "Drink",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"title\":\"Coffee\",\"isChecked\":true},{\"title\":\"Tea\",\"isChecked\":false},{\"title\":\"Green Tea\",\"isChecked\":true}]",
        "payloadType": "json",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "b3639cb1.702ff"
            ]
        ]
    },
    {
        "id": "b7d652df.067b4",
        "type": "debug",
        "z": "ee47c5e8.e17bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 340,
        "wires": []
    },
    {
        "id": "f0859d08.93b8a8",
        "type": "inject",
        "z": "ee47c5e8.e17bd",
        "name": "Move",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"title\":\"Direction\",\"menu\":[\"East\",\"West\",\"South\",\"North\"]},{\"title\":\"Speed\",\"menu\":[\"High\",\"Middle\",\"Low\"]}]",
        "payloadType": "json",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "f577f7cb.d19068"
            ]
        ]
    },
    {
        "id": "ad3b8b.58131c78",
        "type": "debug",
        "z": "ee47c5e8.e17bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 420,
        "wires": []
    },
    {
        "id": "93612884.34d35",
        "type": "ui_list",
        "z": "ee47c5e8.e17bd",
        "group": "7e4c65d6.0419cc",
        "name": "",
        "order": 1,
        "width": 6,
        "height": 5,
        "lineType": "three",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "cd592928.56da38"
            ]
        ]
    },
    {
        "id": "f46b267.9f03558",
        "type": "ui_list",
        "z": "ee47c5e8.e17bd",
        "group": "7e4c65d6.0419cc",
        "name": "",
        "order": 3,
        "width": 4,
        "height": 7,
        "lineType": "one",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "ea6d6cbc.9770a8"
            ]
        ]
    },
    {
        "id": "4783aeef.e2332",
        "type": "ui_list",
        "z": "ee47c5e8.e17bd",
        "group": "7e4c65d6.0419cc",
        "name": "",
        "order": 2,
        "width": 6,
        "height": 5,
        "lineType": "two",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 1,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "c75bdf1a.71a15"
            ]
        ]
    },
    {
        "id": "b3639cb1.702ff",
        "type": "ui_list",
        "z": "ee47c5e8.e17bd",
        "group": "7e4c65d6.0419cc",
        "name": "",
        "order": 4,
        "width": 4,
        "height": 4,
        "lineType": "one",
        "actionType": "switch",
        "allowHTML": false,
        "outputs": 1,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "b7d652df.067b4"
            ]
        ]
    },
    {
        "id": "f577f7cb.d19068",
        "type": "ui_list",
        "z": "ee47c5e8.e17bd",
        "group": "7e4c65d6.0419cc",
        "name": "",
        "order": 9,
        "width": 6,
        "height": 2,
        "lineType": "one",
        "actionType": "menu",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 290,
        "y": 420,
        "wires": [
            [
                "ad3b8b.58131c78"
            ]
        ]
    },
    {
        "id": "8bb0eecc.744f1",
        "type": "exec",
        "z": "7897a710.e88098",
        "command": "say",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "name": "",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "23263896.dcd9c8",
                "e872b22f.178d5"
            ],
            [],
            []
        ]
    },
    {
        "id": "23263896.dcd9c8",
        "type": "debug",
        "z": "7897a710.e88098",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 796,
        "y": 169,
        "wires": []
    },
    {
        "id": "c503216.f3afce",
        "type": "inject",
        "z": "7897a710.e88098",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "\"Isn't it nice to have a computer that will talk to you?\"",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "8d68ad.ff72975"
            ]
        ]
    },
    {
        "id": "8d68ad.ff72975",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "Simple triggered queue",
        "func": "// if queue doesn't exist, create it\ncontext.queue = context.queue || [];\ncontext.busy = context.busy || false;\n\n// if the msg is a trigger one release next message\nif (msg.hasOwnProperty(\"trigger\")) {\n    if (context.queue.length > 0) {\n        var m = context.queue.shift();\n        return {payload:m};\n    }\n    else {\n        context.busy = false;\n    }\n}\nelse {\n    if (context.busy) {\n        // if busy add to queue\n        context.queue.push(msg.payload);\n    }\n    else {\n        // otherwise we are empty so just pass through and set busy flag\n        context.busy = true;\n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 355,
        "y": 179,
        "wires": [
            [
                "8bb0eecc.744f1"
            ]
        ]
    },
    {
        "id": "e872b22f.178d5",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "set trigger",
        "func": "// handle the return from the exec in here \n// if all is good then set msg.trigger property to exist\nmsg.trigger = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 635,
        "y": 333,
        "wires": [
            [
                "8d68ad.ff72975"
            ]
        ]
    },
    {
        "id": "4911b967.24ef58",
        "type": "inject",
        "z": "7897a710.e88098",
        "name": "Generate Temp, Humidity 5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "d8d8507f.5db5"
            ]
        ]
    },
    {
        "id": "214817f8.7eb3e8",
        "type": "http request",
        "z": "7897a710.e88098",
        "name": "REST PUT -> ThingWrox ",
        "method": "PUT",
        "ret": "txt",
        "url": "http://192.168.1.10:8080/Thingworx/Things/Building12/Properties/*",
        "tls": "",
        "x": 784.0000915527344,
        "y": 672,
        "wires": [
            [
                "5994701.9200d9",
                "ff815965.15afd8"
            ]
        ]
    },
    {
        "id": "2ed759d1.f63c76",
        "type": "debug",
        "z": "7897a710.e88098",
        "name": "HTTP PUT Messasge ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 969.0000305175781,
        "y": 544,
        "wires": []
    },
    {
        "id": "5994701.9200d9",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "Detect HTTP Status",
        "func": "var newMsg = {};\n\nif ( msg.statusCode !== 200 ) {\n    // 'ECONNREFUSED') \n    // 405 : method not allowed\n    console.log(\"Failed !!! statusCode = \", msg.statusCode);\n    newMsg.payload = { op: \"connection\", connected : 0 , statusCode :  msg.statusCode };\n} else \n    newMsg.payload = { op: \"connection\", connected : 1 , statusCode :  msg.statusCode };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 517.8999938964844,
        "y": 736,
        "wires": [
            [
                "cdc0336b.69b3e"
            ]
        ]
    },
    {
        "id": "c76fa51a.555828",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "Build HTTP Header w/ appKey",
        "func": "\n// payload\nvar newMsg = {};\nnewMsg.payload = msg.payload;\n\nnewMsg.headers = {};\nnewMsg.headers['Accept'] = \"application/json\";\nnewMsg.headers['content-type'] = \"application/json\";\nnewMsg.headers['content-length'] = newMsg.payload.length;\nnewMsg.headers[\"appKey\"] = '*********-4958-45db-9789-**********';\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 712.8999938964844,
        "y": 594,
        "wires": [
            [
                "214817f8.7eb3e8",
                "2ed759d1.f63c76"
            ]
        ]
    },
    {
        "id": "cdc0336b.69b3e",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "Event Queue (max 20)",
        "func": "context.queue = context.queue || [];\nvar http_connected = context.connected || 0 ;\n\nvar totalAllowedQueueSize = 20;\nvar blocked = false;\nvar newMsg = null;\n\nif (context.queue.length >= totalAllowedQueueSize) blocked = true;\n\nswitch( msg.payload.op ) {\ncase \"connection\" :\n    context.connected = msg.payload.connected;\n    http_connected = msg.payload.connected;\n    break;\ncase \"reset\" :\n    context.queue = [];\n    blocked = false;\n    context.connected = 1;\n    break;\ncase \"trigger\" :\n    // dequeue\n    if ( context.queue.length !== 0 && http_connected ) newMsg = { payload : context.queue.shift() } ;\n    else newMsg = { payload : { op : \"trigger\" } };\n    break;\ndefault :\n    // enqueue\n    if ( !blocked ) context.queue.push(msg.payload);\n    break;\n}\n\nif (http_connected) {\n    if( !blocked )\n        node.status({fill:\"green\",shape:\"dot\",text: '('+context.queue.length+') stored, connected' });\n    else \n        node.status({fill:\"red\",shape:\"ring\",text: 'blocked,('+context.queue.length+') stored, connected' });\n} else {\n    if( !blocked ) \n        node.status({fill:\"red\",shape:\"dot\",text: '('+context.queue.length+') stored, disconnected' });\n    else\n        node.status({fill:\"red\",shape:\"ring\",text: 'blocked,('+context.queue.length+') stored, disconnected' });\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450.8999938964844,
        "y": 596,
        "wires": [
            [
                "c76fa51a.555828"
            ]
        ]
    },
    {
        "id": "4745042.308b8fc",
        "type": "inject",
        "z": "7897a710.e88098",
        "name": "Trigger Event every 3s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": " { \"op\" : \"trigger\" }",
        "payloadType": "json",
        "x": 181.89999389648438,
        "y": 649,
        "wires": [
            [
                "cdc0336b.69b3e"
            ]
        ]
    },
    {
        "id": "d8d8507f.5db5",
        "type": "function",
        "z": "7897a710.e88098",
        "name": "Read Temp, Humidity Values",
        "func": "var tempF = Math.floor(Math.random() * 40 + 60);\nvar tempC = Math.floor( (tempF-32)/1.8 ) ;\nvar humidity = Math.floor(Math.random() * 80 + 20);\nmsg.payload = {\n    op : \"store\",\n    timestamp : Math.floor(Date.now() / 1000),\n    Temperature: tempF,\n    Humidity: humidity,\n    Location : \"B12\"\n    };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 486.8999938964844,
        "y": 500,
        "wires": [
            [
                "cdc0336b.69b3e"
            ]
        ]
    },
    {
        "id": "9683d41c.1a5358",
        "type": "inject",
        "z": "7897a710.e88098",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"op\" : \"reset\"}",
        "payloadType": "json",
        "x": 132.89999389648438,
        "y": 567,
        "wires": [
            [
                "cdc0336b.69b3e"
            ]
        ]
    },
    {
        "id": "bdac5bea.6d4128",
        "type": "comment",
        "z": "7897a710.e88098",
        "name": "Events",
        "info": "",
        "x": 121.89999389648438,
        "y": 455,
        "wires": []
    },
    {
        "id": "ff815965.15afd8",
        "type": "debug",
        "z": "7897a710.e88098",
        "name": "HTTP Response Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 964.8999938964844,
        "y": 745,
        "wires": []
    },
    {
        "id": "4ca174e.870b18c",
        "type": "comment",
        "z": "7897a710.e88098",
        "name": "Periodic Reporting",
        "info": "",
        "x": 156.89999389648438,
        "y": 610,
        "wires": []
    },
    {
        "id": "f581d59d.b605f8",
        "type": "comment",
        "z": "7897a710.e88098",
        "name": "Simpel Queue (or Time-series dataase)",
        "info": "",
        "x": 413.8999938964844,
        "y": 552,
        "wires": []
    },
    {
        "id": "31159496.c04d3c",
        "type": "inject",
        "z": "7ec673c9.e0231c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "66914930.c2d658"
            ]
        ]
    },
    {
        "id": "66914930.c2d658",
        "type": "file in",
        "z": "7ec673c9.e0231c",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 460,
        "y": 300,
        "wires": [
            [
                "29bf752e.97214a"
            ]
        ]
    },
    {
        "id": "29bf752e.97214a",
        "type": "debug",
        "z": "7ec673c9.e0231c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "afc87756.fa10b8",
        "type": "ui_template",
        "z": "d475ecd.031771",
        "group": "d08e9520.258a68",
        "name": "www CASE-1",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<iframe style=\"width:1024px; height:768px;\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"http://127.0.0.1:1880/ui\"></iframe>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 200,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "40482177.577fb",
        "type": "ui_template",
        "z": "d475ecd.031771",
        "group": "d08e9520.258a68",
        "name": "www CASE-2",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<iframe style=\"width:1024px; height:768px;\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"http://127.0.0.1:1880\"></iframe>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 200,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "18fa45e.dd993ba",
        "type": "debug",
        "z": "d475ecd.031771",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "d649825e.ab13d",
        "type": "inject",
        "z": "d475ecd.031771",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "3197e4b9.85addc"
            ]
        ]
    },
    {
        "id": "3197e4b9.85addc",
        "type": "func-exec",
        "z": "d475ecd.031771",
        "d": true,
        "name": "",
        "func": "var exec = child_process.exec('cd /opt/local/model/learn/darknet-marine && ./darknet detector train ./_custom_running/data/obj.data ./_custom_running/yolov4-custom.cfg ./model_data/yolov4-tiny.conv.29 -dont_show -mjpeg_port 8097 -map', (error, stdout, stderr) => { \n    if (error) { \n    console.error(`exec error: ${error}`); \n    return; \n    } \n    console.log(`stdout: ${stdout}`); \n    console.log(`stderr: ${stderr}`); \n    msg.payload = stdout;\n    callback(msg);\n}); ",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 500,
        "wires": [
            [
                "18fa45e.dd993ba"
            ]
        ]
    },
    {
        "id": "9991289.0acead8",
        "type": "template",
        "z": "c262c5dc.3751c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1024px\" height=\"768px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1843.000015258789,
        "y": 369.0000009536743,
        "wires": [
            [
                "1c654ae7.49b8e5"
            ]
        ]
    },
    {
        "id": "c3f69ee1.541af",
        "type": "file",
        "z": "c262c5dc.3751c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1554,
        "y": 371.0000009536743,
        "wires": [
            [
                "9991289.0acead8"
            ]
        ]
    },
    {
        "id": "ee7ae682.608ed8",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "var tmpimg = msg.payload;\nd = new Date()\nmsg.filename = \"./getreq_imgs/\"+\"ID\"+flow.get(\"edge_id\")+\"_\"+d.getTime()+\".jpg\";\ndelete msg.payload;\nmsg.edge_id = flow.get(\"edge_id\")\nmsg.payload = tmpimg;\nmsg.randnum = Math.round(Math.random()*1000000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 370.0000410079956,
        "wires": [
            [
                "c3f69ee1.541af"
            ]
        ]
    },
    {
        "id": "9d3123cb.ea19b8",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "if(msg.statusCode !== 200){\n    node.status({fill:\"red\",shape:\"dot\",text:\"error\"});\n    return [null,msg];\n}\nelse{\n    node.status({fill:\"green\",shape:\"dot\",text:\"done\"});\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 380,
        "wires": [
            [
                "3190f33b.dc601c",
                "ee7ae682.608ed8"
            ],
            [
                "6d755cc7.45d434"
            ]
        ]
    },
    {
        "id": "6d755cc7.45d434",
        "type": "template",
        "z": "c262c5dc.3751c",
        "name": "err noti",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div width=\"300px\" style=\"word-break: break-word;\"> URL: <font color=\"red\"><b>{{url}}<br/>{{payload}}<b></font></div>",
        "output": "str",
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "e5214bbd.c9a408",
                "69814651.1ff468"
            ]
        ]
    },
    {
        "id": "e5214bbd.c9a408",
        "type": "ui_toast",
        "z": "c262c5dc.3751c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "ERROR",
        "name": "err noti for single shot",
        "x": 1600,
        "y": 600,
        "wires": []
    },
    {
        "id": "1c654ae7.49b8e5",
        "type": "ui_template",
        "z": "c262c5dc.3751c",
        "group": "bc32925c.2c2248",
        "name": "",
        "order": 4,
        "width": 17,
        "height": 14,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2020,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "18ad61c6.21a4be",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "var edge_id = Number(msg.payload.title);\nflow.set(\"edge_id\", edge_id);\n\nlet agent_port = \"5500\"+edge_id.toString();\nlet agent_ip = \"129.254.73.56\";\n\nmsg.edge_id = \"0\"+edge_id.toString();\nmsg.method = \"GET\";\nmsg.url = \"http://\"+agent_ip+\":\"+agent_port+\"/view\";\nmsg.requestTimeout = 30000;\n\nconsole.log('URL', msg.url);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "f6f66462.b0828",
                "becc9201.66b82",
                "a31ba421.66f9a8"
            ]
        ]
    },
    {
        "id": "69814651.1ff468",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "msg.filename = \"./getreq_imgs/black.png\"\nmsg.randnum = Math.round(Math.random()*1000000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1560,
        "y": 520,
        "wires": [
            [
                "acd8536f.dcf878"
            ]
        ]
    },
    {
        "id": "acd8536f.dcf878",
        "type": "template",
        "z": "c262c5dc.3751c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1024px\" height=\"768px\" align=\"center\" src=\"/{{filename}}?{{randnum}}\"/>",
        "output": "str",
        "x": 1840,
        "y": 520,
        "wires": [
            [
                "1c654ae7.49b8e5"
            ]
        ]
    },
    {
        "id": "3cb04f31.ed7b6",
        "type": "ui_ui_control",
        "z": "c262c5dc.3751c",
        "name": "",
        "events": "change",
        "x": 1360,
        "y": 460,
        "wires": [
            [
                "69814651.1ff468"
            ]
        ]
    },
    {
        "id": "59671ceb.e50c94",
        "type": "ui_list",
        "z": "c262c5dc.3751c",
        "group": "bc32925c.2c2248",
        "name": "",
        "order": 2,
        "width": 2,
        "height": 18,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "IPTIME#01",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "18ad61c6.21a4be",
                "205b4d52.2e09b2",
                "35c991c4.80551e"
            ]
        ]
    },
    {
        "id": "f6f66462.b0828",
        "type": "ui_text",
        "z": "c262c5dc.3751c",
        "group": "bc32925c.2c2248",
        "order": 5,
        "width": 17,
        "height": 1,
        "name": "",
        "label": "Edge#",
        "format": "{{msg.edge_id}}",
        "layout": "row-center",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "205b4d52.2e09b2",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "msg.filename = \"./getreq_imgs/white.png\"\nmsg.randnum = Math.round(Math.random()*1000000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1640,
        "y": 120,
        "wires": [
            [
                "acd8536f.dcf878"
            ]
        ]
    },
    {
        "id": "f99868e9.507438",
        "type": "ui_toast",
        "z": "c262c5dc.3751c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "SUCCESS",
        "name": "success noti for single shot",
        "x": 1560,
        "y": 220,
        "wires": []
    },
    {
        "id": "3190f33b.dc601c",
        "type": "template",
        "z": "c262c5dc.3751c",
        "name": "success noti",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div width=\"300px\" style=\"word-break: break-word;\"> URL: <font color=\"green\"><b>{{url}}</font></div>",
        "output": "str",
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "f99868e9.507438"
            ]
        ]
    },
    {
        "id": "35c991c4.80551e",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "msg.topic = \"\";\nmsg.agent_oid = \".1.3.6.1.2.1.25.1.8\";\nmsg.debugon = true;\nmsg.snmp_to = 2;\nmsg.id = -1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 700,
        "wires": [
            [
                "ccb67f0d.e3d5c"
            ]
        ]
    },
    {
        "id": "3061a600.859ac2",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "Update table",
        "func": "// if(msg.payload == false) {\n//     return;\n// }\n\nif(msg.edge_id == -1){\n    console.log(\"edge_id is -1\");\n    return;\n}\n\nvar connval = \"\";\nif (msg.contmode_value == 0){\n    connval = \"Failed\";\n}\nelse if (msg.contmode_value == 1){\n    connval = \"Connected\";\n}\n\n\nmsg.payload={\n    command:\"updateOrAddData\",\n    arguments: [\n        [\n            {\n            \"id\":msg.id,\n            \"ram_free_value\":msg.ram_free_value,\n            \"temp_value\":msg.temp_value,\n            \"contmode_value\":connval\n            }\n        ]\n    ],\n    returnPromise: true\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "1640be8e.923301"
            ]
        ]
    },
    {
        "id": "1640be8e.923301",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "table recorder",
        "func": "var success = (msg.topic && msg.topic===\"success\") || false;\nvar tableData = flow.get(\"tableData\");\nif (tableData === undefined) {\n    tableData = [];\n    console.log(\"table init.\")\n    flow.set(\"tableData\",tableData);\n}\n\n// find the index for a row in tableData for a given index (id)\nfunction checkIndex(id) {\n    let matchRow=-1\n    tableData.forEach(function (row,index){\n        if (row.id === id){\n            matchRow=index;\n            return matchRow;\n        }\n    })\n    return matchRow;\n}\n\n// flat merge one row \nfunction mergeRow(dest,source) {\n    Object.keys(source).forEach(function(key) {\n        dest[key]=source[key];\n    })\n}\n\n//merge or add one or many rows into tableData \nfunction mergeData(newData,toTop) {\n    newData.forEach(function (item,index) {\n        //node.warn([\"findIndex\",item]);\n        let row=checkIndex(item.id);\n        if (row<0) { // row do not existst in tableData\n            if (toTop) {\n                tableData.push(item);\n                status.text+=\"newRow @ top\";\n            } else {\n                tableData.unshift(item);\n                status.text+=\"newRow @ bottom\";\n            }\n            return;\n        } else { // row exists so update\n            mergeRow(tableData[row],item);\n            status.text+=\"row updated\";\n            return;\n        }\n        if (status.text!==\"\") node.status(status);\n    });\n}\n\nswitch (typeof msg.payload){\n    case \"string\":\n        //node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        switch (msg.payload){\n            case \"change\":\n                status={fill:\"green\",shape:\"dot\",text:\"table restored \"+tableData.length+\" rows\"};\n                msg.payload=tableData;\n                break;\n            case \"gettableData\":\n                msg.topic = \"enabledcoll\";\n                msg.payload=[];\n                msg.payload.push(tableData);\n                msg.dcoll_args = msg.dcoll_args;\n                return [null, msg];\n                break;\n            case \"getdataforlist\":\n                msg.topic = \"\";\n                msg.payload=[];\n                msg.payload.push(tableData);\n                return [null, msg];\n                break;\n                \n        }\n        break;\n    case \"object\":\n        //node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        status={fill:\"green\",shape:\"dot\",text:\"payload object\"};\n        if (Array.isArray(msg.payload)) { // replace all tableData\n            status={fill:\"green\",shape:\"dot\",text:\"table replaced \"+msg.payload.length+\" rows\"};\n            tableData=RED.util.cloneMessage(msg.payload); \n        } else {\n            status={fill:\"green\",shape:\"dot\",text:\"not array\"};\n            switch (msg.payload.command) { // clearData does not return a promise!\n                case \"clearData\":\n                    status={fill:\"green\",shape:\"dot\",text:\"clearData: done\"};\n                    tableData=[];\n                    flow.set(\"lastId\",0);\n                    break;\n            }\n        }\n        break;\n    default: // likely a msg fom a ui-table command or callback\n        if (msg.hasOwnProperty(\"topic\")&&\n            msg.hasOwnProperty(\"ui_control\") && \n            msg.ui_control.hasOwnProperty(\"callback\") &&\n            msg.hasOwnProperty(\"return\")) { // message originates from a ui-table callback\n            if (success) {\n                switch(msg.return.command) {\n                    case \"addRow\":\n                        status.text=\"addRow: \";\n                        mergeData(msg.return.arguments[0],msg.return.arguments[1]);\n                        status.shape=\"dot\";\n                        break;\n                    case \"updateOrAddData\":\n                        status.text=\"updateOrAddData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    case \"deleteRow\":\n                        let row=checkIndex(msg.return.arguments[0]);\n                        tableData.splice(row,1);\n                        status.shape=\"dot\";\n                        status.text=\"deleteRow: \"+row+\" deleted\";\n                        break;\n                    default:\n                        status={fill:\"yellow\",shape:\"dot\",text:msg.return.command + \" unknown!\"};\n                        break;         \n                }\n            } else {\n                status.text=msg.topic+\" \"+msg.error;\n            }\n        }\n        break;\n}\nif (success) status.fill=\"green\";\nflow.set(\"tableData\",tableData);\nnode.status(status);\n\nmsg.ui_control={\"tabulator\":{\n\"groupHeader\":\n    \"function (value, count, data, group) {\\\n        return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\"\\\"+((count>1) ? \\\" items\\\" : \\\"\\\") + \\\")</span>\\\";\\\n    }\",\n    \"columns\":[ \n        {\"formatterParams\":{\"target\":\"_blank\"},\n            \"title\":\"ID\",\"field\":\"id\",\"width\":70,\"frozen\":true,\"align\":\"right\"}, \n        {\"formatterParams\":{\"target\":\"_blank\"},\n            \"title\":\"Info. from snmp\", \n            \"columns\":[ \n                {\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Status\",\"field\":\"contmode_value\",\"formatter\":\"function(cell, formatterParams, onRendered){     var html=\\\"<i class=\\\\\\\"\\\";\\\n                if (cell.getValue()==\\\"Connected\\\") html+=\\\"fa fa-video-camera\\\"; \\\n                else if (cell.getValue()==\\\"Failed\\\") html+=\\\"fa fa-ban\\\"; \\\n                html+='\\\\\\\"></i>';     return html; }\",\"width\":100,\"align\":\"center\"},\n                {\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"blue\",\"green\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU Load\",\"field\":\"cpu_load_value\",\"formatter\":\"progress\",\"width\":250}, \n                {\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"blue\",\"green\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"RAM Free\",\"field\":\"ram_free_value\",\"formatter\":\"progress\",\"width\":250}, \n                {\"formatterParams\":{\"target\":\"_blank\",\"min\":40,\"max\":80,\"color\":[\"blue\",\"green\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+'°C' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Temperature\",\"field\":\"temp_value\",\"formatter\":\"progress\",\"width\":250} \n            ]\n        }\n    ],\n\"layout\":\"fitColumns\",\"movableColumns\":false,\"groupBy\":\"contmode_value\",\"selectable\":false,\n}};\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 900,
        "wires": [
            [
                "e5161265.ea8b58"
            ],
            []
        ],
        "icon": "font-awesome/fa-database",
        "info": "# simple ui-table handler\n## abstract\nUsing ui-table with commands offer the hole flexibilty of tabulator. The table can be manipulated down to cell level.\nAs the ui-table node only passes the commands to tabulator and receives promises back the node does not hold the table data. If the data should be available after refresh, tab change, new connections the flow is responsible to cache the data and all the manipulations.\nThis node takes care of most simple data manipulation commands and holds a copy of the data in `flow.context.tabledata`\n\n## details\n\n### row index (id)\n\nTo identify a [row a index](http://tabulator.info/docs/4.5/data#overview) column has to be defined. This colum defaults to `id` but can be changed by specifing a **field** by using `msg.ui_control`. In this example the row index is a simple counter adding up by one if a new line is added.\n\n### addRow command\n\n[details @ tabulator addRow docs](http://tabulator.info/docs/4.5/update#alter-add)\n\nYou can add a row by sending the `addRow` command. You can decide if the row adds on the top or at the bottom of table.\n\n### addOrUpdate command\n\n[details @ tabulator addOrUpdate docs](http://tabulator.info/docs/4.5/update#alter-update)\n\nTo update data the best way is to use the `addOrUpdate` command. If the row indetified by the index is not exeisting a new row will be added automatically\n\n### deleteRow command\n\n[details @ tabulator deleteRow docs](http://tabulator.info/docs/4.5/update#row)\n\nDelete one or more rows (passing an array always results in \"row not found error\"! I think there is an issue in tabulator)\n\n### clearData\n\n[details @ tabulator clearData docs](http://tabulator.info/docs/4.5/update#alter-empty)\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "e5161265.ea8b58",
        "type": "ui_table",
        "z": "c262c5dc.3751c",
        "group": "bc32925c.2c2248",
        "name": "info from snmp",
        "order": 3,
        "width": 17,
        "height": 3,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 1420,
        "y": 700,
        "wires": [
            [
                "1640be8e.923301"
            ]
        ]
    },
    {
        "id": "177a98b4.97ffc7",
        "type": "ui_ui_control",
        "z": "c262c5dc.3751c",
        "name": "",
        "events": "all",
        "x": 1020,
        "y": 1020,
        "wires": [
            [
                "1640be8e.923301"
            ]
        ]
    },
    {
        "id": "fcfe4fda.a2d8a8",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "Init. table",
        "func": "\nmsg.payload=[];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 700,
        "wires": [
            [
                "e5161265.ea8b58",
                "1640be8e.923301"
            ]
        ]
    },
    {
        "id": "8ba28160.787848",
        "type": "delay",
        "z": "c262c5dc.3751c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 980,
        "y": 800,
        "wires": [
            [
                "3061a600.859ac2"
            ]
        ]
    },
    {
        "id": "7ccb24aa.294724",
        "type": "ui_ui_control",
        "z": "c262c5dc.3751c",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "9b9c7a48.1fd2f8"
            ]
        ]
    },
    {
        "id": "9b9c7a48.1fd2f8",
        "type": "function",
        "z": "c262c5dc.3751c",
        "name": "",
        "func": "msg.payload = [{\"title\":\"1\",\"description\":\"(edge_1)\"},{\"title\":\"2\",\"description\":\"(edge_2)\"},{\"title\":\"3\",\"description\":\"(edge_3)\"},{\"title\":\"4\",\"description\":\"(edge_4)\"},{\"title\":\"5\",\"description\":\"(edge_5)\"}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "59671ceb.e50c94"
            ]
        ]
    },
    {
        "id": "becc9201.66b82",
        "type": "debug",
        "z": "c262c5dc.3751c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 140,
        "wires": []
    },
    {
        "id": "ec0e6c82.d39988",
        "type": "ui_ui-button",
        "z": "c262c5dc.3751c",
        "action": "click",
        "actionType": "str",
        "name": "",
        "group": "bc32925c.2c2248",
        "order": 1,
        "width": 19,
        "height": 1,
        "passthru": false,
        "label": "Network Topology",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "3cb2de4e.1bd46a"
            ]
        ]
    },
    {
        "id": "3cb2de4e.1bd46a",
        "type": "template",
        "z": "c262c5dc.3751c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1100px\" height=\"800px\" align=\"center\" src=\"/bp.png\"/>",
        "output": "str",
        "x": 320,
        "y": 60,
        "wires": [
            [
                "8f08cc87.f0cee"
            ]
        ]
    },
    {
        "id": "8f08cc87.f0cee",
        "type": "ui_toast",
        "z": "c262c5dc.3751c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "Network Topology",
        "name": "Network Topology",
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "75ebad06.db4f94",
        "type": "comment",
        "z": "c262c5dc.3751c",
        "name": "node-red-contrib-ui-actions (UI button)",
        "info": "",
        "x": 250,
        "y": 20,
        "wires": []
    },
    {
        "id": "a31ba421.66f9a8",
        "type": "http request",
        "z": "c262c5dc.3751c",
        "name": "",
        "method": "use",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "9d3123cb.ea19b8"
            ]
        ]
    },
    {
        "id": "aaea1256.8e75",
        "type": "comment",
        "z": "c262c5dc.3751c",
        "name": "Return : a binary buffer",
        "info": "",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "ccb67f0d.e3d5c",
        "type": "func-exec",
        "z": "c262c5dc.3751c",
        "name": "snmp",
        "func": "var edge_id = Number(msg.payload.title);\n\nif (msg.payload == false) {\n    node.status({fill:\"blue\",shape:\"dot\",text:\"off\"});\n    msg.payload = [];\n    return msg;\n}\n\nvar agent_ip = \"129.254.73.56\";\nvar agent_port = \"5161\"+edge_id.toString();\n\ncmd = \"snmpget -t \"+msg.snmp_to+\" -v1 -Cf -c public \"+agent_ip+\":\"+agent_port+\" \"+msg.agent_oid;\nif (msg.debugon) {\n    console.log(\"[\"+edge_id+\"]: *cmd*: \"+cmd);\n}\nnode.status({fill:\"blue\",shape:\"dot\",text:\"wait...\"});\nvar exec = child_process.exec(cmd, (error, stdout, stderr) => { \n    if (error) { \n        if (msg.debugon) {\n            console.error(`[${edge_id}] *cmd*failed*: ${error}`); \n        }\n        node.status({fill:\"red\",shape:\"dot\",text:\"edge_id = \" + edge_id});\n        msg.id = edge_id;\n        msg.cpu_load_value = 0;\n        msg.ram_free_value = 0;\n        msg.temp_value = -1;\n        msg.contmode_value = 0;\n        node.send(msg);\n        return;\n    } \n    node.status({fill:\"green\",shape:\"dot\",text:\"edge_id = \" + edge_id});\n    msg.id = edge_id;\n    msg.temp_value = stdout;\n    console.log(\"--------\" + stdout);\n    \n    \n    let words = stdout.split(\"STRING: \")[1].split(\":\");\n    console.log('=========', words, words.length);\n    if (words.length >= 3)\n    {\n        msg.cpu_load_value = words[0].split('\"')[1];\n        msg.ram_free_value = words[1];\n        msg.temp_value = words[2];\n        console.log('=========', msg.cpu_load_value, msg.ram_free_value, msg.temp_value);\n    }\n    \n    msg.contmode_value = 1;\n    if (msg.debugon) {\n        console.log(\"[\"+edge_id+\"]: *cmd*success*: \"+stdout);\n    }\n    callback(msg);\n});\n\nnode.status({fill:\"black\",shape:\"dot\",text:\"wait...\"});",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 700,
        "wires": [
            [
                "8ba28160.787848",
                "fcfe4fda.a2d8a8"
            ]
        ]
    },
    {
        "id": "6456763b.e07d78",
        "type": "fs-ops-dir",
        "z": "b33d70d0.51b7b",
        "name": "",
        "path": "payload",
        "pathType": "msg",
        "filter": "*.jpg",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "35811671.90ebea",
                "572a14c4.62aa3c"
            ]
        ]
    },
    {
        "id": "35811671.90ebea",
        "type": "fs-ops-stats",
        "z": "b33d70d0.51b7b",
        "name": "",
        "path": "payload",
        "pathType": "msg",
        "filename": "files",
        "filenameType": "msg",
        "stats": "stats",
        "sizeType": "msg",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "20ef5f9.b8d63a",
                "ee6515ea.f968c8"
            ]
        ]
    },
    {
        "id": "7dbdf6ef.a73868",
        "type": "inject",
        "z": "b33d70d0.51b7b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/home/bblee40/.node-red/tensorflow-yolov4-tflite-marine/data/img",
        "payloadType": "str",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "6456763b.e07d78"
            ]
        ]
    },
    {
        "id": "dd9228cf.983768",
        "type": "debug",
        "z": "b33d70d0.51b7b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "combined",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 240,
        "wires": []
    },
    {
        "id": "572a14c4.62aa3c",
        "type": "debug",
        "z": "b33d70d0.51b7b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "files",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "20ef5f9.b8d63a",
        "type": "debug",
        "z": "b33d70d0.51b7b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "stats",
        "targetType": "msg",
        "x": 720,
        "y": 240,
        "wires": []
    },
    {
        "id": "ee6515ea.f968c8",
        "type": "function",
        "z": "b33d70d0.51b7b",
        "name": "Combine and sort",
        "func": "var combined = [];\n\nfor (var i = 0; i < msg.files.length; i++) {\n    var file = msg.files[i];\n    var stat = msg.stats[i];\n    \n    combined.push({\n        path: msg.payload,\n        file,\n        ...stat\n    })\n    console.log(\"file name =\", file)\n}\n\ncombined.sort((a, b) => b.birthtimeMs - a.birthtimeMs);\n\nconsole.log(\"combined[]'s size =\", combined.length)\n\nmsg.combined = combined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 180,
        "wires": [
            [
                "dd9228cf.983768",
                "50034043.e2347"
            ]
        ]
    },
    {
        "id": "50034043.e2347",
        "type": "change",
        "z": "b33d70d0.51b7b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "combined[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 180,
        "wires": [
            [
                "4f9068e.e12c498"
            ]
        ]
    },
    {
        "id": "4f9068e.e12c498",
        "type": "debug",
        "z": "b33d70d0.51b7b",
        "name": "newest JPG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 180,
        "wires": []
    },
    {
        "id": "25428842.245c68",
        "type": "comment",
        "z": "b33d70d0.51b7b",
        "name": "Directory gets list of JPGs.   File Stats gets their details.  combine and sort puts data together and sorts.  Switch node takes 1st item and puts it in payload",
        "info": "",
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "46ffc819.b736f8",
        "type": "http request",
        "z": "b33d70d0.51b7b",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "https://dummyimage.com/200x150/000/fff&text={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 520,
        "wires": [
            [
                "d603e881.2fa1c8"
            ]
        ]
    },
    {
        "id": "25d928c1.708098",
        "type": "inject",
        "z": "b33d70d0.51b7b",
        "name": "Generate next image",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 520,
        "wires": [
            [
                "878f8ec1.effe4"
            ]
        ]
    },
    {
        "id": "878f8ec1.effe4",
        "type": "function",
        "z": "b33d70d0.51b7b",
        "name": "image counter",
        "func": "var count = flow.get(\"count\")||0;\n\ncount++;\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Image \" + count});\n\n// Save the new value back to context so it will be available next time\nflow.set('count',count);\n\n// Update the message payload and return - no need to create a new msg\nmsg.payload = \"Image \" + count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 520,
        "wires": [
            [
                "46ffc819.b736f8"
            ]
        ]
    },
    {
        "id": "d603e881.2fa1c8",
        "type": "image",
        "z": "b33d70d0.51b7b",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": true,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 800,
        "y": 520,
        "wires": []
    },
    {
        "id": "12e4350f.927c8b",
        "type": "ui_template",
        "z": "911ed596.217108",
        "group": "f89749a5.94da88",
        "name": "html progressbar",
        "order": 0,
        "width": "10",
        "height": "2",
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n    .w3-center, .w3-hover-center:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n        text-align: center;\n    }\n</style>\n\n<div>\n    <div class=\"w3-border\">\n      <div class=\"w3-green w3-center\" style=\"height:24px; width:{{msg.counter}}%\">{{msg.counter}}%</div>\n      <span ng-if=\"msg.counter === null\">COMPLETE !</span>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 320,
        "wires": [
            [
                "25e87421.a883bc"
            ]
        ]
    },
    {
        "id": "f74488e9.850e88",
        "type": "counter-loop",
        "z": "911ed596.217108",
        "name": "",
        "counter": "counter",
        "counterType": "msg",
        "reset": true,
        "resetValue": "value-null",
        "initial": "1",
        "initialType": "num",
        "operator": "lt",
        "termination": "100",
        "terminationType": "num",
        "increment": "10",
        "incrementType": "num",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "12e4350f.927c8b"
            ],
            [
                "12e4350f.927c8b"
            ]
        ]
    },
    {
        "id": "57acc564.c0680c",
        "type": "delay",
        "z": "911ed596.217108",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "f74488e9.850e88"
            ]
        ]
    },
    {
        "id": "62239d86.34dd34",
        "type": "ui_button",
        "z": "911ed596.217108",
        "name": "",
        "group": "f89749a5.94da88",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "rounded_corner",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "f74488e9.850e88"
            ]
        ]
    },
    {
        "id": "25e87421.a883bc",
        "type": "switch",
        "z": "911ed596.217108",
        "name": "continue if counter is defined",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 420,
        "wires": [
            [
                "57acc564.c0680c"
            ]
        ]
    },
    {
        "id": "2251a0cc.12836",
        "type": "inject",
        "z": "911ed596.217108",
        "name": "On Start",
        "props": [
            {
                "p": "counter",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "12e4350f.927c8b"
            ]
        ]
    },
    {
        "id": "de02ba1e.fe4118",
        "type": "inject",
        "z": "911ed596.217108",
        "name": "Init Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"t\":\"white\",\"b\":\"green\",\"l\":\"start\",\"h\":\"refresh\"}",
        "payloadType": "json",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "62239d86.34dd34"
            ]
        ]
    },
    {
        "id": "fb4687a3c628dde4",
        "type": "ui_template",
        "z": "911ed596.217108",
        "group": "f89749a5.94da88",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<img src=\"https://www.quicksilver-boats.com/media/391646/755-sundeck-running-268_original_hero_2000x1125.jpg?anchor=center&mode=crop&width=616&height=347&rnd=132161251460000000\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ca04dd866dd10c02",
        "type": "ui_template",
        "z": "911ed596.217108",
        "group": "f89749a5.94da88",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<img src=\"/test_img.png\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "59ff2a1.fa600d4",
        "type": "http in",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "url": "/hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "54c1e70d.ab3e18",
                "fe531149fd5ea436"
            ]
        ]
    },
    {
        "id": "54c1e70d.ab3e18",
        "type": "template",
        "z": "a3751c6137bb0d6d",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "266c286f.d993d8"
            ]
        ]
    },
    {
        "id": "266c286f.d993d8",
        "type": "http response",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "997764af43bea73c",
        "type": "comment",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "info": "$ curl http://localhost:1880/hello\n<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>\n\n\n\n$ curl -u userid:password  http://localhost:1880/hello\n\n$ curl -u user:admin  http://localhost:1880/hello ",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "fe531149fd5ea436",
        "type": "debug",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 220,
        "wires": []
    },
    {
        "id": "6fbed3c2eee821d3",
        "type": "http in",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "url": "/post-up",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "447f5dfba3bb01c3",
                "ad1b1006d63f34c6"
            ]
        ]
    },
    {
        "id": "447f5dfba3bb01c3",
        "type": "debug",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "a0e787689b0de35a",
        "type": "comment",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "info": "curl -u user:admin -d \"param1=value1&param2=value2\" -X POST http://localhost:1880/post-up",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "ad1b1006d63f34c6",
        "type": "template",
        "z": "a3751c6137bb0d6d",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "e4395e8d9d2ae228"
            ]
        ]
    },
    {
        "id": "e4395e8d9d2ae228",
        "type": "http response",
        "z": "a3751c6137bb0d6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 340,
        "wires": []
    }
]